{"version":3,"file":"lib_index_js.acce5f2769653c15d0ba.js","mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC4D;AACJ;AACnB;AAC9B;AACP;AACA;AACA;AACA;AACA,2BAA2B,sEAAoB;AAC/C;AACA,gBAAgB,6DAAyB;AACzC;AACA,SAAS;AACT;AACA,mBAAmB,kEAAkB;AACrC;AACA,SAAS;AACT;AACA;;;;;;;;;;;;;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC+C;AACS;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACO,kDAAkD;AACzD;AACA,qBAAqB,+EAA6B;AAClD,uBAAuB,8DAAW;AAClC;AACA;AACA;AACA,yBAAyB,8EAA4B;AACrD;AACA;AACA,kBAAkB,+EAA6B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,gFAA8B;AAChD;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC0D;AACuC;AACnC;AACN;AACf;AACjB;AAC4B;AACb;AACwB;AAC/D;AACA;AACO;AACP,iBAAiB,iDAAS;AAC1B,4BAA4B,iDAAS;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,iBAAiB,oDAAU;AAC3B;AACA,+BAA+B,MAAM;AACrC,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,yBAAyB,mBAAmB,IAAI,OAAO;AACvD,KAAK;AACL;AACA;AACA,iBAAiB,oDAAU;AAC3B;AACA,+BAA+B,MAAM;AACrC,KAAK;AACL,yBAAyB,mBAAmB,IAAI,OAAO;AACvD,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kEAAc,EAAE,wEAAmB;AAClD,eAAe,oEAAe;AAC9B;AACA;AACA,QAAQ,oDAAU;AAClB;AACA;AACA,SAAS;AACT;AACA,6BAA6B,mBAAmB,IAAI,OAAO;AAC3D,SAAS;AACT,4BAA4B,+DAAa;AACzC;AACA,SAAS;AACT;AACA;AACA;AACA,yBAAyB,mDAAe;AACxC;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA,gCAAgC,mDAAe;AAC/C;AACA,kBAAkB,iDAAa;AAC/B;AACA,oCAAoC,UAAU,GAAG,UAAU;AAC3D,mCAAmC,uDAAI;AACvC;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,mCAAmC,wDAAM;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,iCAAiC,gEAAc,GAAG,iBAAiB;AACnE,mCAAmC,oDAAa;AAChD,kCAAkC,iDAAa;AAC/C;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,gEAAU;AACnC;AACA;AACA,kCAAkC,iEAAe;AACjD,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,gCAAgC,8DAA0B;AAC1D;AACA,kBAAkB,iDAAa;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,mDAAe;AAC1D;AACA,iBAAiB;AACjB;AACA,SAAS;AACT,gCAAgC,6DAAyB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,mDAAe,IAAI,YAAY;AAC3E,aAAa;AACb;AACA;AACA,kCAAkC,mDAAY;AAC9C,aAAa;AACb,kBAAkB,iDAAa;AAC/B;AACA,SAAS;AACT,yDAAyD,6DAAwB;AACjF;AACA,gEAAgE,6DAAwB;AACxF;AACA;AACA,qBAAqB,8DAA0B;AAC/C;AACA,SAAS;AACT;AACA;AACA,qBAAqB,6DAAyB;AAC9C;AACA,SAAS;AACT;AACA;AACA,8CAA8C;AAC9C;AACA;AACA,iEAAe,MAAM,EAAC;;;;;;;;;;;;;;;;;;;;ACxMtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACoD;AACI;AACjD;AACP;AACA;AACA;AACA;AACO,0BAA0B,8DAAO;AACxC;AACA,YAAY,uEAAO;AACnB,CAAC;AACM,6BAA6B,QAAQ,yCAAyC,6BAA6B;;;;;;;;;;;;;;;AC1BlH,iEAAe,qtDAAqtD","sources":["webpack://@elyra/streamlit-extension/./lib/button.js","webpack://@elyra/streamlit-extension/./lib/handler.js","webpack://@elyra/streamlit-extension/./lib/index.js","webpack://@elyra/streamlit-extension/./lib/utils.js","webpack://@elyra/streamlit-extension/./style/streamlit-mark-color.svg"],"sourcesContent":["/*\n * Copyright 2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { CommandToolbarButton } from '@jupyterlab/apputils';\nimport { DisposableDelegate } from '@lumino/disposable';\nimport { CommandIDs } from './utils';\nexport class StreamlitButtonExtension {\n    constructor(commands) {\n        this.commands = commands;\n    }\n    createNew(widget) {\n        const button = new CommandToolbarButton({\n            commands: this.commands,\n            id: CommandIDs.openFromEditor,\n            label: ''\n        });\n        widget.toolbar.insertItem(99, 'streamlit', button);\n        return new DisposableDelegate(() => {\n            button.dispose();\n        });\n    }\n}\n","/*\n * Copyright 2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { URLExt } from '@jupyterlab/coreutils';\nimport { ServerConnection } from '@jupyterlab/services';\n/**\n * Call the API extension\n *\n * @param endPoint API REST end point for the extension\n * @param init Initial values for the request\n * @returns The response body interpreted as JSON\n */\nexport async function requestAPI(endPoint = '', init = {}) {\n    // Make request to Jupyter API\n    const settings = ServerConnection.makeSettings();\n    const requestUrl = URLExt.join(settings.baseUrl, 'streamlit', // API Namespace\n    endPoint);\n    let response;\n    try {\n        response = await ServerConnection.makeRequest(requestUrl, init, settings);\n    }\n    catch (error) {\n        throw new ServerConnection.NetworkError(error);\n    }\n    let data;\n    try {\n        data = await response.json();\n    }\n    catch (error) {\n        console.log('Not a JSON response body.', response);\n    }\n    if (!response.ok) {\n        throw new ServerConnection.ResponseError(response, data.message || data);\n    }\n    return data || response;\n}\n","/*\n * Copyright 2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ILayoutRestorer } from '@jupyterlab/application';\nimport { Dialog, IFrame, MainAreaWidget, showDialog, WidgetTracker } from '@jupyterlab/apputils';\nimport { IFileBrowserFactory } from '@jupyterlab/filebrowser';\nimport { IEditorTracker } from '@jupyterlab/fileeditor';\nimport { find } from '@lumino/algorithm';\nimport path from 'path';\nimport { StreamlitButtonExtension } from './button';\nimport { requestAPI } from './handler';\nimport { CommandIDs, getCookie, streamlitIcon } from './utils';\nconst NAMESPACE = '@elyra/streamlit-extension';\nconst serverErrorMessage = 'There was an issue with the streamlit_extension server extension.';\nexport const syncXsrfCookie = () => {\n    const xsrf = getCookie('_xsrf');\n    const jupyterlab_xsrf = getCookie('jupyterlab_xsrf');\n    // Initialize or update jupyterlab_xsrf to duplicate _xsrf\n    if (xsrf && (!jupyterlab_xsrf || xsrf !== jupyterlab_xsrf)) {\n        document.cookie = 'jupyterlab_xsrf=' + xsrf;\n    }\n    // Restore _xsrf if deleted\n    if (jupyterlab_xsrf && !xsrf) {\n        document.cookie = '_xsrf=' + jupyterlab_xsrf;\n    }\n};\nexport const checkCookie = (function () {\n    syncXsrfCookie();\n    let previousCookie = document.cookie;\n    return () => {\n        const currentCookie = document.cookie;\n        if (currentCookie !== previousCookie) {\n            syncXsrfCookie();\n            previousCookie = currentCookie;\n        }\n    };\n})();\nconst getStreamlitApp = async (file) => {\n    return await requestAPI('app', {\n        method: 'POST',\n        body: JSON.stringify({ file })\n    })\n        .then(data => {\n        return data.url;\n    })\n        .catch(reason => {\n        console.error(`${serverErrorMessage}\\n${reason}`);\n    });\n};\nconst stopStreamlitApp = async (file) => {\n    return await requestAPI('app', {\n        method: 'DELETE',\n        body: JSON.stringify({ file })\n    }).catch(reason => {\n        console.error(`${serverErrorMessage}\\n${reason}`);\n    });\n};\n/**\n * Initialization data for the streamlit-extension extension.\n */\nconst plugin = {\n    id: NAMESPACE,\n    autoStart: true,\n    requires: [IEditorTracker, IFileBrowserFactory],\n    optional: [ILayoutRestorer],\n    activate: (app, editorTracker, factory, restorer) => {\n        console.log('JupyterLab extension streamlit-extension is activated!');\n        requestAPI('app')\n            .then(data => {\n            console.log('streamlit_extension server extension successfully started');\n        })\n            .catch(reason => {\n            console.error(`${serverErrorMessage}\\n${reason}`);\n        });\n        const tracker = new WidgetTracker({\n            namespace: NAMESPACE\n        });\n        // Handle state restoration\n        if (restorer) {\n            void restorer.restore(tracker, {\n                command: CommandIDs.open,\n                args: widget => ({\n                    file: widget.id.split(':')[1]\n                }),\n                name: widget => widget.id\n            });\n        }\n        app.commands.addCommand(CommandIDs.open, {\n            label: 'Streamlit',\n            icon: streamlitIcon,\n            execute: async (args) => {\n                const widgetId = `${NAMESPACE}:${args.file}`;\n                const openWidget = find(app.shell.widgets('main'), (widget, index) => {\n                    return widget.id === widgetId;\n                });\n                if (openWidget) {\n                    app.shell.activateById(widgetId);\n                    return;\n                }\n                const urlPromise = getStreamlitApp(args.file);\n                const widget = new IFrame({\n                    sandbox: [\n                        'allow-same-origin',\n                        'allow-scripts',\n                        'allow-popups',\n                        'allow-forms'\n                    ]\n                });\n                const main = new MainAreaWidget({ content: widget });\n                main.title.label = path.basename(args.file);\n                main.title.icon = streamlitIcon;\n                main.title.caption = widget.title.label;\n                main.id = widgetId;\n                main.disposed.connect(() => {\n                    stopStreamlitApp(args.file);\n                });\n                await tracker.add(main);\n                app.shell.add(main, 'main');\n                // Set iframe url last to not block widget creation on webapp startup\n                const url = await urlPromise;\n                // When iframe src=undefined the lab instance is shown instead\n                // In this case we want to close the widget rather than set the url\n                if (url === undefined) {\n                    main.dispose();\n                    void showDialog({\n                        title: 'Streamlit application failed to start',\n                        body: 'Check the logs for more information.',\n                        buttons: [Dialog.okButton()]\n                    });\n                }\n                else {\n                    widget.url = url;\n                }\n            }\n        });\n        app.commands.addCommand(CommandIDs.openFromBrowser, {\n            label: 'Run in Streamlit',\n            icon: streamlitIcon,\n            isVisible: () => !!factory.tracker.currentWidget &&\n                factory.tracker.currentWidget.selectedItems().next !== undefined,\n            execute: async () => {\n                const currentWidget = factory.tracker.currentWidget;\n                if (!currentWidget) {\n                    return;\n                }\n                const item = currentWidget.selectedItems().next();\n                if (!item) {\n                    return;\n                }\n                await app.commands.execute(CommandIDs.open, {\n                    file: item.path\n                });\n            }\n        });\n        app.commands.addCommand(CommandIDs.openFromEditor, {\n            execute: () => {\n                const widget = editorTracker.currentWidget;\n                if (!widget) {\n                    return;\n                }\n                const path = widget.context.path;\n                return app.commands.execute(CommandIDs.open, { file: path });\n            },\n            isVisible: () => {\n                const widget = editorTracker.currentWidget;\n                return (widget && path.extname(widget.context.path) === '.py') || false;\n            },\n            icon: streamlitIcon,\n            label: 'Run in Streamlit'\n        });\n        app.docRegistry.addWidgetExtension('Editor', new StreamlitButtonExtension(app.commands));\n        // Add button to Elyra Python Editor if installed\n        app.docRegistry.addWidgetExtension('Python Editor', new StreamlitButtonExtension(app.commands));\n        app.contextMenu.addItem({\n            selector: '[data-file-type=\"python\"]',\n            command: CommandIDs.openFromBrowser,\n            rank: 999\n        });\n        app.contextMenu.addItem({\n            selector: '.jp-FileEditor',\n            command: CommandIDs.openFromEditor,\n            rank: 999\n        });\n        // Poll changes to cookies and prevent the deletion of _xsrf by Streamlit\n        // _xsrf deletion issue: https://github.com/streamlit/streamlit/issues/2517\n        window.setInterval(checkCookie, 100); // run every 100 ms\n    }\n};\nexport default plugin;\n","/*\n * Copyright 2022 Elyra Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { LabIcon } from '@jupyterlab/ui-components';\nimport iconSvg from '../style/streamlit-mark-color.svg';\nexport const CommandIDs = {\n    open: 'streamlit:open',\n    openFromBrowser: 'streamlit:open-browser',\n    openFromEditor: 'streamlit:open-file'\n};\nexport const streamlitIcon = new LabIcon({\n    name: 'streamlit:icon',\n    svgstr: iconSvg\n});\nexport const getCookie = (key) => { var _a; return ((_a = document.cookie.match('(^|;)\\\\s*' + key + '\\\\s*=\\\\s*([^;]+)')) === null || _a === void 0 ? void 0 : _a.pop()) || ''; };\n","export default \"<svg width=\\\"301\\\" height=\\\"165\\\" viewBox=\\\"0 0 301 165\\\" fill=\\\"none\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n<path d=\\\"M150.731 101.547L98.1387 73.7471L6.84674 25.4969C6.7634 25.4136 6.59674 25.4136 6.51341 25.4136C3.18007 23.8303 -0.236608 27.1636 1.0134 30.497L47.5302 149.139L47.5385 149.164C47.5885 149.281 47.6302 149.397 47.6802 149.514C49.5885 153.939 53.7552 156.672 58.2886 157.747C58.6719 157.831 58.9461 157.906 59.4064 157.998C59.8645 158.1 60.5052 158.239 61.0552 158.281C61.1469 158.289 61.2302 158.289 61.3219 158.297H61.3886C61.4552 158.306 61.5219 158.306 61.5886 158.314H61.6802C61.7386 158.322 61.8052 158.322 61.8636 158.322H61.9719C62.0386 158.331 62.1052 158.331 62.1719 158.331V158.331C121.084 164.754 180.519 164.754 239.431 158.331V158.331C240.139 158.331 240.831 158.297 241.497 158.231C241.714 158.206 241.922 158.181 242.131 158.156C242.156 158.147 242.189 158.147 242.214 158.139C242.356 158.122 242.497 158.097 242.639 158.072C242.847 158.047 243.056 158.006 243.264 157.964C243.681 157.872 243.87 157.806 244.436 157.611C245.001 157.417 245.94 157.077 246.527 156.794C247.115 156.511 247.522 156.239 248.014 155.931C248.622 155.547 249.201 155.155 249.788 154.715C250.041 154.521 250.214 154.397 250.397 154.222L250.297 154.164L150.731 101.547Z\\\" fill=\\\"#FF4B4B\\\"/>\\n<path d=\\\"M294.766 25.4981H294.683L203.357 73.7483L254.124 149.357L300.524 30.4981V30.3315C301.691 26.8314 298.108 23.6648 294.766 25.4981\\\" fill=\\\"#7D353B\\\"/>\\n<path d=\\\"M155.598 2.55572C153.264 -0.852624 148.181 -0.852624 145.931 2.55572L98.1389 73.7477L150.731 101.548L250.398 154.222C251.024 153.609 251.526 153.012 252.056 152.381C252.806 151.456 253.506 150.465 254.123 149.356L203.356 73.7477L155.598 2.55572Z\\\" fill=\\\"#BD4043\\\"/>\\n</svg>\\n\";"],"names":[],"sourceRoot":""}