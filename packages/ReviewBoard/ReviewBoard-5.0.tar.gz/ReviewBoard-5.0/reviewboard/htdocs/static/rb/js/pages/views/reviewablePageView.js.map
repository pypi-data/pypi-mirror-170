{"version":3,"file":"reviewablePageView.js","names":["UpdatesBubbleView","Backbone","View","extend","id","template","_","join","events","initialize","options","render","$el","html","defaults","updatePageText","ignoreText","updateInfo","hide","open","css","fadeIn","close","trigger","fadeOut","bind","remove","_onUpdatePageClicked","e","preventDefault","stopPropagation","_onIgnoreClicked","RB","ReviewablePageView","PageView","prototype","apply","arguments","DnDUploader","create","reviewRequestEditorView","ReviewRequestEditorView","el","$","model","reviewRequestEditor","_updatesBubble","_favIconURL","_favIconNotifyURL","_logoNotificationsURL","forEach","attrName","get","listenTo","NotificationManager","instance","setup","UserSession","_starManager","StarManagerView","StarManager","parent","_onReviewRequestUpdated","call","$favicon","find","attr","STATIC_URLS","pendingReview","draftReviewBanner","DraftReviewBannerView","hideAndReload","_super","info","_updateFavIcon","shouldNotify","_showDesktopNotification","_showUpdatesBubble","reviewRequest","window","location","appendTo","notify","title","summary","body","interpolate","user","fullname","username","iconURL","onClick","url","end","append","href","rel","type","_onEditReviewClicked","ReviewDialogView","review","_onAddCommentClicked","comment","createGeneralComment","undefined","show","CommentDialogView","_onShipItClicked","confirm","markShipIt","_onMenuClicked"],"sources":["../../../../../../static/rb/js/pages/views/reviewablePageView.es6.js"],"sourcesContent":["(function() {\n\n\n/**\n * An update bubble showing an update to the review request or a review.\n */\nconst UpdatesBubbleView = Backbone.View.extend({\n    id: 'updates-bubble',\n\n    template: _.template([\n        '<span id=\"updates-bubble-summary\"><%- summary %></span>',\n        ' by ',\n        '<a href=\"<%- user.url %>\" id=\"updates-bubble-user\">',\n        '<%- user.fullname || user.username %>',\n        '</a>',\n        '<span id=\"updates-bubble-buttons\">',\n        ' <a href=\"#\" class=\"update-page\"><%- updatePageText %></a>',\n        ' | ',\n        ' <a href=\"#\" class=\"ignore\"><%- ignoreText %></a>',\n    ].join('')),\n\n    events: {\n        'click .update-page': '_onUpdatePageClicked',\n        'click .ignore': '_onIgnoreClicked',\n    },\n\n    /**\n     * Initialize the view.\n     *\n     * Args:\n     *     options (object):\n     *         Options for the view.\n     *\n     * Option Args:\n     *     updateInfo (object):\n     *         Information about the update, fetched from the server.\n     */\n    initialize(options) {\n        this.options = options;\n    },\n\n    /**\n     * Render the bubble with the information provided during construction.\n     *\n     * The bubble starts hidden. The caller must call open() to display it.\n     *\n     * Returns:\n     *     UpdatesBubbleView:\n     *     This object, for chaining.\n     */\n    render() {\n        this.$el\n            .html(this.template(_.defaults({\n                updatePageText: gettext('Update Page'),\n                ignoreText: gettext('Ignore'),\n            }, this.options.updateInfo)))\n            .hide();\n\n        return this;\n    },\n\n    /**\n     * Open the bubble on the screen.\n     */\n    open() {\n        this.$el\n            .css('position', 'fixed')\n            .fadeIn();\n    },\n\n    /**\n     * Close the update bubble.\n     *\n     * After closing, the bubble will be removed from the DOM.\n     */\n    close() {\n        this.trigger('closed');\n        this.$el.fadeOut(_.bind(this.remove, this));\n    },\n\n    /**\n     * Handle clicks on the \"Update Page\" link.\n     *\n     * Loads the review request page.\n     *\n     * Args:\n     *     e (Event):\n     *         The event which triggered the action.\n     */\n    _onUpdatePageClicked(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.trigger('updatePage');\n    },\n\n    /*\n     * Handle clicks on the \"Ignore\" link.\n     *\n     * Ignores the update and closes the page.\n     *\n     * Args:\n     *     e (Event):\n     *         The event which triggered the action.\n     */\n    _onIgnoreClicked(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.close();\n    },\n});\n\n\n/**\n * A page managing reviewable content for a review request.\n *\n * This provides common functionality for any page associated with a review\n * request, such as the diff viewer, review UI, or the review request page\n * itself.\n */\nRB.ReviewablePageView = RB.PageView.extend({\n    events: _.defaults({\n        'click #review-action': '_onEditReviewClicked',\n        'click #ship-it-action': '_onShipItClicked',\n        'click #general-comment-action': '_onAddCommentClicked',\n        'click .has-menu .has-menu': '_onMenuClicked',\n    }, RB.PageView.prototype.events),\n\n    /**\n     * Initialize the page.\n     *\n     * This will construct a ReviewRequest, CommentIssueManager,\n     * ReviewRequestEditor, and other required objects, based on data\n     * provided during construction.\n     *\n     * Args:\n     *     options (object):\n     *         Options for the view.\n     *\n     * Option Args:\n     *     reviewRequestData (object):\n     *         The model attributes for a new RB.ReviewRequest instance.\n     *\n     *     editorData (object):\n     *         The model attributes for a new RB.ReviewRequestEditor instance.\n     *\n     *     lastActivityTimestamp (string):\n     *         The last known timestamp for activity on this review request.\n     *\n     *     checkUpdatesType (string, optional):\n     *         The type of updates to check for.\n     */\n    initialize(options) {\n        RB.PageView.prototype.initialize.apply(this, arguments);\n\n        this.options = options;\n\n        RB.DnDUploader.create();\n\n        this.reviewRequestEditorView = new RB.ReviewRequestEditorView({\n            el: $('#review-request'),\n            model: this.model.reviewRequestEditor,\n        });\n\n        this._updatesBubble = null;\n        this._favIconURL = null;\n        this._favIconNotifyURL = null;\n        this._logoNotificationsURL = null;\n\n        /*\n         * Some extensions, like Power Pack and rbstopwatch, expect a few legacy\n         * attributes on the view. Set these here so these extensions can access\n         * them. Note that extensions should ideally use the new form, if\n         * they're able to support Review Board 3.0+.\n         */\n        ['reviewRequest', 'pendingReview'].forEach(attrName => {\n            this[attrName] = this.model.get(attrName);\n\n            this.listenTo(this.model, `change:${attrName}`, () => {\n                this[attrName] = this.model.get(attrName);\n            });\n        });\n\n        /*\n         * Allow the browser to report notifications, if the user has this\n         * enabled.\n         */\n        RB.NotificationManager.instance.setup();\n\n        if (RB.UserSession.instance.get('authenticated')) {\n            this._starManager = new RB.StarManagerView({\n                model: new RB.StarManager(),\n                el: this.$('.star').parent(),\n            });\n        }\n\n        this.listenTo(this.model, 'reviewRequestUpdated',\n                      this._onReviewRequestUpdated);\n    },\n\n    /**\n     * Render the page.\n     *\n     * Returns:\n     *     RB.ReviewablePageView:\n     *     This object, for chaining.\n     */\n    render() {\n        RB.PageView.prototype.render.call(this);\n\n        const $favicon = $('head').find('link[rel=\"shortcut icon\"]');\n\n        this._favIconURL = $favicon.attr('href');\n        this._favIconNotifyURL = STATIC_URLS['rb/images/favicon_notify.ico'];\n        this._logoNotificationsURL = STATIC_URLS['rb/images/logo.png'];\n\n        const pendingReview = this.model.get('pendingReview');\n\n        this.draftReviewBanner = RB.DraftReviewBannerView.create({\n            el: $('#review-banner'),\n            model: pendingReview,\n            reviewRequestEditor: this.model.reviewRequestEditor,\n        });\n\n        this.listenTo(pendingReview, 'destroy published',\n                      () => this.draftReviewBanner.hideAndReload());\n\n        this.reviewRequestEditorView.render();\n\n        return this;\n    },\n\n    /**\n     * Remove this view from the page.\n     */\n    remove() {\n        this.draftReviewBanner.remove();\n        _super(this).remove.call(this);\n    },\n\n    /**\n     * Catch the review updated event and send the user a visual update.\n     *\n     * This function will handle the review updated event and decide whether\n     * to send a notification depending on browser and user settings.\n     *\n     * Args:\n     *     info (object):\n     *         The last update information for the request.\n     */\n    _onReviewRequestUpdated(info) {\n        this._updateFavIcon(this._favIconNotifyURL);\n\n        if (RB.NotificationManager.instance.shouldNotify()) {\n            this._showDesktopNotification(info);\n        }\n\n        this._showUpdatesBubble(info);\n    },\n\n    /**\n     * Create the updates bubble showing information about the last update.\n     *\n     * Args:\n     *     info (object):\n     *         The last update information for the request.\n     */\n    _showUpdatesBubble(info) {\n        if (this._updatesBubble) {\n            this._updatesBubble.remove();\n        }\n\n        const reviewRequest = this.model.get('reviewRequest');\n\n        this._updatesBubble = new UpdatesBubbleView({\n            updateInfo: info,\n            reviewRequest: reviewRequest,\n        });\n\n        this.listenTo(this._updatesBubble, 'closed',\n                      () => this._updateFavIcon(this._favIconURL));\n\n        this.listenTo(this._updatesBubble, 'updatePage', () => {\n            window.location = reviewRequest.get('reviewURL');\n        });\n\n        this._updatesBubble.render().$el.appendTo(this.$el);\n        this._updatesBubble.open();\n    },\n\n    /**\n     * Show the user a desktop notification for the last update.\n     *\n     * This function will create a notification if the user has not\n     * disabled desktop notifications and the browser supports HTML5\n     * notifications.\n     *\n     *  Args:\n     *     info (object):\n     *         The last update information for the request.\n     */\n    _showDesktopNotification(info) {\n        const reviewRequest = this.model.get('reviewRequest');\n\n        RB.NotificationManager.instance.notify({\n            title: info.summary,\n            body: interpolate(gettext('Review request #%s, by %s'), [\n                reviewRequest.id,\n                info.user.fullname || info.user.username,\n            ]),\n            iconURL: this._logoNotificationsURL,\n            onClick: () => {\n                window.location = reviewRequest.get('reviewURL');\n            },\n        });\n    },\n\n    /**\n     * Update the favicon for the page.\n     *\n     * This is used to change the favicon shown on the page based on whether\n     * there's a server-side update notification for the review request.\n     */\n    _updateFavIcon(url) {\n        $('head')\n            .find('link[rel=\"shortcut icon\"]')\n                .remove()\n            .end()\n            .append($('<link/>')\n                .attr({\n                    href: url,\n                    rel: 'shortcut icon',\n                    type: 'image/x-icon',\n                }));\n    },\n\n    /**\n     * Handle a click on the \"Edit Review\" button.\n     *\n     * Displays a review dialog.\n     *\n     * Returns:\n     *    boolean:\n     *    false, always.\n     */\n    _onEditReviewClicked() {\n        RB.ReviewDialogView.create({\n            review: this.model.get('pendingReview'),\n            reviewRequestEditor: this.model.reviewRequestEditor,\n        });\n\n        return false;\n    },\n\n    /**\n     * Handle a click on the \"Add Comment\" button.\n     *\n     * Displays a comment dialog.\n     *\n     * Returns:\n     *    boolean:\n     *    false, always.\n     */\n    _onAddCommentClicked() {\n        const pendingReview = this.model.get('pendingReview');\n        const comment = pendingReview.createGeneralComment(\n            undefined,\n            RB.UserSession.instance.get('commentsOpenAnIssue'));\n\n        this.listenTo(comment, 'saved',\n                      () => RB.DraftReviewBannerView.instance.show());\n\n        RB.CommentDialogView.create({\n            comment: comment,\n            reviewRequestEditor: this.model.reviewRequestEditor,\n        });\n\n        return false;\n    },\n\n    /**\n     * Handle a click on the \"Ship It\" button.\n     *\n     * Confirms that the user wants to post the review, and then posts it\n     * and reloads the page.\n     *\n     * Returns:\n     *    boolean:\n     *    false, always.\n     */\n    _onShipItClicked() {\n        if (confirm(gettext('Are you sure you want to post this review?'))) {\n            this.model.markShipIt();\n        }\n\n        return false;\n    },\n\n    /**\n     * Generic handler for menu clicks.\n     *\n     * This simply prevents the click from bubbling up or invoking the\n     * default action. This function is used for dropdown menu titles\n     * so that their links do not send a request to the server when one\n     * of their dropdown actions are clicked.\n     *\n     * Args:\n     *     e (Event):\n     *         The event which triggered the action.\n     */\n    _onMenuClicked(e) {\n        e.preventDefault();\n        e.stopPropagation();\n    },\n});\n\n\n})();\n"],"mappings":"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"}