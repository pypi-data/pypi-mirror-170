{"version":3,"file":"baseResourceModel.js","names":["RB","BaseResource","Backbone","Model","extend","defaults","extraData","links","loaded","parentObject","rspNamespace","urlIDAttr","listKey","expandedFields","extraQueryArgs","supportsExtraData","attrToJsonMap","serializedAttrs","deserializedAttrs","serializers","deserializers","initialize","_setupExtraData","url","get","self","href","key","_","result","link","baseURL","isNew","ready","options","context","undefined","isFunction","success","error","complete","console","warn","promiseToCallbacks","newOptions","bind","fetch","data","ensureCreated","save","Error","Promise","resolve","reject","prototype","call","model","xhr","BackboneError","trigger","_saveObject","saveOptions","attrs","toJSON","files","readers","form","payloadFileKeys","window","File","forEach","file","push","length","reader","FileReader","onloadend","every","r","readyState","DONE","_saveWithFiles","readAsArrayBuffer","fileReaders","boundary","Date","getTime","blob","zip","name","type","value","Object","entries","includes","Blob","processData","contentType","destroy","_destroyObject","_finishDestroy","wait","set","id","parse","rsp","assert","stat","extra_data","parseResourceData","attrName","deserializer","jsonField","serializerState","serializer","sync","method","isEmpty","isArray","pick","map","attr","syncOptions","expand","join","storeAPIError","errorPayload","has","validate","strings","isObject","INVALID_EXTRADATA_TYPE","isNull","isNumber","isNaN","isBoolean","isString","INVALID_EXTRADATA_VALUE_TYPE","replace","UNSET_PARENT_OBJECT","ExtraDataMixin"],"sources":["../../../../../../static/rb/js/resources/models/baseResourceModel.es6.js"],"sourcesContent":["/**\n * The base model for all API-backed resource models.\n *\n * This provides a common set of attributes and functionality for working\n * with Review Board's REST API. That includes fetching data for a known\n * resource, creating resources, saving, deleting, and navigating children\n * resources by way of a payload's list of links.\n *\n * Other resource models are expected to extend this. In particular, they\n * should generally be extending toJSON() and parse().\n */\nRB.BaseResource = Backbone.Model.extend({\n    /**\n     * Return default values for the model attributes.\n     *\n     * Returns:\n     *     object:\n     *     The attribute defaults.\n     */\n    defaults() {\n        return {\n            extraData: {},\n            links: null,\n            loaded: false,\n            parentObject: null\n        };\n    },\n\n    /** The key for the namespace for the object's payload in a response. */\n    rspNamespace: '',\n\n    /** The attribute used for the ID in the URL. */\n    urlIDAttr: 'id',\n\n    listKey() {\n        return this.rspNamespace + 's';\n    },\n\n    /** The list of fields to expand in resource payloads. */\n    expandedFields: [],\n\n    /**\n     * Extra query arguments for GET requests.\n     *\n     * This may also be a function that returns the extra query arguments.\n     *\n     * These values can be overridden by the caller when making a request.\n     * They function as defaults for the queries.\n     */\n    extraQueryArgs: {},\n\n    /** Whether or not extra data can be associated on the resource. */\n    supportsExtraData: false,\n\n    /**\n     * A map of attribute names to resulting JSON field names.\n     *\n     * This is used to auto-generate a JSON payload from attribute names\n     * in toJSON().\n     *\n     * It's also needed if using attribute names in any save({attrs: [...]})\n     * calls.\n     */\n    attrToJsonMap: {},\n\n    /** A list of attributes to serialize in toJSON(). */\n    serializedAttrs: [],\n\n    /** A list of attributes to deserialize in parseResourceData(). */\n    deserializedAttrs: [],\n\n    /** Special serializer functions called in toJSON(). */\n    serializers: {},\n\n    /** Special deserializer functions called in parseResourceData(). */\n    deserializers: {},\n\n    /**\n     * Initialize the model.\n     */\n    initialize() {\n        if (this.supportsExtraData) {\n            this._setupExtraData();\n        }\n    },\n\n    /**\n     * Return the URL for this resource's instance.\n     *\n     * If this resource is loaded and has a URL to itself, that URL will\n     * be returned. If not yet loaded, it'll try to get it from its parent\n     * object, if any.\n     *\n     * Returns:\n     *     string:\n     *     The URL to use when fetching the resource. If the URL cannot be\n     *     determined, this will return null.\n     */\n    url() {\n        let links = this.get('links');\n\n        if (links) {\n            return links.self.href;\n        }\n\n        const parentObject = this.get('parentObject');\n\n        if (parentObject) {\n            links = parentObject.get('links');\n\n            if (links) {\n                const key = _.result(this, 'listKey');\n                const link = links[key];\n\n                if (link) {\n                    const baseURL = link.href;\n\n                    return this.isNew()\n                           ? baseURL\n                           : (baseURL + this.get(this.urlIDAttr) + '/');\n                }\n            }\n        }\n\n        return null;\n    },\n\n    /**\n     * Call a function when the object is ready to use.\n     *\n     * An object is ready it has an ID and is loaded, or is a new resource.\n     *\n     * When the object is ready, options.ready() will be called. This may\n     * be called immediately, or after one or more round trips to the server.\n     *\n     * If we fail to load the resource, objects.error() will be called instead.\n     *\n     * Version Changed:\n     *     5.0:\n     *     Deprecated callbacks and changed to return a promise.\n     *\n     * Args:\n     *     options (object):\n     *         Options for the fetch operation.\n     *\n     *     context (object):\n     *         Context to bind when executing callbacks.\n     *\n     * Option Args:\n     *     data (object, optional):\n     *         Data to pass through to the fetch operation.\n     *\n     *     ready (function):\n     *         Callback function for when the object is ready to use.\n     *\n     *     error (function):\n     *         Callback function for when an error occurs.\n     *\n     * Returns:\n     *     Promise:\n     *     A promise which resolves when the operation is complete.\n     */\n    async ready(options={}, context=undefined) {\n        if (_.isFunction(options.success) ||\n            _.isFunction(options.error) ||\n            _.isFunction(options.complete) ||\n            _.isFunction(options.ready)) {\n            console.warn('RB.BaseResource.ready was called using callbacks. ' +\n                         'Callers should be updated to use promises instead.');\n            return RB.promiseToCallbacks(\n                options, context, newOptions => this.ready());\n        }\n\n        const success = _.isFunction(options.ready)\n                        ? _.bind(options.ready, context)\n                        : undefined;\n        const error = _.isFunction(options.error)\n                      ? _.bind(options.error, context)\n                      : undefined;\n\n        const parentObject = this.get('parentObject');\n\n        if (!this.get('loaded')) {\n            if (!this.isNew()) {\n                // Fetch data from the server\n                await this.fetch({ data: options.data });\n            } else if (parentObject) {\n                /*\n                 * This is a new object, which means there's nothing to fetch\n                 * from the server, but we still need to ensure that the\n                 * parent is loaded in order for it to have valid links.\n                 */\n                await parentObject.ready();\n            }\n        }\n    },\n\n    /**\n     * Call a function when we know an object exists server-side.\n     *\n     * This works like ready() in that it's used to delay operating on the\n     * resource until we have a server-side representation. Unlike ready(),\n     * it will attempt to create it if it doesn't exist first.\n     *\n     * If we fail to create the object, options.error() will be called\n     * instead.\n     *\n     * Version Changed:\n     *     5.0:\n     *     Deprecated callbacks and added a promise return value.\n     *\n     * Args:\n     *     options (object, optional):\n     *         Object with success and error callbacks.\n     *\n     *     context (object, optional):\n     *         Context to bind when executing callbacks.\n     *\n     * Returns:\n     *     Promise:\n     *     A promise which resolves when the operation is complete.\n     */\n    async ensureCreated(options={}, context=undefined) {\n        if (_.isFunction(options.success) ||\n            _.isFunction(options.error) ||\n            _.isFunction(options.complete)) {\n            console.warn('RB.BaseResource.ensureCreated was called using ' +\n                         'callbacks. Callers should be updated to use ' +\n                         'promises instead.');\n            return RB.promiseToCallbacks(\n                options, context, newOptions => this.ensureCreated());\n        }\n\n        await this.ready();\n\n        if (!this.get('loaded')) {\n            await(this.save());\n        }\n    },\n\n    /**\n     * Fetch the object's data from the server.\n     *\n     * An object must have an ID before it can be fetched. Otherwise,\n     * options.error() will be called.\n     *\n     * If this has a parent resource object, we'll ensure that's ready before\n     * fetching this resource.\n     *\n     * The resource must override the parse() function to determine how\n     * the returned resource data is parsed and what data is stored in\n     * this object.\n     *\n     * Version Changed:\n     *     5.0:\n     *     Deprecated the callbacks and added a promise return value.\n     *\n     * Args:\n     *     options (object, optional):\n     *         Options to pass through to the base Backbone fetch operation.\n     *\n     *     context (object, optional):\n     *         Context to bind when executing callbacks.\n     *\n     * Returns:\n     *     Promise:\n     *     A promise which resolves when the operation is complete.\n     */\n    fetch: async function(options={}, context=undefined) {\n        if (_.isFunction(options.success) ||\n            _.isFunction(options.error) ||\n            _.isFunction(options.complete)) {\n            console.warn('RB.BaseResource.fetch was called using callbacks. ' +\n                         'Callers should be updated to use promises instead.');\n            return RB.promiseToCallbacks(\n                options, context, newOptions => this.fetch(newOptions));\n        }\n\n        if (this.isNew()) {\n            throw new Error(\n                'fetch cannot be used on a resource without an ID');\n        }\n\n        const parentObject = this.get('parentObject');\n\n        if (parentObject) {\n            await parentObject.ready();\n        }\n\n        return new Promise((resolve, reject) => {\n            Backbone.Model.prototype.fetch.call(this, _.extend({\n                success: () => resolve(),\n                error: (model, xhr, options) => reject(\n                    new BackboneError(model, xhr, options)),\n            }, options));\n        });\n    },\n\n    /**\n     * Save the object's data to the server.\n     *\n     * If the object has an ID already, it will be saved to its known\n     * URL using HTTP PUT. If it doesn't have an ID, it will be saved\n     * to its parent list resource using HTTP POST\n     *\n     * If this has a parent resource object, we'll ensure that's created\n     * before saving this resource.\n     *\n     * An object must either be loaded or have a parent resource linking to\n     * this object's list resource URL for an object to be saved.\n     *\n     * The resource must override the toJSON() function to determine what\n     * data is saved to the server.\n     *\n     * If we successfully save the resource, options.success() will be\n     * called, and the \"saved\" event will be triggered.\n     *\n     * If we fail to save the resource, options.error() will be called.\n     *\n     * Version Changed:\n     *     5.0:\n     *     Deprecated the callbacks and added a promise return value.\n     *\n     * Args:\n     *     options (object, optional):\n     *         Options for the save operation.\n     *\n     *     context (object, optional):\n     *         Context to bind when executing callbacks.\n     *\n     * Returns:\n     *     Promise:\n     *     A promise which resolves when the operation is complete.\n     */\n    async save(options={}, context=undefined) {\n        if (_.isFunction(options.success) ||\n            _.isFunction(options.error) ||\n            _.isFunction(options.complete)) {\n            console.warn('RB.BaseResource.save was called using callbacks. ' +\n                         'Callers should be updated to use promises instead.');\n            return RB.promiseToCallbacks(\n                options, context, newOptions => this.save(newOptions));\n        }\n\n        this.trigger('saving', options);\n        await this.ready();\n\n        const parentObject = this.get('parentObject');\n\n        if (parentObject) {\n            await parentObject.ensureCreated();\n        }\n\n        return await this._saveObject(options);\n    },\n\n    /**\n     * Handle the actual saving of the object's state.\n     *\n     * This is called internally by save() once we've handled all the\n     * readiness and creation checks of this object and its parent.\n     *\n     * Args:\n     *     options (object):\n     *         Options for the save operation.\n     *\n     * Returns:\n     *     Promise:\n     *     A promise which resolves when the operation is complete.\n     */\n    _saveObject(options) {\n        return new Promise((resolve, reject) => {\n            const url = _.result(this, 'url');\n            if (!url) {\n                reject(new Error(\n                    'The object must either be loaded from the server or ' +\n                    'have a parent object before it can be saved'));\n\n                return;\n            }\n\n            const saveOptions = _.defaults({\n                success: (model, xhr) => {\n                    this.trigger('saved', options);\n                    resolve(xhr);\n                },\n                error: (model, xhr, options) => {\n                    this.trigger('saveFailed', options);\n                    reject(new BackboneError(model, xhr, options));\n                }\n            }, options);\n\n            saveOptions.attrs = options.attrs || this.toJSON(options);\n\n            const files = [];\n            const readers = [];\n\n            if (!options.form) {\n                if (this.payloadFileKeys && window.File) {\n                    /* See if there are files in the attributes we're using. */\n                    this.payloadFileKeys.forEach(key => {\n                        const file = saveOptions.attrs[key];\n\n                        if (file) {\n                            files.push(file);\n                        }\n                    });\n                }\n            }\n\n            if (files.length > 0) {\n                files.forEach(file => {\n                    const reader = new FileReader();\n\n                    readers.push(reader);\n                    reader.onloadend = () => {\n                        if (readers.every(r => r.readyState === FileReader.DONE)) {\n                            this._saveWithFiles(files, readers, saveOptions);\n                        }\n                    };\n                    reader.readAsArrayBuffer(file);\n                });\n            } else {\n                Backbone.Model.prototype.save.call(this, {}, saveOptions);\n            }\n        });\n    },\n\n    /**\n     * Save the model with a file upload.\n     *\n     * When doing file uploads, we need to hand-structure a form-data payload\n     * to the server. It will contain the file contents and the attributes\n     * we're saving. We can then call the standard save function with this\n     * payload as our data.\n     *\n     * Args:\n     *     files (Array of object):\n     *         A list of files, with ``name`` and ``type`` keys.\n     *\n     *     fileReaders (Array of FileReader):\n     *         Readers corresponding to each item in ``files``.\n     *\n     *     options (object):\n     *         Options for the save operation.\n     *\n     * Option Args:\n     *     boundary (string):\n     *         Optional MIME multipart boundary.\n     *\n     *     attrs (object):\n     *         Additional key/value pairs to include in the payload data.\n     */\n    _saveWithFiles(files, fileReaders, options) {\n        const boundary = options.boundary ||\n                         ('-----multipartformboundary' + new Date().getTime());\n        const blob = [];\n\n        for (let [key, file, reader] of\n             _.zip(this.payloadFileKeys, files, fileReaders)) {\n            if (!file || !reader) {\n                continue;\n            }\n\n            blob.push('--' + boundary + '\\r\\n');\n            blob.push('Content-Disposition: form-data; name=\"' +\n                      key + '\"; filename=\"' + file.name + '\"\\r\\n');\n            blob.push('Content-Type: ' + file.type + '\\r\\n');\n            blob.push('\\r\\n');\n\n            blob.push(reader.result);\n\n            blob.push('\\r\\n');\n        }\n\n        for (let [key, value] of Object.entries(options.attrs)) {\n            if (!this.payloadFileKeys.includes(key) &&\n                value !== undefined &&\n                value !== null) {\n                blob.push('--' + boundary + '\\r\\n');\n                blob.push('Content-Disposition: form-data; name=\"' + key +\n                          '\"\\r\\n');\n                blob.push('\\r\\n');\n                blob.push(value + '\\r\\n');\n            }\n        }\n\n        blob.push('--' + boundary + '--\\r\\n\\r\\n');\n\n        Backbone.Model.prototype.save.call(this, {}, _.extend({\n            data: new Blob(blob),\n            processData: false,\n            contentType: 'multipart/form-data; boundary=' + boundary,\n        }, options));\n    },\n\n    /**\n     * Delete the object's resource on the server.\n     *\n     * An object must either be loaded or have a parent resource linking to\n     * this object's list resource URL for an object to be deleted.\n     *\n     * Version Changed:\n     *     5.0:\n     *     Deprecated callbacks and changed to return a promise.\n     *\n     * Args:\n     *     options (object, optional):\n     *         Object with success and error callbacks.\n     *\n     *     context (object, optional):\n     *         Context to use when calling callbacks.\n     *\n     * Returns:\n     *     Promise:\n     *     A promise which resolves when the operation is complete.\n     */\n    async destroy(options={}, context=undefined) {\n        if (_.isFunction(options.success) ||\n            _.isFunction(options.error) ||\n            _.isFunction(options.complete)) {\n            console.warn('RB.BaseResource.destroy was called using ' +\n                         'callbacks. Callers should be updated to use ' +\n                         'promises instead.');\n            return RB.promiseToCallbacks(\n                options, context, newOptions => this.destroy(newOptions));\n        }\n\n        this.trigger('destroying', options);\n\n        const parentObject = this.get('parentObject');\n\n        if (!this.isNew() && parentObject) {\n            /*\n             * XXX This is temporary to support older-style resource\n             *     objects. We should just use ready() once we're moved\n             *     entirely onto BaseResource.\n             */\n            await parentObject.ready();\n        }\n\n        await this._destroyObject(options);\n    },\n\n    /**\n     * Set up the deletion of the object.\n     *\n     * This is called internally by destroy() once we've handled all the\n     * readiness and creation checks of this object and its parent.\n     *\n     * Once we've done some work to ensure the URL is valid and the object\n     * is ready, we'll finish destruction by calling _finishDestroy.\n     *\n     * Args:\n     *     options (object):\n     *         Options object to include with events.\n     *\n     * Returns:\n     *     Promise:\n     *     A promise which resolves when the operation is complete.\n     */\n    async _destroyObject(options={}) {\n        const url = _.result(this, 'url');\n\n        if (url) {\n            await this.ready();\n            await this._finishDestroy(options);\n        } else {\n            if (this.isNew()) {\n                /*\n                 * If both this resource and its parent are new, it's\n                 * possible that we'll get through here without a url. In\n                 * this case, all the data is still local to the client\n                 * and there's not much to clean up; just call\n                 * Model.destroy and be done with it.\n                 */\n                await this._finishDestroy(options);\n            } else {\n                throw new Error(\n                    'The object must either be loaded from the server ' +\n                    'or have a parent object before it can be deleted'\n                );\n            }\n        }\n    },\n\n    /**\n     * Finish destruction of the object.\n     *\n     * This will call the parent destroy method, then reset the state\n     * of the object on success.\n     *\n     * Args:\n     *     options (object):\n     *         Object with success and error callbacks.\n     *\n     * Returns:\n     *     Promise:\n     *     A promise which resolves when the operation is complete.\n     */\n    _finishDestroy(options) {\n        return new Promise((resolve, reject) => {\n            const parentObject = this.get('parentObject');\n\n            Backbone.Model.prototype.destroy.call(this, {\n                wait: true,\n                success: () => {\n                    /*\n                     * Reset the object so it's new again, but with the same\n                     * parentObject.\n                     */\n                    this.set(_.defaults(\n                        {\n                            id: null,\n                            parentObject: parentObject,\n                        },\n                        _.result(this, 'defaults')));\n\n                    this.trigger('destroyed', options);\n\n                    resolve();\n                },\n                error: (model, xhr, options) => reject(\n                    new BackboneError(model, xhr, options)),\n            });\n        });\n    },\n\n    /**\n     * Parse and returns the payload from an API response.\n     *\n     * This will by default only return the object's ID and list of links.\n     * Subclasses should override this to return any additional data that's\n     * needed, but they must include the results of\n     * BaseResource.protoype.parse as well.\n     *\n     * Args:\n     *     rsp (object):\n     *         The payload received from the server.\n     *\n     * Returns:\n     *     object:\n     *     Attributes to set on the model.\n     */\n    parse(rsp) {\n        console.assert(this.rspNamespace,\n                       'rspNamespace must be defined on the resource model');\n\n        if (rsp.stat !== undefined) {\n            /*\n             * This resource payload is inside an envelope from an API\n             * call. It's not model construction data or from a list\n             * resource.\n             */\n            rsp = rsp[this.rspNamespace];\n        }\n\n        return _.defaults({\n            extraData: rsp.extra_data,\n            id: rsp.id,\n            links: rsp.links,\n            loaded: true\n        }, this.parseResourceData(rsp));\n    },\n\n    /*\n     * Parse the resource data from a payload.\n     *\n     * By default, this will make use of attrToJsonMap and any\n     * jsonDeserializers to construct a resulting set of attributes.\n     *\n     * This can be overridden by subclasses.\n     *\n     * Args:\n     *     rsp (object):\n     *         The payload received from the server.\n     *\n     * Returns:\n     *     object:\n     *     Attributes to set on the model.\n     */\n    parseResourceData(rsp) {\n        const attrs = {};\n\n        for (let attrName of this.deserializedAttrs) {\n            const deserializer = this.deserializers[attrName];\n            const jsonField = this.attrToJsonMap[attrName] || attrName;\n            let value = rsp[jsonField];\n\n            if (deserializer) {\n                value = deserializer.call(this, value);\n            }\n\n            if (value !== undefined) {\n                attrs[attrName] = value;\n            }\n        }\n\n        return attrs;\n    },\n\n    /**\n     * Serialize and return object data for the purpose of saving.\n     *\n     * When saving to the server, the only data that will be sent in the\n     * API PUT/POST call will be the data returned from toJSON().\n     *\n     * This will build the list based on the serializedAttrs, serializers,\n     * and attrToJsonMap properties.\n     *\n     * Subclasses can override this to create custom serialization behavior.\n     *\n     * Returns:\n     *     object:\n     *     The serialized data.\n     */\n    toJSON() {\n        const serializerState = {\n            isNew: this.isNew(),\n            loaded: this.get('loaded')\n        };\n        const data = {};\n\n        for (let attrName of this.serializedAttrs) {\n            const serializer = this.serializers[attrName];\n            let value = this.get(attrName);\n\n            if (serializer) {\n                value = serializer.call(this, value, serializerState);\n            }\n\n            const jsonField = this.attrToJsonMap[attrName] || attrName;\n            data[jsonField] = value;\n        }\n\n        if (this.supportsExtraData) {\n            _.extend(data, this.extraData.toJSON());\n        }\n\n        return data;\n    },\n\n    /**\n     * Handle all AJAX communication for the model and its subclasses.\n     *\n     * Backbone.js will internally call the model's sync function to\n     * communicate with the server, which usually uses Backbone.sync.\n     *\n     * We wrap this to convert the data to encoded form data (instead\n     * of Backbone's default JSON payload).\n     *\n     * We also parse the error response from Review Board so we can provide\n     * a more meaningful error callback.\n     *\n     * Args:\n     *     method (string):\n     *         The HTTP method to use.\n     *\n     *     model (Backbone.Model):\n     *         The model to sync.\n     *\n     *     options (object):\n     *         Options for the operation.\n     *\n     * Option Args:\n     *     data (object):\n     *         Optional payload data to include.\n     *\n     *     form (jQuery):\n     *         Optional form to be submitted.\n     *\n     *     attrs (Array or object):\n     *         Either a list of the model attributes to sync, or a set of\n     *         key/value pairs to use instead of the model attributes.\n     */\n    sync(method, model, options={}) {\n        let data;\n        let contentType;\n\n        if (method === 'read') {\n            data = options.data || {};\n\n            const extraQueryArgs = _.result(this, 'extraQueryArgs', {});\n\n            if (!_.isEmpty(extraQueryArgs)) {\n                data = _.extend({}, extraQueryArgs, data);\n            }\n        } else {\n            if (options.form) {\n                data = null;\n            } else if (options.attrs && !_.isArray(options.attrs)) {\n                data = options.attrs;\n            } else {\n                data = model.toJSON(options);\n\n                if (options.attrs) {\n                    data = _.pick(\n                        data,\n                        options.attrs.map(attr => this.attrToJsonMap[attr]\n                                                  || attr));\n                }\n            }\n\n            contentType = 'application/x-www-form-urlencoded';\n        }\n\n        const syncOptions = _.defaults({}, options, {\n            /* Use form data instead of a JSON payload. */\n            contentType: contentType,\n            data: data,\n            processData: true\n        });\n\n        if (!options.form && this.expandedFields.length > 0) {\n            syncOptions.data.expand = this.expandedFields.join(',');\n        }\n\n        syncOptions.error = xhr => {\n            RB.storeAPIError(xhr);\n\n            const rsp = xhr.errorPayload;\n\n            if (rsp && _.has(rsp, this.rspNamespace)) {\n                /*\n                 * The response contains the current version of the object,\n                 * which we want to preserve, in case it did any partial\n                 * updating of data.\n                 */\n                this.set(this.parse(rsp));\n            }\n\n            if (_.isFunction(options.error)) {\n                options.error(xhr);\n            }\n        };\n\n        return Backbone.sync.call(this, method, model, syncOptions);\n    },\n\n    /**\n     * Perform validation on the attributes of the resource.\n     *\n     * By default, this validates the extraData field, if provided.\n     *\n     * Args:\n     *     attrs (object):\n     *         The attributes to validate.\n     *\n     * Returns:\n     *     string:\n     *     An error string or ``undefined``.\n     */\n    validate(attrs) {\n        if (this.supportsExtraData && attrs.extraData !== undefined) {\n            const strings = RB.BaseResource.strings;\n\n            if (!_.isObject(attrs.extraData)) {\n                return strings.INVALID_EXTRADATA_TYPE;\n            }\n\n            for (let [key, value] of Object.entries(attrs.extraData)) {\n                if (!_.isNull(value) &&\n                    (!_.isNumber(value) || _.isNaN(value)) &&\n                    !_.isBoolean(value) &&\n                    !_.isString(value)) {\n                    return strings.INVALID_EXTRADATA_VALUE_TYPE\n                        .replace('{key}', key);\n                }\n            }\n        }\n    }\n}, {\n    strings: {\n        UNSET_PARENT_OBJECT: 'parentObject must be set',\n        INVALID_EXTRADATA_TYPE:\n            'extraData must be an object or undefined',\n        INVALID_EXTRADATA_VALUE_TYPE:\n            'extraData.{key} must be null, a number, boolean, or string'\n    }\n});\n\n\n_.extend(RB.BaseResource.prototype, RB.ExtraDataMixin);\n"],"mappings":"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"}