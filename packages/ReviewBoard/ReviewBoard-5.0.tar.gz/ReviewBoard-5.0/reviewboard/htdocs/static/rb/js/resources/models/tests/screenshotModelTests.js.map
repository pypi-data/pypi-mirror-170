{"version":3,"file":"screenshotModelTests.js","names":["suite","model","beforeEach","RB","Screenshot","parentObject","BaseResource","describe","it","set","expect","getDisplayName","toBe","caption","filename","data","parse","stat","screenshot","id","review_url","not","undefined","reviewURL","toJSON"],"sources":["../../../../../../../static/rb/js/resources/models/tests/screenshotModelTests.es6.js"],"sourcesContent":["suite('rb/resources/models/Screenshot', function() {\n    let model;\n\n    beforeEach(function(){\n        model = new RB.Screenshot({\n            parentObject: new RB.BaseResource({\n                'public': true,\n            }),\n        });\n    });\n\n    describe('getDisplayName', function() {\n        it('With caption', function() {\n            model.set('caption', 'My Caption');\n\n            expect(model.getDisplayName()).toBe('My Caption');\n        });\n\n        it('With filename', function() {\n            model.set('filename', 'myfile.png');\n\n            expect(model.getDisplayName()).toBe('myfile.png');\n        });\n\n        it('With caption and filename', function() {\n            model.set({\n                caption: 'My Caption',\n                filename: 'myfile.png'\n            });\n\n            expect(model.getDisplayName()).toBe('My Caption');\n        });\n    });\n\n    describe('parse', function() {\n        it('API payloads', function() {\n            const data = model.parse({\n                stat: 'ok',\n                screenshot: {\n                    id: 42,\n                    caption: 'my-caption',\n                    filename: 'my-filename',\n                    review_url: '/review-ui/',\n                },\n            });\n\n            expect(data).not.toBe(undefined);\n            expect(data.id).toBe(42);\n            expect(data.caption).toBe('my-caption');\n            expect(data.filename).toBe('my-filename');\n            expect(data.reviewURL).toBe('/review-ui/');\n        });\n    });\n\n    describe('toJSON', function() {\n        describe('caption field', function() {\n            it('With value', function() {\n                model.set('caption', 'foo');\n                const data = model.toJSON();\n                expect(data.caption).toBe('foo');\n            });\n        });\n    });\n});\n"],"mappings":";;AAAAA,KAAK,CAAC,gCAAD,EAAmC,YAAW;EAC/C,IAAIC,KAAJ;EAEAC,UAAU,CAAC,YAAU;IACjBD,KAAK,GAAG,IAAIE,EAAE,CAACC,UAAP,CAAkB;MACtBC,YAAY,EAAE,IAAIF,EAAE,CAACG,YAAP,CAAoB;QAC9B,UAAU;MADoB,CAApB;IADQ,CAAlB,CAAR;EAKH,CANS,CAAV;EAQAC,QAAQ,CAAC,gBAAD,EAAmB,YAAW;IAClCC,EAAE,CAAC,cAAD,EAAiB,YAAW;MAC1BP,KAAK,CAACQ,GAAN,CAAU,SAAV,EAAqB,YAArB;MAEAC,MAAM,CAACT,KAAK,CAACU,cAAN,EAAD,CAAN,CAA+BC,IAA/B,CAAoC,YAApC;IACH,CAJC,CAAF;IAMAJ,EAAE,CAAC,eAAD,EAAkB,YAAW;MAC3BP,KAAK,CAACQ,GAAN,CAAU,UAAV,EAAsB,YAAtB;MAEAC,MAAM,CAACT,KAAK,CAACU,cAAN,EAAD,CAAN,CAA+BC,IAA/B,CAAoC,YAApC;IACH,CAJC,CAAF;IAMAJ,EAAE,CAAC,2BAAD,EAA8B,YAAW;MACvCP,KAAK,CAACQ,GAAN,CAAU;QACNI,OAAO,EAAE,YADH;QAENC,QAAQ,EAAE;MAFJ,CAAV;MAKAJ,MAAM,CAACT,KAAK,CAACU,cAAN,EAAD,CAAN,CAA+BC,IAA/B,CAAoC,YAApC;IACH,CAPC,CAAF;EAQH,CArBO,CAAR;EAuBAL,QAAQ,CAAC,OAAD,EAAU,YAAW;IACzBC,EAAE,CAAC,cAAD,EAAiB,YAAW;MAC1B,MAAMO,IAAI,GAAGd,KAAK,CAACe,KAAN,CAAY;QACrBC,IAAI,EAAE,IADe;QAErBC,UAAU,EAAE;UACRC,EAAE,EAAE,EADI;UAERN,OAAO,EAAE,YAFD;UAGRC,QAAQ,EAAE,aAHF;UAIRM,UAAU,EAAE;QAJJ;MAFS,CAAZ,CAAb;MAUAV,MAAM,CAACK,IAAD,CAAN,CAAaM,GAAb,CAAiBT,IAAjB,CAAsBU,SAAtB;MACAZ,MAAM,CAACK,IAAI,CAACI,EAAN,CAAN,CAAgBP,IAAhB,CAAqB,EAArB;MACAF,MAAM,CAACK,IAAI,CAACF,OAAN,CAAN,CAAqBD,IAArB,CAA0B,YAA1B;MACAF,MAAM,CAACK,IAAI,CAACD,QAAN,CAAN,CAAsBF,IAAtB,CAA2B,aAA3B;MACAF,MAAM,CAACK,IAAI,CAACQ,SAAN,CAAN,CAAuBX,IAAvB,CAA4B,aAA5B;IACH,CAhBC,CAAF;EAiBH,CAlBO,CAAR;EAoBAL,QAAQ,CAAC,QAAD,EAAW,YAAW;IAC1BA,QAAQ,CAAC,eAAD,EAAkB,YAAW;MACjCC,EAAE,CAAC,YAAD,EAAe,YAAW;QACxBP,KAAK,CAACQ,GAAN,CAAU,SAAV,EAAqB,KAArB;QACA,MAAMM,IAAI,GAAGd,KAAK,CAACuB,MAAN,EAAb;QACAd,MAAM,CAACK,IAAI,CAACF,OAAN,CAAN,CAAqBD,IAArB,CAA0B,KAA1B;MACH,CAJC,CAAF;IAKH,CANO,CAAR;EAOH,CARO,CAAR;AASH,CA/DI,CAAL"}