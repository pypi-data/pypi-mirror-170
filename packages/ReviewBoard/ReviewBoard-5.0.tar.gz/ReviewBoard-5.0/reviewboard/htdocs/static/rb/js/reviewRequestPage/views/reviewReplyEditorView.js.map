{"version":3,"file":"reviewReplyEditorView.js","names":["RB","ReviewRequestPage","ReviewReplyEditorView","Backbone","View","extend","commentTemplate","_","template","events","initialize","options","_$addCommentLink","_$draftComment","_$editor","_$commentsList","render","$","$draftComment","children","length","$time","find","$reviewText","model","set","commentID","data","text","html","timestamp","Date","attr","richText","hasClass","hasDraft","_createCommentEditor","listenTo","reviewRequest","get","formatText","newText","bugTrackerURL","on","fadeOut","remove","fadeIn","_onPublished","openCommentEditor","_makeCommentElement","inlineEditor","reviewRequestEditor","cls","editIconClass","notifyUnchangedCompletion","multiline","hasRawValue","rawValue","TextEditorView","getInlineEditorOptions","removeAttr","beginEdit","incr","complete","e","value","textEditor","getFromInlineEditor","decr","save","cancel","resetStateIfEmpty","hide","userSession","UserSession","instance","now","moment","utcOffset","$el","anchorName","id","uniqueId","userPageURL","fullName","avatarHTML","getAvatarHTML","isDraft","timestampISO","format","hour","user_infobox","end","timesince","Djblets","enableRetinaImages","appendTo","_onAddCommentClicked","preventDefault","stopPropagation","contextType","replaceWith"],"sources":["../../../../../../static/rb/js/reviewRequestPage/views/reviewReplyEditorView.es6.js"],"sourcesContent":["/**\n * Handles editing a reply to a comment in a review.\n *\n * This will handle the \"New Comment\" link and the draft banners for the\n * review.\n */\nRB.ReviewRequestPage.ReviewReplyEditorView = Backbone.View.extend({\n    commentTemplate: _.template(dedent`\n        <li <% if (isDraft) { %>class=\"draft\"<% } %>\n            <% if (commentID) { %>data-comment-id=\"<%= commentID %>\"<% } %>>\n         <% if (anchorName) { %>\n          <a class=\"comment-anchor\" name=\"<%- anchorName %>\"></a>\n          <div class=\"floating-anchor\">\n           <a href=\"#<%- anchorName %>\"\n              class=\"fa fa-link fa-flip-horizontal\"></a>\n          </div>\n         <% } %>\n         <div class=\"comment-author\">\n          <label for=\"<%= id %>\">\n           <div class=\"avatar-container\"><%= avatarHTML %></div>\n           <div class=\"user-reply-info\">\n            <a href=\"<%= userPageURL %>\" class=\"user\"><%- fullName %></a>\n        <% if (timestamp) { %>\n            <span class=\"timestamp\">\n             <time class=\"timesince\" datetime=\"<%= timestampISO %>\">\n        <%= timestamp %></time>\n            </span>\n        <% } %>\n           </div>\n          </label>\n         </div>\n         <div>\n          <pre id=\"<%= id %>\" class=\"comment-text reviewtext\"><%- text %></pre>\n         </div>\n        </li>\n    `),\n\n    events: {\n        'click .add_comment_link': '_onAddCommentClicked',\n    },\n\n    /**\n     * Initialize the view.\n     *\n     * Args:\n     *     options (object):\n     *         Options for the view.\n     *\n     * Option Args:\n     *     reviewRequestEditor (RB.ReviewRequestEditor):\n     *         The editor model.\n     */\n    initialize(options) {\n        this.options = options;\n        this._$addCommentLink = null;\n        this._$draftComment = null;\n        this._$editor = null;\n        this._$commentsList = null;\n    },\n\n    /**\n     * Render the comment section.\n     *\n     * If there were any draft comments found, then editors will be\n     * created for them, the New Comment link will be hidden.\n     *\n     * Returns:\n     *     RB.ReviewRequestPage.ReviewReplyEditorView:\n     *     This object, for chaining.\n     */\n    render() {\n        this._$addCommentLink = this.$('.add_comment_link');\n        this._$commentsList = this.$('.reply-comments');\n\n        /* See if there's a draft comment to import from the page. */\n        const $draftComment = this._$commentsList.children('.draft');\n\n        if ($draftComment.length !== 0) {\n            const $time = $draftComment.find('time');\n            const $reviewText = $draftComment.find('.reviewtext');\n\n            this.model.set({\n                commentID: $draftComment.data('comment-id'),\n                text: $reviewText.html(),\n                timestamp: new Date($time.attr('datetime')),\n                richText: $reviewText.hasClass('rich-text'),\n                hasDraft: true,\n            });\n            this._createCommentEditor($draftComment);\n        }\n\n        this.listenTo(this.model, 'textUpdated', () => {\n            if (this._$editor) {\n                const reviewRequest =\n                    this.model.get('review').get('parentObject');\n\n                RB.formatText(this._$editor, {\n                    newText: this.model.get('text'),\n                    richText: this.model.get('richText'),\n                    bugTrackerURL: reviewRequest.get('bugTrackerURL'),\n                });\n            }\n        });\n\n        this.model.on('resetState', () => {\n            if (this._$draftComment) {\n                this._$draftComment.fadeOut(() => {\n                    this._$draftComment.remove();\n                    this._$draftComment = null;\n                });\n            }\n\n            this._$addCommentLink.fadeIn();\n        });\n\n        this.model.on('published', this._onPublished, this);\n    },\n\n    /**\n     * Open the comment editor for a new comment.\n     */\n    openCommentEditor() {\n        this._createCommentEditor(this._makeCommentElement());\n        this._$editor.inlineEditor('startEdit');\n    },\n\n    /**\n     * Create a comment editor for an element.\n     *\n     * Args:\n     *     $draftComment (jQuery):\n     *         The draft comment element.\n     */\n    _createCommentEditor($draftComment) {\n        const reviewRequestEditor = this.options.reviewRequestEditor;\n\n        this._$draftComment = $draftComment;\n\n        this._$editor = $draftComment.find('pre.reviewtext');\n        this._$editor\n            .inlineEditor(\n                _.extend({\n                    cls: 'inline-comment-editor',\n                    editIconClass: 'rb-icon rb-icon-edit',\n                    notifyUnchangedCompletion: true,\n                    multiline: true,\n                    hasRawValue: true,\n                    rawValue: this._$editor.data('raw-value') || '',\n                },\n                RB.TextEditorView.getInlineEditorOptions({\n                    richText: this._$editor.hasClass('rich-text'),\n                }))\n            )\n            .removeAttr('data-raw-value')\n            .on({\n                beginEdit: () => {\n                    if (reviewRequestEditor) {\n                        reviewRequestEditor.incr('editCount');\n                    }\n                },\n                complete: (e, value) => {\n                    const textEditor = RB.TextEditorView.getFromInlineEditor(\n                        this._$editor);\n\n                    if (reviewRequestEditor) {\n                        reviewRequestEditor.decr('editCount');\n                    }\n\n                    this.model.set({\n                        text: value,\n                        richText: textEditor.richText,\n                    });\n                    this.model.save();\n                },\n                cancel: () => {\n                    if (reviewRequestEditor) {\n                        reviewRequestEditor.decr('editCount');\n                    }\n\n                    this.model.resetStateIfEmpty();\n                },\n            });\n\n        this._$addCommentLink.hide();\n    },\n\n    /**\n     * Create an element for the comment form.\n     *\n     * Args:\n     *     options (object, optional):\n     *         Options for the comment element.\n     *\n     * Option Args:\n     *     now (Moment):\n     *         The current time.\n     *\n     *     richText (boolean):\n     *         Whether the text is in a rich-text format.\n     *\n     *     text (string):\n     *         The text for the comment.\n     *\n     * Returns:\n     *     jQuery:\n     *     The newly-created element.\n     */\n    _makeCommentElement(options={}) {\n        const userSession = RB.UserSession.instance;\n        const reviewRequest = this.model.get('review').get('parentObject');\n\n        const now = (\n            options.now ||\n            moment().utcOffset(userSession.get('timezoneOffset')));\n\n        const $el = $(this.commentTemplate(_.extend({\n                anchorName: null,\n                id: _.uniqueId('draft_comment_'),\n                text: '',\n                commentID: null,\n                userPageURL: userSession.get('userPageURL'),\n                fullName: userSession.get('fullName'),\n                avatarHTML: userSession.getAvatarHTML(32),\n                isDraft: true,\n                timestampISO: now.format(),\n\n                /*\n                 * Note that we format the a.m./p.m. this way to match\n                 * what's coming from the Django templates.\n                 */\n                timestamp: now.format('MMMM Do, YYYY, h:mm ') +\n                           (now.hour() < 12 ? 'a.m.' : 'p.m.'),\n            }, options)))\n            .find('.user')\n                .user_infobox()\n            .end()\n            .find('time.timesince')\n                .timesince()\n            .end();\n\n        Djblets.enableRetinaImages($el);\n\n        if (options.text) {\n            RB.formatText($el.find('.reviewtext'), {\n                newText: options.text,\n                richText: options.richText,\n                bugTrackerURL: reviewRequest.get('bugTrackerURL'),\n            });\n        }\n\n        $el.appendTo(this._$commentsList);\n\n        return $el;\n    },\n\n    /**\n     * Handler for when the New Comment link is clicked.\n     *\n     * Creates a new comment form and editor.\n     *\n     * Args:\n     *     e (Event):\n     *         The event that triggered the callback.\n     */\n    _onAddCommentClicked(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.openCommentEditor();\n    },\n\n    /**\n     * Handler for when the reply is published.\n     *\n     * Updates the draft comment to be a standard comment, and brings back\n     * the New Comment link.\n     */\n    _onPublished() {\n        if (this._$draftComment) {\n            const model = this.model;\n            const contextType = model.get('contextType');\n\n            this._$draftComment.replaceWith(this._makeCommentElement({\n                anchorName: model.get('anchorPrefix') +\n                            model.get('replyObject').id,\n                commentID: model.get('commentID'),\n                text: model.get('text'),\n                richText: model.get('richText'),\n                isDraft: false,\n            }));\n\n            this._$draftComment = null;\n        }\n    },\n});\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACAA,EAAE,CAACC,iBAAH,CAAqBC,qBAArB,GAA6CC,QAAQ,CAACC,IAAT,CAAcC,MAAd,CAAqB;EAC9DC,eAAe,EAAEC,CAAC,CAACC,QAAF,CAAkB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MA1BqB,CAD6C;EA+B9DC,MAAM,EAAE;IACJ,2BAA2B;EADvB,CA/BsD;;EAmC9D;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,UAAU,CAACC,OAAD,EAAU;IAChB,KAAKA,OAAL,GAAeA,OAAf;IACA,KAAKC,gBAAL,GAAwB,IAAxB;IACA,KAAKC,cAAL,GAAsB,IAAtB;IACA,KAAKC,QAAL,GAAgB,IAAhB;IACA,KAAKC,cAAL,GAAsB,IAAtB;EACH,CApD6D;;EAsD9D;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,MAAM,GAAG;IACL,KAAKJ,gBAAL,GAAwB,KAAKK,CAAL,CAAO,mBAAP,CAAxB;IACA,KAAKF,cAAL,GAAsB,KAAKE,CAAL,CAAO,iBAAP,CAAtB;IAEA;;IACA,MAAMC,aAAa,GAAG,KAAKH,cAAL,CAAoBI,QAApB,CAA6B,QAA7B,CAAtB;;IAEA,IAAID,aAAa,CAACE,MAAd,KAAyB,CAA7B,EAAgC;MAC5B,MAAMC,KAAK,GAAGH,aAAa,CAACI,IAAd,CAAmB,MAAnB,CAAd;MACA,MAAMC,WAAW,GAAGL,aAAa,CAACI,IAAd,CAAmB,aAAnB,CAApB;MAEA,KAAKE,KAAL,CAAWC,GAAX,CAAe;QACXC,SAAS,EAAER,aAAa,CAACS,IAAd,CAAmB,YAAnB,CADA;QAEXC,IAAI,EAAEL,WAAW,CAACM,IAAZ,EAFK;QAGXC,SAAS,EAAE,IAAIC,IAAJ,CAASV,KAAK,CAACW,IAAN,CAAW,UAAX,CAAT,CAHA;QAIXC,QAAQ,EAAEV,WAAW,CAACW,QAAZ,CAAqB,WAArB,CAJC;QAKXC,QAAQ,EAAE;MALC,CAAf;;MAOA,KAAKC,oBAAL,CAA0BlB,aAA1B;IACH;;IAED,KAAKmB,QAAL,CAAc,KAAKb,KAAnB,EAA0B,aAA1B,EAAyC,MAAM;MAC3C,IAAI,KAAKV,QAAT,EAAmB;QACf,MAAMwB,aAAa,GACf,KAAKd,KAAL,CAAWe,GAAX,CAAe,QAAf,EAAyBA,GAAzB,CAA6B,cAA7B,CADJ;QAGAvC,EAAE,CAACwC,UAAH,CAAc,KAAK1B,QAAnB,EAA6B;UACzB2B,OAAO,EAAE,KAAKjB,KAAL,CAAWe,GAAX,CAAe,MAAf,CADgB;UAEzBN,QAAQ,EAAE,KAAKT,KAAL,CAAWe,GAAX,CAAe,UAAf,CAFe;UAGzBG,aAAa,EAAEJ,aAAa,CAACC,GAAd,CAAkB,eAAlB;QAHU,CAA7B;MAKH;IACJ,CAXD;IAaA,KAAKf,KAAL,CAAWmB,EAAX,CAAc,YAAd,EAA4B,MAAM;MAC9B,IAAI,KAAK9B,cAAT,EAAyB;QACrB,KAAKA,cAAL,CAAoB+B,OAApB,CAA4B,MAAM;UAC9B,KAAK/B,cAAL,CAAoBgC,MAApB;;UACA,KAAKhC,cAAL,GAAsB,IAAtB;QACH,CAHD;MAIH;;MAED,KAAKD,gBAAL,CAAsBkC,MAAtB;IACH,CATD;IAWA,KAAKtB,KAAL,CAAWmB,EAAX,CAAc,WAAd,EAA2B,KAAKI,YAAhC,EAA8C,IAA9C;EACH,CA9G6D;;EAgH9D;AACJ;AACA;EACIC,iBAAiB,GAAG;IAChB,KAAKZ,oBAAL,CAA0B,KAAKa,mBAAL,EAA1B;;IACA,KAAKnC,QAAL,CAAcoC,YAAd,CAA2B,WAA3B;EACH,CAtH6D;;EAwH9D;AACJ;AACA;AACA;AACA;AACA;AACA;EACId,oBAAoB,CAAClB,aAAD,EAAgB;IAChC,MAAMiC,mBAAmB,GAAG,KAAKxC,OAAL,CAAawC,mBAAzC;IAEA,KAAKtC,cAAL,GAAsBK,aAAtB;IAEA,KAAKJ,QAAL,GAAgBI,aAAa,CAACI,IAAd,CAAmB,gBAAnB,CAAhB;;IACA,KAAKR,QAAL,CACKoC,YADL,CAEQ3C,CAAC,CAACF,MAAF,CAAS;MACL+C,GAAG,EAAE,uBADA;MAELC,aAAa,EAAE,sBAFV;MAGLC,yBAAyB,EAAE,IAHtB;MAILC,SAAS,EAAE,IAJN;MAKLC,WAAW,EAAE,IALR;MAMLC,QAAQ,EAAE,KAAK3C,QAAL,CAAca,IAAd,CAAmB,WAAnB,KAAmC;IANxC,CAAT,EAQA3B,EAAE,CAAC0D,cAAH,CAAkBC,sBAAlB,CAAyC;MACrC1B,QAAQ,EAAE,KAAKnB,QAAL,CAAcoB,QAAd,CAAuB,WAAvB;IAD2B,CAAzC,CARA,CAFR,EAcK0B,UAdL,CAcgB,gBAdhB,EAeKjB,EAfL,CAeQ;MACAkB,SAAS,EAAE,MAAM;QACb,IAAIV,mBAAJ,EAAyB;UACrBA,mBAAmB,CAACW,IAApB,CAAyB,WAAzB;QACH;MACJ,CALD;MAMAC,QAAQ,EAAE,CAACC,CAAD,EAAIC,KAAJ,KAAc;QACpB,MAAMC,UAAU,GAAGlE,EAAE,CAAC0D,cAAH,CAAkBS,mBAAlB,CACf,KAAKrD,QADU,CAAnB;;QAGA,IAAIqC,mBAAJ,EAAyB;UACrBA,mBAAmB,CAACiB,IAApB,CAAyB,WAAzB;QACH;;QAED,KAAK5C,KAAL,CAAWC,GAAX,CAAe;UACXG,IAAI,EAAEqC,KADK;UAEXhC,QAAQ,EAAEiC,UAAU,CAACjC;QAFV,CAAf;QAIA,KAAKT,KAAL,CAAW6C,IAAX;MACH,CAnBD;MAoBAC,MAAM,EAAE,MAAM;QACV,IAAInB,mBAAJ,EAAyB;UACrBA,mBAAmB,CAACiB,IAApB,CAAyB,WAAzB;QACH;;QAED,KAAK5C,KAAL,CAAW+C,iBAAX;MACH;IA1BD,CAfR;;IA4CA,KAAK3D,gBAAL,CAAsB4D,IAAtB;EACH,CAlL6D;;EAoL9D;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIvB,mBAAmB,GAAa;IAAA,IAAZtC,OAAY,uEAAJ,EAAI;IAC5B,MAAM8D,WAAW,GAAGzE,EAAE,CAAC0E,WAAH,CAAeC,QAAnC;IACA,MAAMrC,aAAa,GAAG,KAAKd,KAAL,CAAWe,GAAX,CAAe,QAAf,EAAyBA,GAAzB,CAA6B,cAA7B,CAAtB;IAEA,MAAMqC,GAAG,GACLjE,OAAO,CAACiE,GAAR,IACAC,MAAM,GAAGC,SAAT,CAAmBL,WAAW,CAAClC,GAAZ,CAAgB,gBAAhB,CAAnB,CAFJ;IAIA,MAAMwC,GAAG,GAAG9D,CAAC,CAAC,KAAKX,eAAL,CAAqBC,CAAC,CAACF,MAAF,CAAS;MACpC2E,UAAU,EAAE,IADwB;MAEpCC,EAAE,EAAE1E,CAAC,CAAC2E,QAAF,CAAW,gBAAX,CAFgC;MAGpCtD,IAAI,EAAE,EAH8B;MAIpCF,SAAS,EAAE,IAJyB;MAKpCyD,WAAW,EAAEV,WAAW,CAAClC,GAAZ,CAAgB,aAAhB,CALuB;MAMpC6C,QAAQ,EAAEX,WAAW,CAAClC,GAAZ,CAAgB,UAAhB,CAN0B;MAOpC8C,UAAU,EAAEZ,WAAW,CAACa,aAAZ,CAA0B,EAA1B,CAPwB;MAQpCC,OAAO,EAAE,IAR2B;MASpCC,YAAY,EAAEZ,GAAG,CAACa,MAAJ,EATsB;;MAWpC;AAChB;AACA;AACA;MACgB3D,SAAS,EAAE8C,GAAG,CAACa,MAAJ,CAAW,sBAAX,KACCb,GAAG,CAACc,IAAJ,KAAa,EAAb,GAAkB,MAAlB,GAA2B,MAD5B;IAfyB,CAAT,EAiB5B/E,OAjB4B,CAArB,CAAD,CAAD,CAkBPW,IAlBO,CAkBF,OAlBE,EAmBHqE,YAnBG,GAoBPC,GApBO,GAqBPtE,IArBO,CAqBF,gBArBE,EAsBHuE,SAtBG,GAuBPD,GAvBO,EAAZ;IAyBAE,OAAO,CAACC,kBAAR,CAA2BhB,GAA3B;;IAEA,IAAIpE,OAAO,CAACiB,IAAZ,EAAkB;MACd5B,EAAE,CAACwC,UAAH,CAAcuC,GAAG,CAACzD,IAAJ,CAAS,aAAT,CAAd,EAAuC;QACnCmB,OAAO,EAAE9B,OAAO,CAACiB,IADkB;QAEnCK,QAAQ,EAAEtB,OAAO,CAACsB,QAFiB;QAGnCS,aAAa,EAAEJ,aAAa,CAACC,GAAd,CAAkB,eAAlB;MAHoB,CAAvC;IAKH;;IAEDwC,GAAG,CAACiB,QAAJ,CAAa,KAAKjF,cAAlB;IAEA,OAAOgE,GAAP;EACH,CAvP6D;;EAyP9D;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIkB,oBAAoB,CAACjC,CAAD,EAAI;IACpBA,CAAC,CAACkC,cAAF;IACAlC,CAAC,CAACmC,eAAF;IAEA,KAAKnD,iBAAL;EACH,CAvQ6D;;EAyQ9D;AACJ;AACA;AACA;AACA;AACA;EACID,YAAY,GAAG;IACX,IAAI,KAAKlC,cAAT,EAAyB;MACrB,MAAMW,KAAK,GAAG,KAAKA,KAAnB;MACA,MAAM4E,WAAW,GAAG5E,KAAK,CAACe,GAAN,CAAU,aAAV,CAApB;;MAEA,KAAK1B,cAAL,CAAoBwF,WAApB,CAAgC,KAAKpD,mBAAL,CAAyB;QACrD+B,UAAU,EAAExD,KAAK,CAACe,GAAN,CAAU,cAAV,IACAf,KAAK,CAACe,GAAN,CAAU,aAAV,EAAyB0C,EAFgB;QAGrDvD,SAAS,EAAEF,KAAK,CAACe,GAAN,CAAU,WAAV,CAH0C;QAIrDX,IAAI,EAAEJ,KAAK,CAACe,GAAN,CAAU,MAAV,CAJ+C;QAKrDN,QAAQ,EAAET,KAAK,CAACe,GAAN,CAAU,UAAV,CAL2C;QAMrDgD,OAAO,EAAE;MAN4C,CAAzB,CAAhC;;MASA,KAAK1E,cAAL,GAAsB,IAAtB;IACH;EACJ;;AA/R6D,CAArB,CAA7C"}