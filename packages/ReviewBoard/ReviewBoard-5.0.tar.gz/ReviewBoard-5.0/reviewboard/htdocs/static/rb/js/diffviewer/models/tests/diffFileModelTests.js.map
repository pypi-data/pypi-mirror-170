{"version":3,"file":"diffFileModelTests.js","names":["suite","describe","it","data","RB","DiffFile","prototype","parse","call","undefined","base_filediff_id","binary","comment_counts","deleted","depot_filename","dest_filename","filediff","id","revision","index","interfilediff","newfile","expect","not","toBe","baseFileDiffID","commentCounts","toEqual","depotFilename","destFilename"],"sources":["../../../../../../../static/rb/js/diffviewer/models/tests/diffFileModelTests.es6.js"],"sourcesContent":["suite('rb/diffviewer/models/DiffFile', function() {\n    describe('parse', function() {\n        it('API payloads', function() {\n            const data = RB.DiffFile.prototype.parse.call(undefined, {\n                base_filediff_id: 12,\n                binary: false,\n                comment_counts: [1],\n                deleted: true,\n                depot_filename: 'foo',\n                dest_filename: 'bar',\n                filediff: {\n                    id: 38,\n                    revision: 2\n                },\n                id: 28,\n                index: 3,\n                interfilediff: {\n                    id: 23,\n                    revision: 4\n                },\n                newfile: true,\n                revision: 3\n            });\n\n            expect(data).not.toBe(undefined);\n            expect(data.baseFileDiffID).toBe(12);\n            expect(data.binary).toBe(false);\n            expect(data.commentCounts).toEqual([1]);\n            expect(data.deleted).toBe(true);\n            expect(data.depotFilename).toBe('foo');\n            expect(data.destFilename).toBe('bar');\n            expect(data.filediff).not.toBe(undefined);\n            expect(data.filediff.id).toBe(38);\n            expect(data.filediff.revision).toBe(2);\n            expect(data.id).toBe(28);\n            expect(data.index).toBe(3);\n            expect(data.interfilediff).not.toBe(undefined);\n            expect(data.interfilediff.id).toBe(23);\n            expect(data.interfilediff.revision).toBe(4);\n            expect(data.newfile).toBe(true);\n            expect(data.revision).toBe(3);\n        });\n    });\n});\n"],"mappings":";;AAAAA,KAAK,CAAC,+BAAD,EAAkC,YAAW;EAC9CC,QAAQ,CAAC,OAAD,EAAU,YAAW;IACzBC,EAAE,CAAC,cAAD,EAAiB,YAAW;MAC1B,MAAMC,IAAI,GAAGC,EAAE,CAACC,QAAH,CAAYC,SAAZ,CAAsBC,KAAtB,CAA4BC,IAA5B,CAAiCC,SAAjC,EAA4C;QACrDC,gBAAgB,EAAE,EADmC;QAErDC,MAAM,EAAE,KAF6C;QAGrDC,cAAc,EAAE,CAAC,CAAD,CAHqC;QAIrDC,OAAO,EAAE,IAJ4C;QAKrDC,cAAc,EAAE,KALqC;QAMrDC,aAAa,EAAE,KANsC;QAOrDC,QAAQ,EAAE;UACNC,EAAE,EAAE,EADE;UAENC,QAAQ,EAAE;QAFJ,CAP2C;QAWrDD,EAAE,EAAE,EAXiD;QAYrDE,KAAK,EAAE,CAZ8C;QAarDC,aAAa,EAAE;UACXH,EAAE,EAAE,EADO;UAEXC,QAAQ,EAAE;QAFC,CAbsC;QAiBrDG,OAAO,EAAE,IAjB4C;QAkBrDH,QAAQ,EAAE;MAlB2C,CAA5C,CAAb;MAqBAI,MAAM,CAACnB,IAAD,CAAN,CAAaoB,GAAb,CAAiBC,IAAjB,CAAsBf,SAAtB;MACAa,MAAM,CAACnB,IAAI,CAACsB,cAAN,CAAN,CAA4BD,IAA5B,CAAiC,EAAjC;MACAF,MAAM,CAACnB,IAAI,CAACQ,MAAN,CAAN,CAAoBa,IAApB,CAAyB,KAAzB;MACAF,MAAM,CAACnB,IAAI,CAACuB,aAAN,CAAN,CAA2BC,OAA3B,CAAmC,CAAC,CAAD,CAAnC;MACAL,MAAM,CAACnB,IAAI,CAACU,OAAN,CAAN,CAAqBW,IAArB,CAA0B,IAA1B;MACAF,MAAM,CAACnB,IAAI,CAACyB,aAAN,CAAN,CAA2BJ,IAA3B,CAAgC,KAAhC;MACAF,MAAM,CAACnB,IAAI,CAAC0B,YAAN,CAAN,CAA0BL,IAA1B,CAA+B,KAA/B;MACAF,MAAM,CAACnB,IAAI,CAACa,QAAN,CAAN,CAAsBO,GAAtB,CAA0BC,IAA1B,CAA+Bf,SAA/B;MACAa,MAAM,CAACnB,IAAI,CAACa,QAAL,CAAcC,EAAf,CAAN,CAAyBO,IAAzB,CAA8B,EAA9B;MACAF,MAAM,CAACnB,IAAI,CAACa,QAAL,CAAcE,QAAf,CAAN,CAA+BM,IAA/B,CAAoC,CAApC;MACAF,MAAM,CAACnB,IAAI,CAACc,EAAN,CAAN,CAAgBO,IAAhB,CAAqB,EAArB;MACAF,MAAM,CAACnB,IAAI,CAACgB,KAAN,CAAN,CAAmBK,IAAnB,CAAwB,CAAxB;MACAF,MAAM,CAACnB,IAAI,CAACiB,aAAN,CAAN,CAA2BG,GAA3B,CAA+BC,IAA/B,CAAoCf,SAApC;MACAa,MAAM,CAACnB,IAAI,CAACiB,aAAL,CAAmBH,EAApB,CAAN,CAA8BO,IAA9B,CAAmC,EAAnC;MACAF,MAAM,CAACnB,IAAI,CAACiB,aAAL,CAAmBF,QAApB,CAAN,CAAoCM,IAApC,CAAyC,CAAzC;MACAF,MAAM,CAACnB,IAAI,CAACkB,OAAN,CAAN,CAAqBG,IAArB,CAA0B,IAA1B;MACAF,MAAM,CAACnB,IAAI,CAACe,QAAN,CAAN,CAAsBM,IAAtB,CAA2B,CAA3B;IACH,CAvCC,CAAF;EAwCH,CAzCO,CAAR;AA0CH,CA3CI,CAAL"}