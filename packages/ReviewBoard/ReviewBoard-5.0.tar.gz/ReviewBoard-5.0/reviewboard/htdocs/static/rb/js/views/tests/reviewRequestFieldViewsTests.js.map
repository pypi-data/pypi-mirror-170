{"version":3,"file":"reviewRequestFieldViewsTests.js","names":["suite","reviewRequest","draft","extraData","rawTextFields","editor","editorView","field","beforeEach","RB","ReviewRequest","id","get","extra_data","set","ReviewRequestEditor","ReviewRequestEditorView","model","spyOn","and","resolveTo","describe","ReviewRequestFields","BaseFieldView","fieldID","it","expect","$el","data","toBe","jsonFieldName","fieldName","useExtraData","_loadValue","my_field","foo","done","_saveValue","then","save","calls","argsFor","toEqual","catch","err","fail","TextFieldView","addFieldView","jsonTextTypeFieldName","allowRichText","richTextAttr","addClass","my_field_text_type","render","inlineEditorView","textEditor","richText","options","rawValue","_formatField","text","formatValue","value","_getInlineEditorClass","RichTextInlineEditorView","InlineEditorView","undefined","_loadRichTextValue","e","console","assert","toHaveBeenCalledWith","$","MultilineTextFieldView","el","attr","removeAttr","foo_text_type"],"sources":["../../../../../../static/rb/js/views/tests/reviewRequestFieldViewsTests.es6.js"],"sourcesContent":["suite('rb/views/reviewRequestFieldViews', function() {\n    let reviewRequest;\n    let draft;\n    let extraData;\n    let rawTextFields;\n    let editor;\n    let editorView;\n    let field;\n\n    beforeEach(function() {\n        reviewRequest = new RB.ReviewRequest({\n            id: 1,\n        });\n\n        draft = reviewRequest.draft;\n        extraData = draft.get('extraData');\n\n        rawTextFields = {\n            extra_data: {},\n        };\n        draft.set('rawTextFields', rawTextFields);\n\n        editor = new RB.ReviewRequestEditor({\n            reviewRequest: reviewRequest,\n        });\n\n        editorView = new RB.ReviewRequestEditorView({\n            model: editor,\n        });\n\n        spyOn(draft, 'save').and.resolveTo();\n        spyOn(draft, 'ready').and.resolveTo();\n    });\n\n    describe('BaseFieldView', function() {\n        beforeEach(function() {\n            field = new RB.ReviewRequestFields.BaseFieldView({\n                model: editor,\n                fieldID: 'my_field',\n            });\n        });\n\n        describe('Initialization', function() {\n            it('Default behavior', function() {\n                expect(field.$el.data('field-id')).toBe('my_field');\n                expect(field.jsonFieldName).toBe('my_field');\n            });\n\n            it('With custom jsonFieldName', function() {\n                const field = new RB.ReviewRequestFields.BaseFieldView({\n                    model: editor,\n                    fieldID: 'my_field',\n                    jsonFieldName: 'my_custom_name',\n                });\n\n                expect(field.$el.data('field-id')).toBe('my_field');\n                expect(field.jsonFieldName).toBe('my_custom_name');\n            });\n        });\n\n        describe('Properties', function() {\n            it('fieldName', function() {\n                expect(field.fieldName()).toBe('myField');\n            });\n        });\n\n        describe('Methods', function() {\n            describe('_loadValue', function() {\n                it('Built-in field', function() {\n                    field.useExtraData = false;\n                    draft.set('myField', 'this is a test');\n\n                    expect(field._loadValue()).toBe('this is a test');\n                });\n\n                it('Custom field', function() {\n                    extraData.my_field = 'this is a test';\n\n                    expect(field._loadValue()).toBe('this is a test');\n                });\n\n                it('Custom field and custom jsonFieldName', function() {\n                    const field = new RB.ReviewRequestFields.BaseFieldView({\n                        model: editor,\n                        fieldID: 'my_field',\n                        jsonFieldName: 'foo',\n                    });\n\n                    extraData.foo = 'this is a test';\n\n                    expect(field._loadValue()).toBe('this is a test');\n                });\n            });\n\n            describe('_saveValue', function() {\n                it('Built-in field', function(done) {\n                    field.useExtraData = false;\n                    field._saveValue('test')\n                        .then(() => {\n                            expect(draft.save.calls.argsFor(0)[0].data)\n                                .toEqual({\n                                    my_field: 'test',\n                                });\n\n                            done();\n                        })\n                        .catch(err => done.fail(err));\n                });\n\n                it('Custom field', function(done) {\n                    field._saveValue('this is a test')\n                        .then(() => {\n                            expect(draft.save.calls.argsFor(0)[0].data)\n                                .toEqual({\n                                    'extra_data.my_field': 'this is a test',\n                                });\n\n                            done();\n                        })\n                        .catch(err => done.fail(err));\n                });\n\n                it('Custom field and custom jsonFieldName', function(done) {\n                    const field = new RB.ReviewRequestFields.BaseFieldView({\n                        model: editor,\n                        fieldID: 'my_field',\n                        jsonFieldName: 'foo',\n                    });\n\n                    field._saveValue('this is a test')\n                        .then(() => {\n                            expect(draft.save.calls.argsFor(0)[0].data)\n                                .toEqual({\n                                    'extra_data.foo': 'this is a test',\n                                });\n\n                            done();\n                        })\n                        .catch(err => done.fail(err));\n                });\n            });\n        });\n    });\n\n    describe('TextFieldView', function() {\n        beforeEach(function() {\n            field = new RB.ReviewRequestFields.TextFieldView({\n                model: editor,\n                fieldID: 'my_field',\n            });\n            editorView.addFieldView(field);\n        });\n\n        describe('Properties', function() {\n            describe('jsonTextTypeFieldName', function() {\n                it('With fieldID != \"text\"', function() {\n                    expect(field.jsonTextTypeFieldName)\n                        .toBe('my_field_text_type');\n                });\n\n                it('With fieldID = \"text\"', function() {\n                    field = new RB.ReviewRequestFields.TextFieldView({\n                        model: editor,\n                        fieldID: 'text',\n                    });\n\n                    expect(field.jsonTextTypeFieldName).toBe('text_type');\n                });\n            });\n\n            describe('richTextAttr', function() {\n                it('With allowRichText=true', function() {\n                    field.allowRichText = true;\n\n                    expect(field.richTextAttr()).toBe('myFieldRichText');\n                });\n\n                it('With allowRichText=false', function() {\n                    field.allowRichText = false;\n\n                    expect(field.richTextAttr()).toBe(null);\n                });\n            });\n        });\n\n        describe('Methods', function() {\n            describe('render', function() {\n                beforeEach(function() {\n                    field.$el.addClass('editable');\n                    rawTextFields.extra_data = {\n                        my_field: '**Hello world**',\n                        my_field_text_type: 'markdown',\n                    };\n                });\n\n                describe('With allowRichText=true', function() {\n                    beforeEach(function() {\n                        field.allowRichText = true;\n                    });\n\n                    it('With richText=true', function() {\n                        rawTextFields.extra_data.my_field_text_type =\n                            'markdown';\n\n                        field.render();\n\n                        expect(field.inlineEditorView.textEditor.richText)\n                            .toBe(true);\n                        expect(field.inlineEditorView.options.rawValue)\n                            .toBe('**Hello world**');\n                    });\n\n                    it('With richText=false', function() {\n                        rawTextFields.extra_data.my_field_text_type = 'plain';\n\n                        field.render();\n\n                        expect(field.inlineEditorView.textEditor.richText)\n                            .toBe(false);\n                        expect(field.inlineEditorView.options.rawValue)\n                            .toBe('**Hello world**');\n                    });\n                });\n            });\n\n            describe('_formatField', function() {\n                it('With built-in field', function() {\n                    field.useExtraData = false;\n\n                    draft.set('myField', 'Hello world');\n\n                    field._formatField();\n                    expect(field.$el.text()).toBe('Hello world');\n                });\n\n                it('With custom field', function() {\n                    editorView.addFieldView(field);\n\n                    extraData.my_field = 'Hello world';\n\n                    field._formatField();\n                    expect(field.$el.text()).toBe('Hello world');\n                });\n\n                it('With formatValue as function', function() {\n                    field.formatValue = function(value) {\n                        this.$el.text(`[${value}]`);\n                    };\n\n                    extraData.my_field = 'Hello world';\n\n                    field._formatField();\n                    expect(field.$el.text()).toBe('[Hello world]');\n                });\n            });\n\n            describe('_getInlineEditorClass', function() {\n                it('With allowRichText=true', function() {\n                    field.allowRichText = true;\n\n                    expect(field._getInlineEditorClass())\n                        .toBe(RB.RichTextInlineEditorView);\n                });\n\n                it('With allowRichText=false', function() {\n                    field.allowRichText = false;\n\n                    expect(field._getInlineEditorClass())\n                        .toBe(RB.InlineEditorView);\n                });\n            });\n\n            describe('_loadRichTextValue', function() {\n                beforeEach(function() {\n                    field.allowRichText = true;\n                });\n\n                describe('With built-in field', function() {\n                    beforeEach(function() {\n                        field.useExtraData = false;\n                    });\n\n                    it('With value=undefined', function() {\n                        draft.set('myFieldRichText', undefined);\n                        expect(field._loadRichTextValue()).toBe(undefined);\n                    });\n\n                    it('With value=false', function() {\n                        draft.set('myFieldRichText', false);\n                        expect(field._loadRichTextValue()).toBe(false);\n                    });\n\n                    it('With value=true', function() {\n                        draft.set('myFieldRichText', true);\n                        expect(field._loadRichTextValue()).toBe(true);\n                    });\n                });\n\n                describe('With custom field', function() {\n                    it('With textType=undefined', function() {\n                        expect(field._loadRichTextValue()).toBe(undefined);\n                    });\n\n                    it('With textType=plain', function() {\n                        rawTextFields.extra_data.my_field_text_type = 'plain';\n                        expect(field._loadRichTextValue()).toBe(false);\n                    });\n\n                    it('With textType=markdown', function() {\n                        rawTextFields.extra_data.my_field_text_type =\n                            'markdown';\n                        expect(field._loadRichTextValue()).toBe(true);\n                    });\n\n                    it('With textType=invalid value', function() {\n                        rawTextFields.extra_data.my_field_text_type = 'html';\n\n                        try {\n                            field._loadRichTextValue();\n                        } catch (e) {}\n\n                        expect(console.assert).toHaveBeenCalledWith(\n                            false,\n                            'Text type \"html\" in field \"my_field_text_type\" ' +\n                            'not supported.');\n                    });\n                });\n            });\n        });\n    });\n\n    describe('MultilineTextFieldView', function() {\n        describe('Initialization from DOM', function() {\n            let $el;\n\n            beforeEach(function() {\n                $el = $('<span data-allow-markdown=\"true\"/>')\n                    .text('DOM text value');\n            });\n\n            describe('allowRichText', function() {\n                it('allow-markdown=true', function() {\n                    field = new RB.ReviewRequestFields.MultilineTextFieldView({\n                        model: editor,\n                        fieldID: 'my_field',\n                        jsonFieldName: 'foo',\n                        el: $el,\n                    });\n\n                    expect(field.allowRichText).toBe(true);\n                });\n\n                it('allow-markdown=false', function() {\n\n                    field = new RB.ReviewRequestFields.MultilineTextFieldView({\n                        model: editor,\n                        fieldID: 'my_field',\n                        jsonFieldName: 'foo',\n                        el: $el.attr('data-allow-markdown', 'false'),\n                    });\n\n                    expect(field.allowRichText).toBe(false);\n                });\n\n                it('allow-markdown unset', function() {\n                    field = new RB.ReviewRequestFields.MultilineTextFieldView({\n                        model: editor,\n                        fieldID: 'my_field',\n                        jsonFieldName: 'foo',\n                        el: $el.removeAttr('data-allow-markdown'),\n                    });\n\n                    expect(field.allowRichText).toBe(undefined);\n                });\n            });\n\n            describe('Text value', function() {\n                it('raw-value set', function() {\n\n                    field = new RB.ReviewRequestFields.MultilineTextFieldView({\n                        model: editor,\n                        fieldID: 'my_field',\n                        jsonFieldName: 'foo',\n                        el: $el.attr('data-raw-value', 'attr text value'),\n                    });\n\n                    expect(extraData.foo).toBe('attr text value');\n                    expect($el.attr('data-raw-value')).toBe(undefined);\n                });\n\n                it('raw-value unset', function() {\n                    field = new RB.ReviewRequestFields.MultilineTextFieldView({\n                        model: editor,\n                        fieldID: 'my_field',\n                        jsonFieldName: 'foo',\n                        el: $el,\n                    });\n\n                    expect(extraData.foo).toBe('DOM text value');\n                });\n            });\n\n            describe('Text type value', function() {\n                it('rich-text class present', function() {\n                    field = new RB.ReviewRequestFields.MultilineTextFieldView({\n                        model: editor,\n                        fieldID: 'my_field',\n                        jsonFieldName: 'foo',\n                        el: $el.addClass('rich-text'),\n                    });\n\n                    expect(extraData.foo_text_type).toBe('markdown');\n                });\n\n                it('rich-text class not present', function() {\n                    field = new RB.ReviewRequestFields.MultilineTextFieldView({\n                        model: editor,\n                        fieldID: 'my_field',\n                        jsonFieldName: 'foo',\n                        el: $el,\n                    });\n\n                    expect(extraData.foo_text_type).toBe('plain');\n                });\n            });\n        });\n    });\n});\n"],"mappings":"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"}