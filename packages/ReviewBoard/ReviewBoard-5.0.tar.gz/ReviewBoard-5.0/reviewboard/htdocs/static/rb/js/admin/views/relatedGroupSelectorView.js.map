{"version":3,"file":"relatedGroupSelectorView.js","names":["optionTemplate","_","template","RB","RelatedGroupSelectorView","Djblets","RelatedObjectSelectorView","extend","searchPlaceholderText","initialize","options","prototype","call","defaults","selectizeOptions","searchField","sortField","field","valueField","_localSitePrefix","localSitePrefix","_inviteOnly","inviteOnly","renderOption","item","loadOptions","query","callback","params","displayname","length","q","$","ajax","type","url","SITE_ROOT","data","success","results","groups","filter","obj","invite_only","map","u","name","display_name","id","error","args","console"],"sources":["../../../../../../static/rb/js/admin/views/relatedGroupSelectorView.es6.js"],"sourcesContent":["(function() {\n\n\nconst optionTemplate = _.template(dedent`\n    <div>\n     <span class=\"title\"><%- name %> : <%- display_name %></span>\n    </div>\n`);\n\n\n/**\n * A widget to select related groups using search and autocomplete.\n */\nRB.RelatedGroupSelectorView = Djblets.RelatedObjectSelectorView.extend({\n    searchPlaceholderText: gettext('Search for groups...'),\n\n    /**\n     * Initialize the view.\n     *\n     * Args:\n     *     options (object):\n     *         Options for the view.\n     *\n     * Option Args:\n     *     localSitePrefix (string):\n     *         The URL prefix for the local site, if any.\n     *\n     *     multivalued (boolean):\n     *         Whether or not the widget should allow selecting multuple\n     *         values.\n     *\n     *     inviteOnly (boolean):\n     *         Whether or not we want to only search for inviteOnly review\n     *         groups.\n     */\n    initialize(options) {\n        Djblets.RelatedObjectSelectorView.prototype.initialize.call(\n            this,\n            _.defaults({\n                selectizeOptions: {\n                    searchField: ['name', 'display_name'],\n                    sortField: [\n                        {field: 'name'},\n                        {field: 'display_name'},\n                    ],\n                    valueField: 'name',\n                }\n            }, options));\n\n        this._localSitePrefix = options.localSitePrefix || '';\n        this._inviteOnly = options.inviteOnly;\n    },\n\n    /**\n     * Render an option in the drop-down menu.\n     *\n     * Args:\n     *     item (object):\n     *         The item to render.\n     *\n     * Returns:\n     *     string:\n     *     HTML to insert into the drop-down menu.\n     */\n    renderOption(item) {\n        return optionTemplate(item);\n    },\n\n    /**\n     * Load options from the server.\n     *\n     * Args:\n     *     query (string):\n     *         The string typed in by the user.\n     *\n     *     callback (function):\n     *         A callback to be called once data has been loaded. This should\n     *         be passed an array of objects, each representing an option in\n     *         the drop-down.\n     */\n    loadOptions(query, callback) {\n        const params = {\n            'only-fields': 'invite_only,name,display_name,id',\n            displayname: 1,\n        };\n\n        if (query.length !== 0) {\n            params.q = query;\n        }\n\n        $.ajax({\n            type: 'GET',\n            url: `${SITE_ROOT}${this._localSitePrefix}api/groups/`,\n            data: params,\n            success: results => {\n                /* This is done because we cannot filter using invite_only in\n                the groups api. */\n                if (this._inviteOnly === true) {\n                    results.groups = results.groups.filter(obj => {\n                        return obj.invite_only;\n                    });\n                }\n                callback(results.groups.map(u => ({\n                    name: u.name,\n                    display_name: u.display_name,\n                    id: u.id,\n                    invite_only: u.invite_only\n                })));\n            },\n            error: (...args) => {\n                console.error('Group query failed', args);\n                callback();\n            },\n        });\n    },\n});\n\n\n})();\n"],"mappings":";;AAAA,CAAC,YAAW;EAGZ,MAAMA,cAAc,GAAGC,CAAC,CAACC,QAAF,CAAkB;AACzC;AACA,OAFuB,CAAvB;EAOA;AACA;AACA;;;EACAC,EAAE,CAACC,wBAAH,GAA8BC,OAAO,CAACC,yBAAR,CAAkCC,MAAlC,CAAyC;IACnEC,qBAAqB,iCAD8C;;IAGnE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACIC,UAAU,CAACC,OAAD,EAAU;MAChBL,OAAO,CAACC,yBAAR,CAAkCK,SAAlC,CAA4CF,UAA5C,CAAuDG,IAAvD,CACI,IADJ,EAEIX,CAAC,CAACY,QAAF,CAAW;QACPC,gBAAgB,EAAE;UACdC,WAAW,EAAE,CAAC,MAAD,EAAS,cAAT,CADC;UAEdC,SAAS,EAAE,CACP;YAACC,KAAK,EAAE;UAAR,CADO,EAEP;YAACA,KAAK,EAAE;UAAR,CAFO,CAFG;UAMdC,UAAU,EAAE;QANE;MADX,CAAX,EASGR,OATH,CAFJ;MAaA,KAAKS,gBAAL,GAAwBT,OAAO,CAACU,eAAR,IAA2B,EAAnD;MACA,KAAKC,WAAL,GAAmBX,OAAO,CAACY,UAA3B;IACH,CAtCkE;;IAwCnE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACIC,YAAY,CAACC,IAAD,EAAO;MACf,OAAOxB,cAAc,CAACwB,IAAD,CAArB;IACH,CArDkE;;IAuDnE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACIC,WAAW,CAACC,KAAD,EAAQC,QAAR,EAAkB;MACzB,MAAMC,MAAM,GAAG;QACX,eAAe,kCADJ;QAEXC,WAAW,EAAE;MAFF,CAAf;;MAKA,IAAIH,KAAK,CAACI,MAAN,KAAiB,CAArB,EAAwB;QACpBF,MAAM,CAACG,CAAP,GAAWL,KAAX;MACH;;MAEDM,CAAC,CAACC,IAAF,CAAO;QACHC,IAAI,EAAE,KADH;QAEHC,GAAG,EAAG,GAAEC,SAAU,GAAE,KAAKjB,gBAAiB,aAFvC;QAGHkB,IAAI,EAAET,MAHH;QAIHU,OAAO,EAAEC,OAAO,IAAI;UAChB;AAChB;UACgB,IAAI,KAAKlB,WAAL,KAAqB,IAAzB,EAA+B;YAC3BkB,OAAO,CAACC,MAAR,GAAiBD,OAAO,CAACC,MAAR,CAAeC,MAAf,CAAsBC,GAAG,IAAI;cAC1C,OAAOA,GAAG,CAACC,WAAX;YACH,CAFgB,CAAjB;UAGH;;UACDhB,QAAQ,CAACY,OAAO,CAACC,MAAR,CAAeI,GAAf,CAAmBC,CAAC,KAAK;YAC9BC,IAAI,EAAED,CAAC,CAACC,IADsB;YAE9BC,YAAY,EAAEF,CAAC,CAACE,YAFc;YAG9BC,EAAE,EAAEH,CAAC,CAACG,EAHwB;YAI9BL,WAAW,EAAEE,CAAC,CAACF;UAJe,CAAL,CAApB,CAAD,CAAR;QAMH,CAlBE;QAmBHM,KAAK,EAAE,YAAa;UAAA,kCAATC,IAAS;YAATA,IAAS;UAAA;;UAChBC,OAAO,CAACF,KAAR,CAAc,oBAAd,EAAoCC,IAApC;UACAvB,QAAQ;QACX;MAtBE,CAAP;IAwBH;;EArGkE,CAAzC,CAA9B;AAyGC,CAtHD"}