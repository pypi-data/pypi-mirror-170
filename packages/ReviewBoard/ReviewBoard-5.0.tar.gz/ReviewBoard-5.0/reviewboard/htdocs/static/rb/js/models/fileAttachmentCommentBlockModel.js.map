{"version":3,"file":"fileAttachmentCommentBlockModel.js","names":["RB","FileAttachmentCommentBlock","AbstractCommentBlock","extend","defaults","_","fileAttachmentID","diffAgainstFileAttachmentID","prototype","serializedFields","createComment","id","comment","get","createFileAttachmentComment","pick","attributes"],"sources":["../../../../../static/rb/js/models/fileAttachmentCommentBlockModel.es6.js"],"sourcesContent":["/**\n * Represents the comments on a file attachment.\n *\n * FileAttachmentCommentBlock deals with creating and representing comments\n * that exist on a file attachment. It's a base class that is meant to be\n * subclassed.\n *\n * Model Attributes:\n *     fileAttachmentID (number):\n *         The ID of the file attachment being commented upon.\n *\n *     diffAgainstFileAttachmentID (number):\n *         An optional ID of the file attachment being diffed against.\n *\n * See Also:\n *     :js:class:`RB.AbstractCommentBlock`:\n *         For attributes defined on the base model.\n */\nRB.FileAttachmentCommentBlock = RB.AbstractCommentBlock.extend({\n    defaults: _.defaults({\n        fileAttachmentID: null,\n        diffAgainstFileAttachmentID: null\n    }, RB.AbstractCommentBlock.prototype.defaults),\n\n    /**\n     * The list of extra fields on this model.\n     *\n     * These will be stored on the server in the FileAttachmentComment's\n     * extra_data field.\n     */\n    serializedFields: [],\n\n    /**\n     * Create a FileAttachmentComment for the given comment ID.\n     *\n     * The subclass's storeCommentData will be called, allowing additional\n     * data to be stored along with the comment.\n     *\n     * Args:\n     *     id (number):\n     *         The ID of the comment to instantiate the model for.\n     *\n     * Returns:\n     *     RB.FileAttachmentComment:\n     *     The new comment model.\n     */\n    createComment(id) {\n        const comment = this.get('review').createFileAttachmentComment(\n            id,\n            this.get('fileAttachmentID'),\n            this.get('diffAgainstFileAttachmentID'));\n\n        _.extend(comment.get('extraData'),\n                 _.pick(this.attributes, this.serializedFields));\n\n        return comment;\n    },\n});\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,EAAE,CAACC,0BAAH,GAAgCD,EAAE,CAACE,oBAAH,CAAwBC,MAAxB,CAA+B;EAC3DC,QAAQ,EAAEC,CAAC,CAACD,QAAF,CAAW;IACjBE,gBAAgB,EAAE,IADD;IAEjBC,2BAA2B,EAAE;EAFZ,CAAX,EAGPP,EAAE,CAACE,oBAAH,CAAwBM,SAAxB,CAAkCJ,QAH3B,CADiD;;EAM3D;AACJ;AACA;AACA;AACA;AACA;EACIK,gBAAgB,EAAE,EAZyC;;EAc3D;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,aAAa,CAACC,EAAD,EAAK;IACd,MAAMC,OAAO,GAAG,KAAKC,GAAL,CAAS,QAAT,EAAmBC,2BAAnB,CACZH,EADY,EAEZ,KAAKE,GAAL,CAAS,kBAAT,CAFY,EAGZ,KAAKA,GAAL,CAAS,6BAAT,CAHY,CAAhB;;IAKAR,CAAC,CAACF,MAAF,CAASS,OAAO,CAACC,GAAR,CAAY,WAAZ,CAAT,EACSR,CAAC,CAACU,IAAF,CAAO,KAAKC,UAAZ,EAAwB,KAAKP,gBAA7B,CADT;;IAGA,OAAOG,OAAP;EACH;;AAtC0D,CAA/B,CAAhC"}