{"version":3,"file":"diffRevisionModelTests.js","names":["suite","describe","it","data","RB","DiffRevision","prototype","parse","call","undefined","revision","latest_revision","interdiff_revision","is_interdiff","is_draft_diff","expect","not","toBe","latestRevision","interdiffRevision","isInterdiff","isDraftDiff","baseCommitID","tipCommitID","base_commit_id","tip_commit_id"],"sources":["../../../../../../../static/rb/js/diffviewer/models/tests/diffRevisionModelTests.es6.js"],"sourcesContent":["suite('rb/diffviewer/models/DiffRevision', function() {\n    describe('parse', function() {\n        it('API payloads', function() {\n            const data = RB.DiffRevision.prototype.parse.call(undefined, {\n                revision: 2,\n                latest_revision: 3,\n                interdiff_revision: 4,\n                is_interdiff: true,\n                is_draft_diff: true,\n            });\n\n            expect(data).not.toBe(undefined);\n            expect(data.revision).toBe(2);\n            expect(data.latestRevision).toBe(3);\n            expect(data.interdiffRevision).toBe(4);\n            expect(data.isInterdiff).toBe(true);\n            expect(data.isDraftDiff).toBe(true);\n            expect(data.baseCommitID).toBe(null);\n            expect(data.tipCommitID).toBe(null);\n        });\n\n        it('API payloads with base/tip commit IDs', function() {\n            const data = RB.DiffRevision.prototype.parse.call(undefined, {\n                revision: 4,\n                latest_revision: 7,\n                interdiff_revision: null,\n                is_interdiff: false,\n                is_draft_diff: false,\n                base_commit_id: 3,\n                tip_commit_id: 4,\n            });\n\n            expect(data).not.toBe(undefined);\n            expect(data.revision).toBe(4);\n            expect(data.latestRevision).toBe(7);\n            expect(data.interdiffRevision).toBe(null);\n            expect(data.isInterdiff).toBe(false);\n            expect(data.isDraftDiff).toBe(false);\n            expect(data.baseCommitID).toBe(3);\n            expect(data.tipCommitID).toBe(4);\n        });\n    });\n});\n"],"mappings":";;AAAAA,KAAK,CAAC,mCAAD,EAAsC,YAAW;EAClDC,QAAQ,CAAC,OAAD,EAAU,YAAW;IACzBC,EAAE,CAAC,cAAD,EAAiB,YAAW;MAC1B,MAAMC,IAAI,GAAGC,EAAE,CAACC,YAAH,CAAgBC,SAAhB,CAA0BC,KAA1B,CAAgCC,IAAhC,CAAqCC,SAArC,EAAgD;QACzDC,QAAQ,EAAE,CAD+C;QAEzDC,eAAe,EAAE,CAFwC;QAGzDC,kBAAkB,EAAE,CAHqC;QAIzDC,YAAY,EAAE,IAJ2C;QAKzDC,aAAa,EAAE;MAL0C,CAAhD,CAAb;MAQAC,MAAM,CAACZ,IAAD,CAAN,CAAaa,GAAb,CAAiBC,IAAjB,CAAsBR,SAAtB;MACAM,MAAM,CAACZ,IAAI,CAACO,QAAN,CAAN,CAAsBO,IAAtB,CAA2B,CAA3B;MACAF,MAAM,CAACZ,IAAI,CAACe,cAAN,CAAN,CAA4BD,IAA5B,CAAiC,CAAjC;MACAF,MAAM,CAACZ,IAAI,CAACgB,iBAAN,CAAN,CAA+BF,IAA/B,CAAoC,CAApC;MACAF,MAAM,CAACZ,IAAI,CAACiB,WAAN,CAAN,CAAyBH,IAAzB,CAA8B,IAA9B;MACAF,MAAM,CAACZ,IAAI,CAACkB,WAAN,CAAN,CAAyBJ,IAAzB,CAA8B,IAA9B;MACAF,MAAM,CAACZ,IAAI,CAACmB,YAAN,CAAN,CAA0BL,IAA1B,CAA+B,IAA/B;MACAF,MAAM,CAACZ,IAAI,CAACoB,WAAN,CAAN,CAAyBN,IAAzB,CAA8B,IAA9B;IACH,CAjBC,CAAF;IAmBAf,EAAE,CAAC,uCAAD,EAA0C,YAAW;MACnD,MAAMC,IAAI,GAAGC,EAAE,CAACC,YAAH,CAAgBC,SAAhB,CAA0BC,KAA1B,CAAgCC,IAAhC,CAAqCC,SAArC,EAAgD;QACzDC,QAAQ,EAAE,CAD+C;QAEzDC,eAAe,EAAE,CAFwC;QAGzDC,kBAAkB,EAAE,IAHqC;QAIzDC,YAAY,EAAE,KAJ2C;QAKzDC,aAAa,EAAE,KAL0C;QAMzDU,cAAc,EAAE,CANyC;QAOzDC,aAAa,EAAE;MAP0C,CAAhD,CAAb;MAUAV,MAAM,CAACZ,IAAD,CAAN,CAAaa,GAAb,CAAiBC,IAAjB,CAAsBR,SAAtB;MACAM,MAAM,CAACZ,IAAI,CAACO,QAAN,CAAN,CAAsBO,IAAtB,CAA2B,CAA3B;MACAF,MAAM,CAACZ,IAAI,CAACe,cAAN,CAAN,CAA4BD,IAA5B,CAAiC,CAAjC;MACAF,MAAM,CAACZ,IAAI,CAACgB,iBAAN,CAAN,CAA+BF,IAA/B,CAAoC,IAApC;MACAF,MAAM,CAACZ,IAAI,CAACiB,WAAN,CAAN,CAAyBH,IAAzB,CAA8B,KAA9B;MACAF,MAAM,CAACZ,IAAI,CAACkB,WAAN,CAAN,CAAyBJ,IAAzB,CAA8B,KAA9B;MACAF,MAAM,CAACZ,IAAI,CAACmB,YAAN,CAAN,CAA0BL,IAA1B,CAA+B,CAA/B;MACAF,MAAM,CAACZ,IAAI,CAACoB,WAAN,CAAN,CAAyBN,IAAzB,CAA8B,CAA9B;IACH,CAnBC,CAAF;EAoBH,CAxCO,CAAR;AAyCH,CA1CI,CAAL"}