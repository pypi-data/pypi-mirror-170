{"version":3,"file":"changeFormPageView.js","names":["RB","Admin","ChangeFormPageView","PageView","extend","initialize","options","prototype","call","formID","formView","inlineGroupViews","renderPage","console","assert","length","FormView","el","$","render","each","i","inlineGroup","InlineFormGroup","prefix","data","inlineGroupView","InlineFormGroupView","model","push","listenTo","setupFormWidgets","$el"],"sources":["../../../../../../static/rb/js/admin/views/changeFormPageView.es6.js"],"sourcesContent":["/**\n * A view for managing the administration UI's database model change pages.\n *\n * This sets up the page to manage the configuration form and any inline\n * groups used for adding, modifying, or deleting related objects.\n */\nRB.Admin.ChangeFormPageView = RB.Admin.PageView.extend({\n    /**\n     * Initialize the view.\n     *\n     * Args:\n     *     options (object):\n     *         The options passed to the page.\n     *\n     * Option Args:\n     *     formID (string):\n     *         The element ID for the form.\n     */\n    initialize(options) {\n        RB.Admin.PageView.prototype.initialize.call(this, options);\n\n        this.formID = options.formID;\n        this.formView = null;\n        this.inlineGroupViews = [];\n    },\n\n    /**\n     * Render the page.\n     *\n     * This will set up the form and inline group management.\n     */\n    renderPage() {\n        RB.Admin.PageView.prototype.renderPage.call(this);\n\n        console.assert(this.inlineGroupViews.length === 0);\n\n        this.formView = new RB.FormView({\n            el: $(`#${this.formID}`),\n        });\n        this.formView.render();\n\n        this.$('.rb-c-admin-form-inline-group').each((i, el) => {\n            const inlineGroup = new RB.Admin.InlineFormGroup({\n                prefix: $(el).data('prefix'),\n            });\n            const inlineGroupView = new RB.Admin.InlineFormGroupView({\n                el: el,\n                model: inlineGroup,\n            });\n            inlineGroupView.render();\n\n            this.inlineGroupViews.push(inlineGroupView);\n\n            this.listenTo(\n                inlineGroupView,\n                'inlineFormAdded',\n                () => this.formView.setupFormWidgets(inlineGroupView.$el));\n        });\n    },\n});\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACAA,EAAE,CAACC,KAAH,CAASC,kBAAT,GAA8BF,EAAE,CAACC,KAAH,CAASE,QAAT,CAAkBC,MAAlB,CAAyB;EACnD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,UAAU,CAACC,OAAD,EAAU;IAChBN,EAAE,CAACC,KAAH,CAASE,QAAT,CAAkBI,SAAlB,CAA4BF,UAA5B,CAAuCG,IAAvC,CAA4C,IAA5C,EAAkDF,OAAlD;IAEA,KAAKG,MAAL,GAAcH,OAAO,CAACG,MAAtB;IACA,KAAKC,QAAL,GAAgB,IAAhB;IACA,KAAKC,gBAAL,GAAwB,EAAxB;EACH,CAlBkD;;EAoBnD;AACJ;AACA;AACA;AACA;EACIC,UAAU,GAAG;IACTZ,EAAE,CAACC,KAAH,CAASE,QAAT,CAAkBI,SAAlB,CAA4BK,UAA5B,CAAuCJ,IAAvC,CAA4C,IAA5C;IAEAK,OAAO,CAACC,MAAR,CAAe,KAAKH,gBAAL,CAAsBI,MAAtB,KAAiC,CAAhD;IAEA,KAAKL,QAAL,GAAgB,IAAIV,EAAE,CAACgB,QAAP,CAAgB;MAC5BC,EAAE,EAAEC,CAAC,CAAE,IAAG,KAAKT,MAAO,EAAjB;IADuB,CAAhB,CAAhB;IAGA,KAAKC,QAAL,CAAcS,MAAd;IAEA,KAAKD,CAAL,CAAO,+BAAP,EAAwCE,IAAxC,CAA6C,CAACC,CAAD,EAAIJ,EAAJ,KAAW;MACpD,MAAMK,WAAW,GAAG,IAAItB,EAAE,CAACC,KAAH,CAASsB,eAAb,CAA6B;QAC7CC,MAAM,EAAEN,CAAC,CAACD,EAAD,CAAD,CAAMQ,IAAN,CAAW,QAAX;MADqC,CAA7B,CAApB;MAGA,MAAMC,eAAe,GAAG,IAAI1B,EAAE,CAACC,KAAH,CAAS0B,mBAAb,CAAiC;QACrDV,EAAE,EAAEA,EADiD;QAErDW,KAAK,EAAEN;MAF8C,CAAjC,CAAxB;MAIAI,eAAe,CAACP,MAAhB;MAEA,KAAKR,gBAAL,CAAsBkB,IAAtB,CAA2BH,eAA3B;MAEA,KAAKI,QAAL,CACIJ,eADJ,EAEI,iBAFJ,EAGI,MAAM,KAAKhB,QAAL,CAAcqB,gBAAd,CAA+BL,eAAe,CAACM,GAA/C,CAHV;IAIH,CAhBD;EAiBH;;AApDkD,CAAzB,CAA9B"}