{"version":3,"file":"fileAttachmentCommentModel.js","names":["RB","FileAttachmentComment","BaseComment","extend","defaults","_","diffAgainstFileAttachmentID","diffAgainstFileAttachment","fileAttachmentID","fileAttachment","linkText","reviewURL","thumbnailHTML","prototype","rspNamespace","expandedFields","attrToJsonMap","serializedAttrs","concat","deserializedAttrs","serializers","JSONSerializers","onlyIfUnloaded","onlyIfUnloadedAndValue","parseResourceData","rsp","result","call","FileAttachment","file_attachment","parse","id","diff_against_file_attachment","validate","attrs","options","has","strings","INVALID_FILE_ATTACHMENT_ID","_super"],"sources":["../../../../../../static/rb/js/resources/models/fileAttachmentCommentModel.es6.js"],"sourcesContent":["/**\n * A comment on a file attachment.\n *\n * Model Attributes:\n *     diffAgainstFileAttachmentID (number):\n *         The ID of the file attachment that is the \"new\" side of a comment on\n *         a file diff.\n *\n *     diffAgainstFileAttachment (RB.FileAttachment):\n *         The file attachment that is the \"new\" side of a comment on a file\n *         diff.\n *\n *     fileAttachmentID (number):\n *         The ID of the file attachment that the comment is on, or the ID of\n *         the file attachment that is the \"old\" side of a comment on a file\n *         diff.\n *\n *     fileAttachment (RB.FileAttachment):\n *         The file attachment that the comment is on, or the ID of the file\n *         attachment that is the \"old\" side of a comment on a file diff.\n *\n *     linkText (string):\n *         The text used to describe a link to the file. This may differ\n *         depending on the comment.\n *\n *     reviewURL (string):\n *         The URL for the file attachment review UI for the comment.\n *\n *     thumbnailHTML (string):\n *         The HTML representing a thumbnail, if any, for this comment.\n */\nRB.FileAttachmentComment = RB.BaseComment.extend({\n    defaults: _.defaults({\n        diffAgainstFileAttachmentID: null,\n        diffAgainstFileAttachment: null,\n        fileAttachmentID: null,\n        fileAttachment: null,\n        linkText: null,\n        reviewURL: null,\n        thumbnailHTML: null\n    }, RB.BaseComment.prototype.defaults()),\n\n    rspNamespace: 'file_attachment_comment',\n    expandedFields: ['diff_against_file_attachment', 'file_attachment'],\n\n    attrToJsonMap: _.defaults({\n        diffAgainstFileAttachmentID: 'diff_against_file_attachment_id',\n        fileAttachmentID: 'file_attachment_id',\n        linkText: 'link_text',\n        reviewURL: 'review_url',\n        thumbnailHTML: 'thumbnail_html'\n    }, RB.BaseComment.prototype.attrToJsonMap),\n\n    serializedAttrs: [\n        'diffAgainstFileAttachmentID',\n        'fileAttachmentID'\n    ].concat(RB.BaseComment.prototype.serializedAttrs),\n\n    deserializedAttrs: [\n        'linkText',\n        'thumbnailHTML',\n        'reviewURL'\n    ].concat(RB.BaseComment.prototype.deserializedAttrs),\n\n    serializers: _.defaults({\n        fileAttachmentID: RB.JSONSerializers.onlyIfUnloaded,\n        diffAgainstFileAttachmentID: RB.JSONSerializers.onlyIfUnloadedAndValue\n    }, RB.BaseComment.prototype.serializers),\n\n    /**\n     * Deserialize comment data from an API payload.\n     *\n     * Args:\n     *     rsp (object):\n     *         The response from the server.\n     *\n     * Returns:\n     *     object:\n     *     Attribute values to set on the model.\n     */\n    parseResourceData(rsp) {\n        const result = RB.BaseComment.prototype.parseResourceData.call(\n            this, rsp);\n\n        result.fileAttachment = new RB.FileAttachment(rsp.file_attachment, {\n            parse: true\n        });\n        result.fileAttachmentID = result.fileAttachment.id;\n\n        if (rsp.diff_against_file_attachment) {\n            result.diffAgainstFileAttachment = new RB.FileAttachment(\n                rsp.diff_against_file_attachment, {\n                    parse: true\n                });\n\n            result.diffAgainstFileAttachmentID =\n                result.diffAgainstFileAttachment.id;\n        }\n\n        return result;\n    },\n\n    /**\n     * Perform validation on the attributes of the model.\n     *\n     * This will check the file attachment ID along with the default\n     * comment validation.\n     *\n     * Args:\n     *     attrs (object):\n     *         Model attributes to validate.\n     *\n     *     options (object):\n     *         Additional options for the operation.\n     *\n     * Returns:\n     *     string:\n     *     An error string, if appropriate.\n     */\n    validate(attrs, options) {\n        if (_.has(attrs, 'fileAttachmentID') && !attrs.fileAttachmentID) {\n            return RB.FileAttachmentComment.strings.INVALID_FILE_ATTACHMENT_ID;\n        }\n\n        return _super(this).validate.call(this, attrs, options);\n    }\n}, {\n    strings: {\n        INVALID_FILE_ATTACHMENT_ID: 'fileAttachmentID must be a valid ID'\n    }\n});\n"],"mappings":"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"}