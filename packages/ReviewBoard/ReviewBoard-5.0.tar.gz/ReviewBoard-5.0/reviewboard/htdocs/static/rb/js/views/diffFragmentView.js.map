{"version":3,"file":"diffFragmentView.js","names":["RB","DiffFragmentView","Backbone","View","extend","events","COLLAPSED_HEADERS_HEIGHT","_controlsHoverTimeout","initialize","options","_loadDiff","loadDiff","_collapsible","collapsible","_$table","_$thead","_$diffHeaders","_$controls","_centeredMgr","_contextExpanded","render","$el","removeClass","children","find","is","hideControls","showControls","_","defer","addClass","css","animate","$firstDiffHeader","eq","hasClass","translateY","height","each","diffHeaderEl","$diffHeader","$","scale","_expandOrCollapse","$btn","linesOfContext","data","onDone","_onExpandOrCollapseFinished","bind","_tryShowControlsDelayed","delay","_tryHideControlsDelayed","setActivityIndicator","remove","$collapseButtons","length","CenteredElementManager","elements","Map","Array","prototype","map","call","el","$chunks","closest","not","$top","$bottom","updatePosition","_onExpandButtonClicked","e","preventDefault","stopPropagation","target","_onCollapseButtonClicked"],"sources":["../../../../../static/rb/js/views/diffFragmentView.es6.js"],"sourcesContent":["/**\n * A view for managing a loaded diff fragment and its state.\n *\n * This displays a fragment of a diff, offering options for expanding and\n * collapsing content.\n */\nRB.DiffFragmentView = Backbone.View.extend({\n    events: {\n        'click .diff-expand-btn': '_onExpandButtonClicked',\n        'click .diff-collapse-btn': '_onCollapseButtonClicked',\n        'mouseenter': '_tryShowControlsDelayed',\n        'mouseleave': '_tryHideControlsDelayed',\n    },\n\n    /** The exposed headers height to show when collapsed. */\n    COLLAPSED_HEADERS_HEIGHT: 4,\n\n    /** The timeout for a mouseout event to fire after it actually occurs. */\n    _controlsHoverTimeout: 250,\n\n    /**\n     * Initialize the view.\n     *\n     * Args:\n     *     options (object, optional):\n     *         Options that control the view. This must at least provide\n     *         ``loadDiff``.\n     *\n     * Option Args:\n     *     collapsible (bool, optional):\n     *         Whether or not the controls on the view can be collapsed. If\n     *         collapsible, they will also start collapsed. This defaults to\n     *         ``false``.\n     *\n     *     loadDiff (function):\n     *         The function to call to load more of the diff. This must be\n     *         provided by the caller.\n     */\n    initialize(options={}) {\n        this._loadDiff = options.loadDiff;\n        this._collapsible = !!options.collapsible;\n\n        this._$table = null;\n        this._$thead = null;\n        this._$diffHeaders = null;\n        this._$controls = null;\n\n        this._centeredMgr = null;\n        this._contextExpanded = false;\n    },\n\n    /**\n     * Render the view.\n     *\n     * This will start the view off in a collapsed mode.\n     *\n     * Returns:\n     *     RB.DiffFragmentView:\n     *     This instance, for chaining.\n     */\n    render() {\n        /*\n         * Make sure this class isn't on the fragment, in case we're\n         * reloading content.\n         */\n        this.$el.removeClass('allow-transitions');\n\n        this._$table = this.$el.children('table');\n        this._$diffHeaders = this._$table.find('.diff-header');\n        this._$thead = this._$table.children('thead');\n        this._$controls = this._$diffHeaders.find('td > div');\n\n        if (this._collapsible && this.$el.is(':visible')) {\n            this.hideControls();\n        } else {\n            /*\n             * If we're not collapsible, then we're always expanded\n             * by default.\n             */\n            this.showControls();\n        }\n\n        if (this._collapsible) {\n            /*\n             * Once we've hidden the controls, we want to enable transitions for\n             * hovering. We don't apply this before (or make it implicit)\n             * because we don't want all the transitions to take place on page\n             * load, as it's both visually weird and messes with the height\n             * calculation for the collapsed areas.\n             */\n            _.defer(() => this.$el.addClass('allow-transitions'));\n        }\n\n        return this;\n    },\n\n    /**\n     * Show the controls on the specified comment container.\n     */\n    showControls() {\n        /* This will effectively control the opacity of the controls. */\n        this._$table\n            .removeClass('collapsed')\n            .addClass('expanded');\n\n        /*\n         * Undo all the transforms, so that these animate to their normal\n         * positions.\n         */\n        this._$thead.css('transform', '');\n        this._$diffHeaders.css('transform', '');\n    },\n\n    /**\n     * Hide the controls on the specified comment container.\n     *\n     * Args:\n     *     animate (boolean, optional):\n     *         Whether to animate hiding the controls. By default, this is\n     *         ``true``.\n     */\n    hideControls(animate) {\n        /*\n         * Never hide the controls when context has been expanded. It creates\n         * a sort of jarring initial effect.\n         */\n        if (this._contextExpanded) {\n            return;\n        }\n\n        if (animate === false) {\n            this.$el.removeClass('allow-transitions');\n        }\n\n        this._$table\n            .removeClass('expanded')\n            .addClass('collapsed');\n\n        const $firstDiffHeader = this._$diffHeaders.eq(0);\n\n        if ($firstDiffHeader.hasClass('diff-header-above')) {\n            /*\n             * If the first diff header is present, we'll need to transition\n             * the header down to be flush against the collapsed header.\n             */\n            const translateY = $firstDiffHeader.height() -\n                               this.COLLAPSED_HEADERS_HEIGHT;\n\n            this._$thead.css('transform', `translateY(${translateY}px)`);\n        }\n\n        /*\n         * The diff headers won't have the same heights exactly. We need to\n         * compute the proper scale for the correct size per-header.\n         */\n        _.each(this._$diffHeaders, diffHeaderEl => {\n            const $diffHeader = $(diffHeaderEl);\n            const scale = this.COLLAPSED_HEADERS_HEIGHT / $diffHeader.height();\n\n            $diffHeader.css('transform', `scaleY(${scale})`);\n        });\n\n        if (animate === false) {\n            _.defer(() => this.$el.addClass('allow-transitions'));\n        }\n    },\n\n    /*\n     * Common functionality around expand or collapsing the diff fragment.\n     *\n     * This will grab information from the expand/collapse button provided\n     * and load a new diff fragment representing the state described in that\n     * button. The new diff will represent either an expanded or collapsed\n     * state.\n     *\n     * Args:\n     *     $btn (jQuery):\n     *         The button element that triggered the event leading to this\n     *         function call.\n     */\n    _expandOrCollapse($btn) {\n        this._loadDiff({\n            linesOfContext: $btn.data('lines-of-context'),\n            onDone: this._onExpandOrCollapseFinished.bind(this),\n        });\n    },\n\n    /**\n     * Attempt to hide the controls in the given container after a delay.\n     */\n    _tryShowControlsDelayed() {\n        if (this._collapsible) {\n            _.delay(() => {\n                if (this.$el.is(':hover')) {\n                    this.showControls();\n                }\n            }, this._controlsHoverTimeout);\n        }\n    },\n\n    /**\n     * Attempt to hide the controls in the given container after a delay.\n     */\n    _tryHideControlsDelayed() {\n        if (this._collapsible) {\n            _.delay(() => {\n                if (!this.$el.is(':hover')) {\n                    this.hideControls();\n                }\n            }, this._controlsHoverTimeout);\n        }\n    },\n\n    /*\n     * Handler for when an expanded or collapsed fragment has loaded.\n     *\n     * This will reset the state of the view, based on the new fragment, and\n     * re-render the view.\n     */\n    _onExpandOrCollapseFinished() {\n        RB.setActivityIndicator(false, {});\n\n        /* All our HTML has changed, so clean up and re-render everything. */\n        if (this._centeredMgr !== null) {\n            this._centeredMgr.remove();\n            this._centeredMgr = null;\n        }\n\n        const $collapseButtons = this.$('.diff-collapse-btn');\n\n        /*\n         * Check if we have any collapse buttons. If so, we'll need to track\n         * them in a CenteredElementManager.\n         */\n        if ($collapseButtons.length > 0) {\n            this._centeredMgr = new RB.CenteredElementManager({\n                elements: new Map(Array.prototype.map.call(\n                    $collapseButtons,\n                    el => {\n                        const $chunks = $(el)\n                            .closest('.sidebyside')\n                            .children('tbody')\n                            .not('.diff-header');\n\n                        return [el, {\n                            $top: $chunks.eq(0),\n                            $bottom: $chunks.eq(-1),\n                        }];\n                    }))\n            });\n            this._centeredMgr.updatePosition();\n\n            this._contextExpanded = true;\n        } else {\n            this._contextExpanded = false;\n        }\n\n        this.render();\n\n        if (!this._contextExpanded) {\n            this._tryHideControlsDelayed();\n        }\n    },\n\n    /**\n     * Expand a diff fragment.\n     *\n     * When the expand button is clicked, this will trigger loading of a\n     * new diff fragment containing the context as defined by the data\n     * attributes on the button.\n     *\n     * Args:\n     *     e (Event):\n     *         The click event.\n     */\n    _onExpandButtonClicked(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this._expandOrCollapse($(e.target).closest('.diff-expand-btn'), e);\n    },\n\n    /**\n     * Collapse an expanded diff fragment.\n     *\n     * When the collapse button is clicked, this will trigger loading of a\n     * new diff fragment containing the context as defined by the data\n     * attributes on the button.\n     *\n     * Args:\n     *     e (Event):\n     *         The click event.\n     */\n    _onCollapseButtonClicked(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this._expandOrCollapse($(e.target).closest('.diff-collapse-btn'), e);\n    },\n});\n"],"mappings":"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"}