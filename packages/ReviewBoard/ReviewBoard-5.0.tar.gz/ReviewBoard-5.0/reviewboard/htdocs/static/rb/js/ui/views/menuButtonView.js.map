{"version":3,"file":"menuButtonView.js","names":["RB","MenuButtonView","Backbone","View","extend","className","events","template","_","initialize","options","_ariaMenuLabel","ariaMenuLabel","_menuItems","menuItems","_menuType","menuType","MenuView","TYPE_STANDARD_MENU","_buttonText","text","_buttonOnClick","onPrimaryButtonClick","_hasPrimaryButton","hasPrimaryButton","menu","$primaryButton","_$buttonGroup","_openDirection","remove","prototype","call","render","labelID","uniqueId","$el","addClass","attr","html","buttonText","menuLabel","$","on","bind","console","assert","length","_$dropDownButton","ariaLabelledBy","$controller","type","listenTo","_updateMenuPosition","removeClass","i","addItem","appendTo","$button","buttonY1","offset","top","buttonY2","innerHeight","pageY1","window","pageYOffset","pageY2","direction","menuHeight","outerHeight","toggleClass","css","_openMenu","open","_closeMenu","close","_onFocusOut","evt","stopPropagation","currentTarget","contains","relatedTarget","animate","_onToggleButtonKeyDown","which","ui","keyCode","DOWN","RETURN","SPACE","UP","focusLastItem","focusFirstItem","ESCAPE"],"sources":["../../../../../../static/rb/js/ui/views/menuButtonView.es6.js"],"sourcesContent":["/**\n * A button that offers a drop-down menu when clicked.\n *\n * Menu buttons have the appearance of a button with a drop-down indicator.\n * When clicked, they display a menu either below or above the button\n * (depending on their position on the screen).\n *\n * They may also be grouped into two buttons, one primary button (which works\n * as a standard, independent button) and one drop-down button (which works\n * as above, but just shows the drop-down indicator).\n *\n * Version Added:\n *     4.0\n *\n * Attributes:\n *     $primaryButton (jQuery):\n *         The primary button, if one is configured separate from the drop-down\n *         button.\n *\n *     menu (RB.MenuView):\n *         The menu associated with the button.\n */\nRB.MenuButtonView = Backbone.View.extend({\n    className: 'rb-c-menu-button',\n\n    events: {\n        'mouseenter .rb-c-menu-button__toggle': '_openMenu',\n        'focusout': '_onFocusOut',\n        'mouseleave': '_closeMenu',\n        'keydown .rb-c-menu-button__toggle': '_onToggleButtonKeyDown',\n    },\n\n    template: _.template(dedent`\n        <% if (hasPrimaryButton) { %>\n         <div class=\"rb-c-button-group\" role=\"group\">\n          <button class=\"rb-c-menu-button__primary rb-c-button\"\n                  type=\"button\"><%- buttonText %></button>\n          <button class=\"rb-c-menu-button__toggle rb-c-button\"\n                  id=\"<%- labelID %>\"\n                  type=\"button\"\n                  aria-label=\"<%- menuLabel %>\">\n           <span class=\"rb-icon rb-icon-dropdown-arrow\"></span>\n          </button>\n         </div>\n        <% } else { %>\n         <button class=\"rb-c-button rb-c-menu-button__toggle\"\n                 id=\"<%- labelID %>\"\n                 type=\"button\">\n          <%- buttonText %>\n          <span class=\"rb-icon rb-icon-dropdown-arrow\"></span>\n         </button>\n        <% } %>\n    `),\n\n    /**\n     * Initialize the menu button.\n     *\n     * Args:\n     *     options (object):\n     *         Options for the view.\n     *\n     * Option Args:\n     *     ariaMenuLabel (string, optional):\n     *         A descriptive label for the drop-down menu, for screen readers.\n     *         This is only needed if a primary button was added. Otherwise,\n     *         ``text`` is used as the label.\n     *\n     *     hasPrimaryButton (boolean, optional):\n     *         Whether there should be a primary button separate from the\n     *         drop-down button.\n     *\n     *     menuItems (Array of object, optional):\n     *         A list of menu items. Each will be passed to\n     *         :js:meth:`RB.MenuView.prototype.addItem`. If not provided,\n     *         explicit items should be added to the menu.\n     *\n     *     menuType (number, optional):\n     *         The type of menu to use. If provided, this must be one of\n     *         :js:attr:`RB.MenuView.TYPE_STANDARD_MENU` or\n     *         :js:attr:`RB.MenuView.TYPE_BUTTON_MENU`. If not provided,\n     *         this will be a standard menu.\n     *\n     *     onPrimaryButtonClick (function, optional):\n     *         The handler for click events on the primary button. If set,\n     *         this implies ``hasPrimaryButton: true``.\n     *\n     *     text (string):\n     *         The text shown on the button.\n     */\n    initialize(options={}) {\n        this._ariaMenuLabel = options.ariaMenuLabel || gettext('More options');\n        this._menuItems = options.menuItems || [];\n        this._menuType = options.menuType || RB.MenuView.TYPE_STANDARD_MENU;\n        this._buttonText = options.text;\n        this._buttonOnClick = options.onPrimaryButtonClick;\n        this._hasPrimaryButton = (!!this._buttonOnClick ||\n                                  options.hasPrimaryButton);\n\n        this.menu = null;\n        this.$primaryButton = null;\n\n        this._$buttonGroup = null;\n        this._openDirection = 'down';\n    },\n\n    /**\n     * Remove the view from the DOM.\n     */\n    remove() {\n        this.menu.remove();\n\n        Backbone.View.prototype.remove.call(this);\n    },\n\n    /**\n     * Render the view.\n     *\n     * Returns:\n     *     RB.MenuButtonView:\n     *     This object, for chaining.\n     */\n    render() {\n        const labelID = _.uniqueId('__rb-menubuttonview__label');\n        const hasPrimaryButton = this._hasPrimaryButton;\n\n        this.$el\n            .addClass(this.className)\n            .attr('role', 'group')\n            .html(this.template({\n                buttonText: this._buttonText,\n                hasPrimaryButton: hasPrimaryButton,\n                labelID: labelID,\n                menuLabel: this._ariaMenuLabel,\n            }));\n\n        if (hasPrimaryButton) {\n            this.$primaryButton = this.$('.rb-c-menu-button__primary')\n                .on('click', this._buttonOnClick.bind(this));\n            console.assert(this.$primaryButton.length === 1);\n        }\n\n        this._$dropDownButton = this.$('.rb-c-menu-button__toggle');\n        console.assert(this._$dropDownButton.length === 1);\n\n        /* Create and populate the drop-down menu. */\n        const menu = new RB.MenuView({\n            ariaLabelledBy: labelID,\n            $controller: this._$dropDownButton,\n            type: this._menuType,\n        });\n        menu.render();\n\n        this.listenTo(menu, 'opening', () => {\n            this._$dropDownButton.addClass('js-hover');\n            this._updateMenuPosition();\n        });\n\n        this.listenTo(menu, 'closing', () => {\n            this._$dropDownButton.removeClass('js-hover');\n        });\n\n        for (let i = 0; i < this._menuItems.length; i++) {\n            menu.addItem(this._menuItems[i]);\n        }\n\n        menu.$el.appendTo(this.$el);\n\n        this.menu = menu;\n\n        return this;\n    },\n\n    /**\n     * Position the drop-down menu above or below the button.\n     *\n     * This will attempt to determine whether there's enough space below\n     * the button for the menu to fully appear. If there is not, then the\n     * menu will appear above the button instead.\n     *\n     * The resulting direction will also impact the styling of the button and\n     * menu, helping to create a connected appearance.\n     */\n    _updateMenuPosition() {\n        const $button = this._$dropDownButton;\n        const buttonY1 = $button.offset().top;\n        const buttonY2 = buttonY1 + $button.innerHeight();\n        const pageY1 = window.pageYOffset;\n        const pageY2 = window.pageYOffset + window.innerHeight;\n        let direction;\n\n        if (pageY1 >= buttonY1) {\n            /*\n             * The button is at least partially off-screen, above the current\n             * viewport. Drop the menu down.\n             */\n            direction = 'down';\n        } else if (pageY2 <= buttonY2) {\n            /*\n             * The button is at least partially off-screen, below the current\n             * viewport. Drop the menu up.\n             */\n            direction = 'up';\n        } else {\n            const menuHeight = this.menu.$el.outerHeight();\n\n            /*\n             * The button is fully on-screen. See if there's enough room below\n             * the button for the menu.\n             */\n            if (pageY2 >= buttonY2 + menuHeight) {\n                /* The menu can fully fit below the button. */\n                direction = 'down';\n            } else {\n                /* The menu cannot fully fit below the button. */\n                direction = 'up';\n            }\n        }\n\n        this._openDirection = direction;\n\n        this.$el.toggleClass('-opens-up', direction === 'up');\n        this.menu.$el.css(direction === 'down' ? 'top' : 'bottom',\n                          $button.innerHeight());\n    },\n\n    /**\n     * Show the menu.\n     *\n     * Args:\n     *     options (object):\n     *         Options to pass to :js:meth:`RB.MenuView.prototype.open`.\n     */\n    _openMenu(options) {\n        this.menu.open(options);\n    },\n\n    /**\n     * Close the menu.\n     *\n     * Args:\n     *     options (object):\n     *         Options to pass to :js:meth:`RB.MenuView.prototype.close`.\n     */\n    _closeMenu(options) {\n        this.menu.close(options);\n    },\n\n    /**\n     * Handle a focus-out event.\n     *\n     * This will immediately hide the menu, if the newly-focused item is\n     * not a child of this view.\n     *\n     * Args:\n     *     evt (jQuery.Event):\n     *         The focus-in event.\n     */\n    _onFocusOut(evt) {\n        evt.stopPropagation();\n\n        /*\n         * Only close the menu if focus has moved to something outside of\n         * this component.\n         */\n        if (!evt.currentTarget.contains(evt.relatedTarget)) {\n            this._closeMenu({\n                animate: false,\n            });\n        }\n    },\n\n    /**\n     * Handle a keydown event.\n     *\n     * When the drop-down button has focus, this will take care of handling\n     * keyboard-based navigation, allowing the menu to be opened or closed.\n     * Opening the menu will transfer focus to the menu items.\n     *\n     * Args:\n     *     evt (jQuery.Event):\n     *         The keydown event.\n     *\n     * Returns:\n     *     boolean:\n     *     ``True`` if the event was handled explicitly by the menu button.\n     *     ``False`` if it should bubble up or invoke default behavior.\n     */\n    _onToggleButtonKeyDown(evt) {\n        switch (evt.which) {\n            case $.ui.keyCode.DOWN:\n            case $.ui.keyCode.RETURN:\n            case $.ui.keyCode.SPACE:\n            case $.ui.keyCode.UP:\n                this._openMenu({\n                    animate: false,\n                });\n\n                if (this._openDirection === 'up') {\n                    this.menu.focusLastItem();\n                } else if (this._openDirection === 'down') {\n                    this.menu.focusFirstItem();\n                }\n\n                return false;\n\n            case $.ui.keyCode.ESCAPE:\n                this._closeMenu({\n                    animate: false,\n                });\n                return false;\n        }\n    },\n});\n"],"mappings":"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"}