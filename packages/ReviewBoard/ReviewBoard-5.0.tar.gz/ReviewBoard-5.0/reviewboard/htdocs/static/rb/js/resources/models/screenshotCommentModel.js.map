{"version":3,"file":"screenshotCommentModel.js","names":["RB","ScreenshotComment","BaseComment","extend","defaults","_","x","y","width","height","screenshotID","screenshot","thumbnailURL","prototype","rspNamespace","expandedFields","attrToJsonMap","serializedAttrs","concat","deserializedAttrs","serializers","JSONSerializers","onlyIfUnloaded","parseResourceData","rsp","result","call","Screenshot","parse","id","validate","attrs","has","strings","INVALID_SCREENSHOT_ID","INVALID_X","INVALID_Y","INVALID_WIDTH","INVALID_HEIGHT","apply","arguments"],"sources":["../../../../../../static/rb/js/resources/models/screenshotCommentModel.es6.js"],"sourcesContent":["/**\n * A comment on a screenshot.\n *\n * Model Attributes:\n *     x (number):\n *         The X coordinate of the pixel at the top-left of the comment region.\n *\n *     y (number):\n *         The Y coordinate of the pixel at the top-left of the comment region.\n *\n *     width (number):\n *         The width of the comment region, in pixels.\n *\n *     height (number):\n *         The height of the comment region, in pixels.\n *\n *     screenshotID (number):\n *         The ID of the screenshot that this comment is on.\n *\n *     screenshot (RB.Screenshot):\n *         The screenshot that this comment is on.\n *\n *     thumbnailURL (string):\n *         The URL to an image file showing the region of the comment.\n */\nRB.ScreenshotComment = RB.BaseComment.extend({\n    defaults: _.defaults({\n        x: null,\n        y: null,\n        width: null,\n        height: null,\n        screenshotID: null,\n        screenshot: null,\n        thumbnailURL: null\n    }, RB.BaseComment.prototype.defaults()),\n\n    rspNamespace: 'screenshot_comment',\n    expandedFields: ['screenshot'],\n\n    attrToJsonMap: _.defaults({\n        width: 'w',\n        height: 'h',\n        thumbnailURL: 'thumbnail_url',\n        screenshotID: 'screenshot_id'\n    }, RB.BaseComment.prototype.attrToJsonMap),\n\n    serializedAttrs: [\n        'x',\n        'y',\n        'width',\n        'height',\n        'screenshotID'\n    ].concat(RB.BaseComment.prototype.serializedAttrs),\n\n    deserializedAttrs: [\n        'x',\n        'y',\n        'width',\n        'height',\n        'thumbnailURL'\n    ].concat(RB.BaseComment.prototype.deserializedAttrs),\n\n    serializers: _.defaults({\n        screenshotID: RB.JSONSerializers.onlyIfUnloaded\n    }, RB.BaseComment.prototype.serializers),\n\n    /**\n     * Deserialize comment data from an API payload.\n     *\n     * Args:\n     *     rsp (object):\n     *         The response from the server.\n     *\n     * Returns:\n     *     object:\n     *     Attribute values to set on the model.\n     */\n    parseResourceData(rsp) {\n        const result = RB.BaseComment.prototype.parseResourceData.call(\n            this, rsp);\n\n        result.screenshot = new RB.Screenshot(rsp.screenshot, {\n            parse: true\n        });\n        result.screenshotID = result.screenshot.id;\n\n        return result;\n    },\n\n    /*\n     * Validate the attributes of the model.\n     *\n     * This will check the screenshot ID and the region of the comment,\n     * along with the default comment validation.\n     *\n     * Args:\n     *     attrs (object):\n     *         The model attributes to validate.\n     *\n     * Returns:\n     *     string:\n     *     An error string, if appropriate.\n     */\n    validate(attrs) {\n        if (_.has(attrs, 'screenshotID') && !attrs.screenshotID) {\n            return RB.ScreenshotComment.strings.INVALID_SCREENSHOT_ID;\n        }\n\n        if (_.has(attrs, 'x') && attrs.x < 0) {\n            return RB.ScreenshotComment.strings.INVALID_X;\n        }\n\n        if (_.has(attrs, 'y') && attrs.y < 0) {\n            return RB.ScreenshotComment.strings.INVALID_Y;\n        }\n\n        if (_.has(attrs, 'width') && attrs.width <= 0) {\n            return RB.ScreenshotComment.strings.INVALID_WIDTH;\n        }\n\n        if (_.has(attrs, 'height') && attrs.height <= 0) {\n            return RB.ScreenshotComment.strings.INVALID_HEIGHT;\n        }\n\n        return RB.BaseComment.prototype.validate.apply(this, arguments);\n    }\n}, {\n    strings: {\n        INVALID_SCREENSHOT_ID: 'screenshotID must be a valid ID',\n        INVALID_X: 'x must be >= 0',\n        INVALID_Y: 'y must be >= 0',\n        INVALID_WIDTH: 'width must be > 0',\n        INVALID_HEIGHT: 'height must be > 0'\n    }\n});\n"],"mappings":"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"}