{"version":3,"file":"dataUtilsTests.js","names":["suite","it","done","str","blob","Blob","RB","DataUtils","readBlobAsArrayBuffer","result","expect","byteLength","toBe","dataView","DataView","i","getUint8","charCodeAt","readBlobAsString","str1","str2","blob1","blob2","readManyBlobsAsArrayBuffers","result1","result2","dataView1","dataView2","readManyBlobsAsStrings","describe","values","arrayBuffer","buildArrayBuffer","type","length","getInt8","getInt16","bigEndian","getUint16","getInt32","getUint32","getFloat32","getFloat64","toEqual","buildBlob"],"sources":["../../../../../../static/rb/js/utils/tests/dataUtilsTests.es6.js"],"sourcesContent":["suite('rb/utils/dataUtils', function() {\n    it('readBlobAsArrayBuffer', function(done) {\n        const str = 'abc123';\n        const blob = new Blob([str]);\n\n        RB.DataUtils.readBlobAsArrayBuffer(blob, result => {\n            expect(result.byteLength).toBe(6);\n\n            const dataView = new DataView(result);\n\n            for (let i = 0; i < result.byteLength; i++) {\n                expect(dataView.getUint8(i)).toBe(str.charCodeAt(i));\n            }\n\n            done();\n        });\n    });\n\n    it('readBlobAsString', function(done) {\n        const blob = new Blob(['This is a test.']);\n\n        RB.DataUtils.readBlobAsString(blob, result => {\n            expect(typeof result).toBe('string');\n            expect(result).toBe('This is a test.');\n\n            done();\n        });\n    });\n\n    it('readManyBlobsAsArrayBuffers', function(done) {\n        const str1 = 'abc123';\n        const str2 = 'foo';\n\n        const blob1 = new Blob([str1]);\n        const blob2 = new Blob([str2]);\n\n        RB.DataUtils.readManyBlobsAsArrayBuffers([blob1, blob2],\n                                                 (result1, result2) => {\n            expect(result1.byteLength).toBe(6);\n            expect(result2.byteLength).toBe(3);\n\n            const dataView1 = new DataView(result1);\n\n            for (let i = 0; i < result1.byteLength; i++) {\n                expect(dataView1.getUint8(i)).toBe(str1.charCodeAt(i));\n            }\n\n            const dataView2 = new DataView(result2);\n\n            for (let i = 0; i < result2.byteLength; i++) {\n                expect(dataView2.getUint8(i)).toBe(str2.charCodeAt(i));\n            }\n\n            done();\n        });\n    });\n\n    it('readManyBlobsAsStrings', function(done) {\n        const blob1 = new Blob(['This is a test.']);\n        const blob2 = new Blob(['hello world']);\n\n        RB.DataUtils.readManyBlobsAsStrings([blob1, blob2],\n                                            (result1, result2) => {\n            expect(typeof result1).toBe('string');\n            expect(typeof result2).toBe('string');\n            expect(result1).toBe('This is a test.');\n            expect(result2).toBe('hello world');\n\n            done();\n        });\n    });\n\n    describe('buildArrayBuffer', function() {\n        it('With int8', function() {\n            const values = [-1, 0, 1];\n            const arrayBuffer = RB.DataUtils.buildArrayBuffer([\n                {\n                    type: 'int8',\n                    values: values,\n                },\n            ]);\n            expect(arrayBuffer.byteLength).toBe(3);\n\n            const dataView = new DataView(arrayBuffer);\n\n            for (let i = 0; i < values.length; i++) {\n                expect(dataView.getInt8(i)).toBe(values[i]);\n            }\n        });\n\n        it('With uint8', function() {\n            const values = [1, 2, 3];\n            const arrayBuffer = RB.DataUtils.buildArrayBuffer([\n                {\n                    type: 'uint8',\n                    values: values,\n                },\n            ]);\n            expect(arrayBuffer.byteLength).toBe(3);\n\n            const dataView = new DataView(arrayBuffer);\n\n            for (let i = 0; i < values.length; i++) {\n                expect(dataView.getUint8(i)).toBe(values[i]);\n            }\n        });\n\n        describe('With int16', function() {\n            const values = [-1, 0, 1];\n\n            it('Little endian', function() {\n                const arrayBuffer = RB.DataUtils.buildArrayBuffer([\n                    {\n                        type: 'int16',\n                        values: values,\n                    },\n                ]);\n                expect(arrayBuffer.byteLength).toBe(6);\n\n                const dataView = new DataView(arrayBuffer);\n\n                for (let i = 0; i < values.length; i++) {\n                    expect(dataView.getInt16(i * 2, true)).toBe(values[i]);\n                }\n            });\n\n            it('Big endian', function() {\n                const arrayBuffer = RB.DataUtils.buildArrayBuffer([\n                    {\n                        type: 'int16',\n                        values: values,\n                        bigEndian: true,\n                    },\n                ]);\n                expect(arrayBuffer.byteLength).toBe(6);\n\n                const dataView = new DataView(arrayBuffer);\n\n                for (let i = 0; i < values.length; i++) {\n                    expect(dataView.getInt16(i * 2)).toBe(values[i]);\n                }\n            });\n        });\n\n        describe('With uint16', function() {\n            const values = [1, 2, 3];\n\n            it('Little endian', function() {\n                const arrayBuffer = RB.DataUtils.buildArrayBuffer([\n                    {\n                        type: 'uint16',\n                        values: values,\n                    },\n                ]);\n                expect(arrayBuffer.byteLength).toBe(6);\n\n                const dataView = new DataView(arrayBuffer);\n\n                for (let i = 0; i < values.length; i++) {\n                    expect(dataView.getUint16(i * 2, true)).toBe(values[i]);\n                }\n            });\n\n            it('Big endian', function() {\n                const arrayBuffer = RB.DataUtils.buildArrayBuffer([\n                    {\n                        type: 'uint16',\n                        values: values,\n                        bigEndian: true,\n                    },\n                ]);\n                expect(arrayBuffer.byteLength).toBe(6);\n\n                const dataView = new DataView(arrayBuffer);\n\n                for (let i = 0; i < values.length; i++) {\n                    expect(dataView.getUint16(i * 2)).toBe(values[i]);\n                }\n            });\n        });\n\n        describe('With int32', function() {\n            const values = [-1, 0, 1];\n\n            it('Little endian', function() {\n                const arrayBuffer = RB.DataUtils.buildArrayBuffer([\n                    {\n                        type: 'int32',\n                        values: values,\n                    },\n                ]);\n                expect(arrayBuffer.byteLength).toBe(12);\n\n                const dataView = new DataView(arrayBuffer);\n\n                for (let i = 0; i < values.length; i++) {\n                    expect(dataView.getInt32(i * 4, true)).toBe(values[i]);\n                }\n            });\n\n            it('Big endian', function() {\n                const arrayBuffer = RB.DataUtils.buildArrayBuffer([\n                    {\n                        type: 'int32',\n                        values: values,\n                        bigEndian: true,\n                    },\n                ]);\n                expect(arrayBuffer.byteLength).toBe(12);\n\n                const dataView = new DataView(arrayBuffer);\n\n                for (let i = 0; i < values.length; i++) {\n                    expect(dataView.getInt32(i * 4)).toBe(values[i]);\n                }\n            });\n        });\n\n        describe('With uint32', function() {\n            const values = [1, 2, 3];\n\n            it('Little endian', function() {\n                const arrayBuffer = RB.DataUtils.buildArrayBuffer([\n                    {\n                        type: 'uint32',\n                        values: values,\n                    },\n                ]);\n                expect(arrayBuffer.byteLength).toBe(12);\n\n                const dataView = new DataView(arrayBuffer);\n\n                for (let i = 0; i < values.length; i++) {\n                    expect(dataView.getUint32(i * 4, true)).toBe(values[i]);\n                }\n            });\n\n            it('Big endian', function() {\n                const arrayBuffer = RB.DataUtils.buildArrayBuffer([\n                    {\n                        type: 'uint32',\n                        values: values,\n                        bigEndian: true,\n                    },\n                ]);\n                expect(arrayBuffer.byteLength).toBe(12);\n\n                const dataView = new DataView(arrayBuffer);\n\n                for (let i = 0; i < values.length; i++) {\n                    expect(dataView.getUint32(i * 4)).toBe(values[i]);\n                }\n            });\n        });\n\n        describe('With float32', function() {\n            const values = [1, 2, 3];\n\n            it('Little endian', function() {\n                const arrayBuffer = RB.DataUtils.buildArrayBuffer([\n                    {\n                        type: 'float32',\n                        values: values,\n                    },\n                ]);\n                expect(arrayBuffer.byteLength).toBe(12);\n\n                const dataView = new DataView(arrayBuffer);\n\n                for (let i = 0; i < values.length; i++) {\n                    expect(dataView.getFloat32(i * 4, true)).toBe(values[i]);\n                }\n            });\n\n            it('Big endian', function() {\n                const arrayBuffer = RB.DataUtils.buildArrayBuffer([\n                    {\n                        type: 'float32',\n                        values: values,\n                        bigEndian: true,\n                    },\n                ]);\n                expect(arrayBuffer.byteLength).toBe(12);\n\n                const dataView = new DataView(arrayBuffer);\n\n                for (let i = 0; i < values.length; i++) {\n                    expect(dataView.getFloat32(i * 4)).toBe(values[i]);\n                }\n            });\n        });\n\n        describe('With float64', function() {\n            const values = [1, 2, 3];\n\n            it('Little endian', function() {\n                const arrayBuffer = RB.DataUtils.buildArrayBuffer([\n                    {\n                        type: 'float64',\n                        values: values,\n                    },\n                ]);\n                expect(arrayBuffer.byteLength).toBe(24);\n\n                const dataView = new DataView(arrayBuffer);\n\n                for (let i = 0; i < values.length; i++) {\n                    expect(dataView.getFloat64(i * 8, true)).toBe(values[i]);\n                }\n            });\n\n            it('Big endian', function() {\n                const arrayBuffer = RB.DataUtils.buildArrayBuffer([\n                    {\n                        type: 'float64',\n                        values: values,\n                        bigEndian: true,\n                    },\n                ]);\n                expect(arrayBuffer.byteLength).toBe(24);\n\n                const dataView = new DataView(arrayBuffer);\n\n                for (let i = 0; i < values.length; i++) {\n                    expect(dataView.getFloat64(i * 8)).toBe(values[i]);\n                }\n            });\n        });\n\n        it('With complex schema', function() {\n            const arrayBuffer = RB.DataUtils.buildArrayBuffer([\n                {\n                    type: 'int32',\n                    values: [10, 20],\n                    bigEndian: true,\n                },\n                {\n                    type: 'uint8',\n                    values: [100],\n                },\n                {\n                    type: 'uint16',\n                    values: [64],\n                },\n                {\n                    type: 'float64',\n                    values: [1.234],\n                },\n            ]);\n            expect(arrayBuffer.byteLength).toBe(19);\n\n            const dataView = new DataView(arrayBuffer);\n            expect(dataView.getInt32(0)).toBe(10);\n            expect(dataView.getInt32(4)).toBe(20);\n            expect(dataView.getUint8(8)).toBe(100);\n            expect(dataView.getUint16(9, true)).toBe(64);\n            expect(dataView.getFloat64(11, true)).toEqual(1.234);\n        });\n    });\n\n    it('buildBlob', function(done) {\n        const blob = RB.DataUtils.buildBlob([\n            'abc',\n            [\n                {\n                    type: 'uint8',\n                    values: [1, 2],\n                },\n                {\n                    type: 'uint32',\n                    values: [100],\n                },\n            ],\n            new Blob(['def']),\n        ]);\n\n        RB.DataUtils.readBlobAsArrayBuffer(blob, arrayBuffer => {\n            expect(arrayBuffer.byteLength).toBe(12);\n\n            const dataView = new DataView(arrayBuffer);\n            expect(dataView.getUint8(0)).toBe('a'.charCodeAt(0));\n            expect(dataView.getUint8(1)).toBe('b'.charCodeAt(0));\n            expect(dataView.getUint8(2)).toBe('c'.charCodeAt(0));\n            expect(dataView.getUint8(3)).toBe(1);\n            expect(dataView.getUint8(4)).toBe(2);\n            expect(dataView.getUint32(5, true)).toBe(100);\n            expect(dataView.getUint8(9)).toBe('d'.charCodeAt(0));\n            expect(dataView.getUint8(10)).toBe('e'.charCodeAt(0));\n            expect(dataView.getUint8(11)).toBe('f'.charCodeAt(0));\n\n            done();\n        });\n    });\n});\n"],"mappings":"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"}