{"version":3,"file":"uploadDiffModel.js","names":["RB","UploadDiffModel","Backbone","Model","extend","defaults","basedir","changeNumber","diffFile","diffValid","error","parentDiffFile","repository","reviewRequest","state","State","PROMPT_FOR_DIFF","PROMPT_FOR_BASEDIR","PROPMT_FOR_CHANGE_NUMBER","PROCESSING_DIFF","UPLOADING","PROMPT_FOR_PARENT_DIFF","ERROR","initialize","prototype","apply","arguments","on","_updateState","startOver","set","handleFiles","files","get","console","assert","diff","parentDiff","requiresBasedir","requiresChangeNumber","PROMPT_FOR_CHANGE_NUMBER","_tryValidate","_createReviewRequest","_createDiff","uploader","ValidateDiffModel","localSitePrefix","save","_onValidateSuccess","err","_onValidateError","modelOrCollection","xhr","model","rsp","$","parseJSON","responseText","newState","code","APIErrors","REPO_FILE_NOT_FOUND","revision","length","interpolate","file","DIFF_PARSE_ERROR","msg","line","linenum","reason","ReviewRequest","commitID","createDiff","url","diffs","href","window","location"],"sources":["../../../../../static/rb/js/models/uploadDiffModel.es6.js"],"sourcesContent":["/**\n * A model for uploading diffs (either to an existing review request, or\n * creating a new review request).\n */\nRB.UploadDiffModel = Backbone.Model.extend({\n    defaults: {\n        basedir: null,\n        changeNumber: null,\n        diffFile: null,\n        diffValid: false,\n        error: null,\n        parentDiffFile: null,\n        repository: null,\n        reviewRequest: null,\n        state: 0,\n    },\n\n    State: {\n        PROMPT_FOR_DIFF: 0,\n        PROMPT_FOR_BASEDIR: 1,\n        PROPMT_FOR_CHANGE_NUMBER: 2,\n        PROCESSING_DIFF: 3,\n        UPLOADING: 4,\n        PROMPT_FOR_PARENT_DIFF: 5,\n        ERROR: 6,\n    },\n\n    /**\n     * Initialize the model.\n     */\n    initialize() {\n        Backbone.Model.prototype.initialize.apply(this, arguments);\n\n        this.on('change:diffFile change:parentDiffFile change:basedir ' +\n                'change:changeNumber change:diffValid',\n                this._updateState, this);\n    },\n\n    /**\n     * Reset the various state of the pre-commit creator.\n     *\n     * This is used when the user clicks \"start over\" in the middle of the\n     * process.\n     */\n    startOver() {\n        this.set({\n            basedir: null,\n            changeNumber: null,\n            diffFile: null,\n            diffValid: false,\n            error: null,\n            parentDiffFile: null,\n            state: this.State.PROMPT_FOR_DIFF,\n        });\n    },\n\n    /**\n     * Handle a selected diff file.\n     *\n     * In the case where the current state is PROMPT_FOR_DIFF or\n     * PROMPT_FOR_PARENT_DIFF, this will take the diff file and set the\n     * relevant attribute, triggering the validation stage.\n     *\n     * Args:\n     *     files (FileList):\n     *         The selected file list from the input element.\n     */\n    handleFiles(files) {\n        switch (this.get('state')) {\n            case this.State.PROMPT_FOR_DIFF:\n                this.set('diffFile', files[0]);\n                break;\n\n            case this.State.PROMPT_FOR_PARENT_DIFF:\n                this.set('parentDiffFile', files[0]);\n                break;\n\n            default:\n                console.assert('File received in wrong state');\n                break;\n        }\n    },\n\n    /**\n     * Perform a state transition, based on the current state and attributes.\n     */\n    _updateState() {\n        const basedir = this.get('basedir');\n        const changeNumber = this.get('changeNumber');\n        const diff = this.get('diffFile');\n        const diffValid = this.get('diffValid');\n        const parentDiff = this.get('parentDiffFile');\n        const repository = this.get('repository');\n        const requiresBasedir = repository.get('requiresBasedir');\n        const requiresChangeNumber = repository.get('requiresChangeNumber');\n        const state = this.get('state');\n\n        switch (state) {\n            case this.State.PROMPT_FOR_DIFF:\n                if (diff) {\n                    if (requiresBasedir && !basedir) {\n                        this.set('state', this.State.PROMPT_FOR_BASEDIR);\n                    } else if (requiresChangeNumber && !changeNumber) {\n                        this.set('state', this.State.PROMPT_FOR_CHANGE_NUMBER);\n                    } else {\n                        this.set('state', this.State.PROCESSING_DIFF);\n                        this._tryValidate();\n                    }\n                }\n                break;\n\n            case this.State.PROMPT_FOR_PARENT_DIFF:\n                if (diff && parentDiff) {\n                    this.set('state', this.State.PROCESSING_DIFF);\n                    this._tryValidate();\n                }\n\n                break;\n\n            case this.State.PROMPT_FOR_BASEDIR:\n                console.assert(\n                    diff, 'cannot be in basedir prompt state without a diff');\n\n                if (basedir) {\n                    if (requiresChangeNumber && !changeNumber) {\n                        /*\n                         * Right now we don't have anything that requires both a\n                         * basedir and a change number, but that might change in\n                         * the future.\n                         */\n                        this.set('state', this.State.PROMPT_FOR_CHANGE_NUMBER);\n                    } else {\n                        this.set('state', this.State.PROCESSING_DIFF);\n                        this._tryValidate();\n                    }\n                }\n                break;\n\n            case this.State.PROMPT_FOR_CHANGE_NUMBER:\n                console.assert(\n                    diff, 'cannot be in changenum prompt state without a diff');\n\n                if (changeNumber) {\n                    this.set('state', this.State.PROCESSING_DIFF);\n                    this._tryValidate();\n                }\n\n                break;\n\n            case this.State.PROCESSING_DIFF:\n                if (diffValid) {\n                    this.set('state', this.State.UPLOADING);\n\n                    if (this.get('reviewRequest') === null) {\n                        this._createReviewRequest();\n                    } else {\n                        this._createDiff();\n                    }\n                }\n                break;\n\n            case this.State.UPLOADING:\n                break;\n\n            case this.State.ERROR:\n                break;\n        }\n    },\n\n    /**\n     * Do a test validation of the selected diff and provided options.\n     *\n     * This starts an asynchronous process. When this process is completed\n     * successfully, the 'diffValid' attribute will be set to true. If the\n     * validation fails, the state will be set to State.ERROR and the 'state'\n     * attribute will be set to HTML with a user-visible error.\n     */\n    async _tryValidate() {\n        this.set('diffValid', false);\n\n        const diff = this.get('diffFile');\n        console.assert(diff);\n\n        const parentDiff = this.get('parentDiffFile');\n        const repository = this.get('repository');\n        const uploader = new RB.ValidateDiffModel();\n\n        uploader.set({\n            repository: repository.get('id'),\n            localSitePrefix: repository.get('localSitePrefix'),\n            basedir: this.get('basedir'),\n            diff: diff,\n            parentDiff: parentDiff,\n        });\n\n        try {\n            await uploader.save();\n            this._onValidateSuccess();\n        } catch (err) {\n            this._onValidateError(err.modelOrCollection, err.xhr);\n        }\n    },\n\n    /**\n     * Callback for when validation succeeds.\n     */\n    _onValidateSuccess() {\n        this.set('diffValid', true);\n    },\n\n    /**\n     * Callback for when validation fails.\n     */\n    _onValidateError(model, xhr) {\n        const rsp = $.parseJSON(xhr.responseText);\n        let newState = this.State.ERROR;\n        let error;\n\n        if (rsp !== null) {\n            switch (rsp.err.code) {\n                case RB.APIErrors.REPO_FILE_NOT_FOUND:\n                    if (this.get('repository').get('scmtoolName') === 'Git' &&\n                        rsp.revision.length !== 40) {\n                        error = gettext('The uploaded diff uses short revisions, but Review Board requires full revisions.<br />Please generate a new diff using the <code>--full-index</code> parameter.');\n                    } else {\n                        error = interpolate(\n                            gettext('The file \"%(file)s\" (revision %(revision)s) was not found in the repository.'),\n                            {\n                                file: rsp.file,\n                                revision: rsp.revision,\n                            },\n                            true);\n\n                        if (this.get('parentDiffFile') === null) {\n                            // Allow the user to try providing a parent diff.\n                            newState = this.State.PROMPT_FOR_PARENT_DIFF;\n                        }\n                    }\n\n                    break;\n\n                case RB.APIErrors.DIFF_PARSE_ERROR:\n                    error = interpolate(\n                        gettext('%(error)s<br />Line %(line)s: %(reason)s'),\n                        {\n                            error: rsp.err.msg,\n                            line: rsp.linenum,\n                            reason: rsp.reason,\n                        },\n                        true);\n                    break;\n\n                default:\n                    error = rsp.err.msg;\n                    break;\n            }\n        } else {\n            error = gettext('Unknown error');\n        }\n\n        if (error) {\n            this.set({\n                state: newState,\n                error: error,\n            });\n        }\n    },\n\n    /**\n     * Actually create the review request.\n     *\n     * This should be all but guaranteed to succeed, since we've already\n     * determined that the supplied parameters ought to work through the\n     * ValidateDiffModel.\n     */\n    async _createReviewRequest() {\n        const repository = this.get('repository');\n        const reviewRequest = new RB.ReviewRequest({\n            commitID: this.get('changeNumber'),\n            localSitePrefix: repository.get('localSitePrefix'),\n            repository: repository.get('id'),\n        });\n\n        try {\n            await reviewRequest.save();\n            this.set('reviewRequest', reviewRequest);\n            this._createDiff();\n        } catch (err) {\n            this._onValidateError(err.modelOrCollection, err.xhr);\n        }\n    },\n\n    /**\n     * Create the diff.\n     *\n     * This requires that the review request object already exists.\n     */\n    async _createDiff() {\n        const reviewRequest = this.get('reviewRequest');\n        const diff = reviewRequest.createDiff();\n\n        diff.set({\n            basedir: this.get('basedir'),\n            diff: this.get('diffFile'),\n            parentDiff: this.get('parentDiffFile'),\n        });\n        diff.url = reviewRequest.get('links').diffs.href;\n\n        try {\n            await diff.save();\n            window.location = reviewRequest.get('reviewURL');\n        } catch (err) {\n            this._onValidateError(err.modelOrCollection, err.xhr);\n        }\n    },\n});\n"],"mappings":"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"}