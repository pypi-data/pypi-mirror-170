{"version":3,"file":"diffRevisionSelectorView.js","names":["RB","DiffRevisionSelectorView","RevisionSelectorView","extend","initialize","options","prototype","call","firstLabelActive","numHandles","render","labels","i","numDiffs","push","toString","_update","revision","model","get","interdiffRevision","_values","_rendered","_updateHandles","_onLabelClick","ev","$target","$","currentTarget","trigger","data"],"sources":["../../../../../../static/rb/js/diffviewer/views/diffRevisionSelectorView.es6.js"],"sourcesContent":["/**\n * A view that allows users to select a revision of the diff to view.\n */\nRB.DiffRevisionSelectorView = RB.RevisionSelectorView.extend({\n    /**\n     * Initialize the view.\n     *\n     * Args:\n     *     options (object):\n     *         Options for the view.\n     *\n     * Option Args:\n     *     numDiffs (number):\n     *         The total number of diff revisions available.\n     */\n    initialize: function(options) {\n        this.options = options;\n\n        RB.RevisionSelectorView.prototype.initialize.call(this, {\n            firstLabelActive: true,\n            numHandles: 2,\n        });\n    },\n\n    /**\n     * Render the view.\n     *\n     * Returns:\n     *     RB.DiffRevisionSelectorView:\n     *     This object, for chaining.\n     */\n    render: function() {\n        const labels = ['orig'];\n\n        for (let i = 1; i <= this.options.numDiffs; i++) {\n            labels.push(i.toString());\n        }\n\n        return RB.RevisionSelectorView.prototype.render.call(this, labels);\n    },\n\n    /**\n     * Update the displayed revision based on the model.\n     */\n    _update: function() {\n        const revision = this.model.get('revision');\n        const interdiffRevision = this.model.get('interdiffRevision');\n\n        this._values = [\n            interdiffRevision ? revision : 0,\n            interdiffRevision ? interdiffRevision : revision\n        ];\n\n        if (this._rendered) {\n            this._updateHandles();\n        }\n    },\n\n    /**\n     * Callback for when one of the labels is clicked.\n     *\n     * This will jump to the target revision.\n     *\n     * TODO: we should allow people to click and drag over a range of labels to\n     * select an interdiff.\n     *\n     * Args:\n     *     ev (Event):\n     *         The click event.\n     */\n    _onLabelClick: function(ev) {\n        const $target = $(ev.currentTarget);\n\n        this.trigger('revisionSelected', [0, $target.data('revision')]);\n    },\n});\n"],"mappings":";;AAAA;AACA;AACA;AACAA,EAAE,CAACC,wBAAH,GAA8BD,EAAE,CAACE,oBAAH,CAAwBC,MAAxB,CAA+B;EACzD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,UAAU,EAAE,UAASC,OAAT,EAAkB;IAC1B,KAAKA,OAAL,GAAeA,OAAf;IAEAL,EAAE,CAACE,oBAAH,CAAwBI,SAAxB,CAAkCF,UAAlC,CAA6CG,IAA7C,CAAkD,IAAlD,EAAwD;MACpDC,gBAAgB,EAAE,IADkC;MAEpDC,UAAU,EAAE;IAFwC,CAAxD;EAIH,CAnBwD;;EAqBzD;AACJ;AACA;AACA;AACA;AACA;AACA;EACIC,MAAM,EAAE,YAAW;IACf,MAAMC,MAAM,GAAG,CAAC,MAAD,CAAf;;IAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,KAAKP,OAAL,CAAaQ,QAAlC,EAA4CD,CAAC,EAA7C,EAAiD;MAC7CD,MAAM,CAACG,IAAP,CAAYF,CAAC,CAACG,QAAF,EAAZ;IACH;;IAED,OAAOf,EAAE,CAACE,oBAAH,CAAwBI,SAAxB,CAAkCI,MAAlC,CAAyCH,IAAzC,CAA8C,IAA9C,EAAoDI,MAApD,CAAP;EACH,CApCwD;;EAsCzD;AACJ;AACA;EACIK,OAAO,EAAE,YAAW;IAChB,MAAMC,QAAQ,GAAG,KAAKC,KAAL,CAAWC,GAAX,CAAe,UAAf,CAAjB;IACA,MAAMC,iBAAiB,GAAG,KAAKF,KAAL,CAAWC,GAAX,CAAe,mBAAf,CAA1B;IAEA,KAAKE,OAAL,GAAe,CACXD,iBAAiB,GAAGH,QAAH,GAAc,CADpB,EAEXG,iBAAiB,GAAGA,iBAAH,GAAuBH,QAF7B,CAAf;;IAKA,IAAI,KAAKK,SAAT,EAAoB;MAChB,KAAKC,cAAL;IACH;EACJ,CArDwD;;EAuDzD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,aAAa,EAAE,UAASC,EAAT,EAAa;IACxB,MAAMC,OAAO,GAAGC,CAAC,CAACF,EAAE,CAACG,aAAJ,CAAjB;IAEA,KAAKC,OAAL,CAAa,kBAAb,EAAiC,CAAC,CAAD,EAAIH,OAAO,CAACI,IAAR,CAAa,UAAb,CAAJ,CAAjC;EACH;AAvEwD,CAA/B,CAA9B"}