{"version":3,"file":"userFileAttachmentModelTests.js","names":["suite","model","beforeEach","RB","UserFileAttachment","describe","it","set","data","toJSON","expect","caption","toBe","id","attributes","isNew","path","undefined","parse","stat","user_file_attachment","absolute_url","filename","not","downloadURL"],"sources":["../../../../../../../static/rb/js/resources/models/tests/userFileAttachmentModelTests.es6.js"],"sourcesContent":["suite('rb/resources/models/UserFileAttachment', function() {\n    let model;\n\n    beforeEach(function() {\n        model = new RB.UserFileAttachment();\n    });\n\n    describe('toJSON', function() {\n        describe('caption field', function() {\n            it('With value', function() {\n                model.set('caption', 'foo');\n                const data = model.toJSON();\n                expect(data.caption).toBe('foo');\n            });\n        });\n\n        describe('file field', function() {\n            it('With no file attachment', function() {\n                model.id = 123;\n                model.attributes.id = 123;\n                expect(model.isNew()).toBe(false);\n\n                const data = model.toJSON();\n                expect(data.path).toBe(undefined);\n            });\n\n            it('With file attachment', function() {\n                model.id = 123;\n                model.attributes.id = 123;\n                expect(model.isNew()).toBe(false);\n\n                model.set('file', 'abc');\n                const data = model.toJSON();\n                expect(data.path).toBe('abc');\n            });\n        });\n    });\n\n    describe('parse', function() {\n        it('API payloads', function() {\n            const data = model.parse({\n                stat: 'ok',\n                user_file_attachment: {\n                    id: 42,\n                    caption: 'caption',\n                    absolute_url: 'downloadURL',\n                    filename: 'filename',\n                },\n            });\n\n            expect(data).not.toBe(undefined);\n            expect(data.id).toBe(42);\n            expect(data.caption).toBe('caption');\n            expect(data.downloadURL).toBe('downloadURL');\n            expect(data.filename).toBe('filename');\n        });\n    });\n});\n"],"mappings":";;AAAAA,KAAK,CAAC,wCAAD,EAA2C,YAAW;EACvD,IAAIC,KAAJ;EAEAC,UAAU,CAAC,YAAW;IAClBD,KAAK,GAAG,IAAIE,EAAE,CAACC,kBAAP,EAAR;EACH,CAFS,CAAV;EAIAC,QAAQ,CAAC,QAAD,EAAW,YAAW;IAC1BA,QAAQ,CAAC,eAAD,EAAkB,YAAW;MACjCC,EAAE,CAAC,YAAD,EAAe,YAAW;QACxBL,KAAK,CAACM,GAAN,CAAU,SAAV,EAAqB,KAArB;QACA,MAAMC,IAAI,GAAGP,KAAK,CAACQ,MAAN,EAAb;QACAC,MAAM,CAACF,IAAI,CAACG,OAAN,CAAN,CAAqBC,IAArB,CAA0B,KAA1B;MACH,CAJC,CAAF;IAKH,CANO,CAAR;IAQAP,QAAQ,CAAC,YAAD,EAAe,YAAW;MAC9BC,EAAE,CAAC,yBAAD,EAA4B,YAAW;QACrCL,KAAK,CAACY,EAAN,GAAW,GAAX;QACAZ,KAAK,CAACa,UAAN,CAAiBD,EAAjB,GAAsB,GAAtB;QACAH,MAAM,CAACT,KAAK,CAACc,KAAN,EAAD,CAAN,CAAsBH,IAAtB,CAA2B,KAA3B;QAEA,MAAMJ,IAAI,GAAGP,KAAK,CAACQ,MAAN,EAAb;QACAC,MAAM,CAACF,IAAI,CAACQ,IAAN,CAAN,CAAkBJ,IAAlB,CAAuBK,SAAvB;MACH,CAPC,CAAF;MASAX,EAAE,CAAC,sBAAD,EAAyB,YAAW;QAClCL,KAAK,CAACY,EAAN,GAAW,GAAX;QACAZ,KAAK,CAACa,UAAN,CAAiBD,EAAjB,GAAsB,GAAtB;QACAH,MAAM,CAACT,KAAK,CAACc,KAAN,EAAD,CAAN,CAAsBH,IAAtB,CAA2B,KAA3B;QAEAX,KAAK,CAACM,GAAN,CAAU,MAAV,EAAkB,KAAlB;QACA,MAAMC,IAAI,GAAGP,KAAK,CAACQ,MAAN,EAAb;QACAC,MAAM,CAACF,IAAI,CAACQ,IAAN,CAAN,CAAkBJ,IAAlB,CAAuB,KAAvB;MACH,CARC,CAAF;IASH,CAnBO,CAAR;EAoBH,CA7BO,CAAR;EA+BAP,QAAQ,CAAC,OAAD,EAAU,YAAW;IACzBC,EAAE,CAAC,cAAD,EAAiB,YAAW;MAC1B,MAAME,IAAI,GAAGP,KAAK,CAACiB,KAAN,CAAY;QACrBC,IAAI,EAAE,IADe;QAErBC,oBAAoB,EAAE;UAClBP,EAAE,EAAE,EADc;UAElBF,OAAO,EAAE,SAFS;UAGlBU,YAAY,EAAE,aAHI;UAIlBC,QAAQ,EAAE;QAJQ;MAFD,CAAZ,CAAb;MAUAZ,MAAM,CAACF,IAAD,CAAN,CAAae,GAAb,CAAiBX,IAAjB,CAAsBK,SAAtB;MACAP,MAAM,CAACF,IAAI,CAACK,EAAN,CAAN,CAAgBD,IAAhB,CAAqB,EAArB;MACAF,MAAM,CAACF,IAAI,CAACG,OAAN,CAAN,CAAqBC,IAArB,CAA0B,SAA1B;MACAF,MAAM,CAACF,IAAI,CAACgB,WAAN,CAAN,CAAyBZ,IAAzB,CAA8B,aAA9B;MACAF,MAAM,CAACF,IAAI,CAACc,QAAN,CAAN,CAAsBV,IAAtB,CAA2B,UAA3B;IACH,CAhBC,CAAF;EAiBH,CAlBO,CAAR;AAmBH,CAzDI,CAAL"}