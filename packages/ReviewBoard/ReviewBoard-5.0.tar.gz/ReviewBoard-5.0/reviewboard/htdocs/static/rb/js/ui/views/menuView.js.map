{"version":3,"file":"menuView.js","names":["RB","MenuView","Backbone","View","extend","className","events","initialize","options","type","undefined","TYPE_STANDARD_MENU","TYPE_BUTTON_MENU","console","error","id","_","uniqueId","$controller","isOpen","_ariaLabelledBy","ariaLabelledBy","_ariaLabel","ariaLabel","_activeItemIndex","_activeItemEl","render","$el","attr","tabindex","addClass","addItem","$","assert","text","onClick","on","role","_onMenuItemMouseMove","bind","appendTo","el","open","_setOpened","close","focusFirstItem","children","length","_focusItem","focusLastItem","numChildren","opened","animate","defer","removeClass","triggerEvents","trigger","index","focus","_focusPreviousItem","_focusNextItem","_onKeyDown","evt","which","ui","keyCode","ENTER","triggerHandler","ESCAPE","TAB","UP","DOWN","HOME","PAGE_UP","END","PAGE_DOWN","targetEl","currentTarget","menuItems","i"],"sources":["../../../../../../static/rb/js/ui/views/menuView.es6.js"],"sourcesContent":["/**\n * A standard implementation of drop-down menus.\n *\n * This can be used to create and populate a standard drop-down menu or a\n * button menu (where each menu item is a button). It handles animating the\n * opening and closing of the menu, applying ARIA attributes for accessibility,\n * and handling keyboard-based navigation.\n *\n * Menus are (optionally) associated with a controller element, which is the\n * button or element responsible for opening and closing the menu. Like the\n * menu itself, the appropriate ARIA attributes will be set on the element to\n * help screen readers associate it with the menu.\n *\n * Version Added:\n *     4.0\n *\n * Attributes:\n *     $controller (jQuery):\n *         The jQuery-wrapped element that controls the display of this menu.\n *\n *     isOpen (boolean):\n *         The current menu open state.\n *\n *     type (number):\n *         The configured type of menu. This will be one of\n *         :js:attr:`RB.MenuView.TYPE_BUTTON_MENU` or\n *         :js:attr:`RB.MenuView.TYPE_STANDARD_MENU`.\n */\nRB.MenuView = Backbone.View.extend({\n    className: 'rb-c-menu',\n\n    events: {\n        'keydown': '_onKeyDown',\n    },\n\n    /**\n     * Initialize the view.\n     *\n     * Args:\n     *     options (object, optional):\n     *         Options for the view.\n     *\n     * Option Args:\n     *     $controller (jQuery, optional):\n     *         The jQuery-wrapped element that's responsible for opening and\n     *         closing this menu.\n     *\n     *     ariaLabel (string, optional):\n     *         An explicit descriptive ARIA label to set on the menu, to aid\n     *         screen readers.\n     *\n     *     ariaLabelledBy (string, optional):\n     *         The ID of an element that contains an existing descriptive\n     *         ARIA label to use for the menu, to aid screen readers. If\n     *         provided, this takes precedence over ``ariaLabel``.\n     *\n     *     type (number, optional):\n     *         The type of menu. If provided, this must be one of\n     *         :js:attr:`RB.MenuView.TYPE_BUTTON_MENU` or\n     *         :js:attr:`RB.MenuView.TYPE_STANDARD_MENU`. If not provided,\n     *         this will be a standard menu.\n     */\n    initialize(options={}) {\n        if (options.type === undefined ||\n            options.type === RB.MenuView.TYPE_STANDARD_MENU) {\n            this.type = RB.MenuView.TYPE_STANDARD_MENU;\n        } else if (options.type === RB.MenuView.TYPE_BUTTON_MENU) {\n            this.type = RB.MenuView.TYPE_BUTTON_MENU;\n        } else {\n            console.error('The provided RB.MenuView type (%s) is not ' +\n                          'supported. Defaulting to a standard menu.',\n                          options.type);\n            this.type = RB.MenuView.TYPE_STANDARD_MENU;\n        }\n\n        if (!this.id) {\n            this.id = _.uniqueId('__rb-menu');\n        }\n\n        this.$controller = options.$controller;\n        this.isOpen = false;\n\n        this._ariaLabelledBy = options.ariaLabelledBy;\n        this._ariaLabel = options.ariaLabel;\n        this._activeItemIndex = null;\n        this._activeItemEl = null;\n    },\n\n    /**\n     * Render the menu.\n     *\n     * This will set up the elements for the menu and associate it with the\n     * controller.\n     *\n     * Returns:\n     *     RB.MenuView:\n     *     This menu, for chaining.\n     */\n    render() {\n        this.$el\n            .attr({\n                id: this.id,\n                tabindex: '-1',\n            });\n\n        if (this.type === RB.MenuView.TYPE_BUTTON_MENU) {\n            this.$el.addClass('rb-c-button-group -is-vertical');\n        }\n\n        /* Set ARIA attributes on these and on the controller. */\n        this.$el.attr('role', 'menu');\n\n        if (this._ariaLabelledBy) {\n            this.$el.attr('aria-labelledby', this._ariaLabelledBy);\n        } else if (this._ariaLabel) {\n            this.$el.attr('aria-label', this._ariaLabel);\n        }\n\n        if (this.$controller) {\n            this.$controller.attr({\n                'aria-controls': this.id,\n                'aria-expanded': 'false',\n                'aria-haspopup': 'true',\n            });\n        }\n\n        return this;\n    },\n\n    /**\n     * Add an item to the menu.\n     *\n     * This appends an item to the bottom of the menu. It can append an\n     * explicit element (if one was already created), or it can build a new\n     * item appropriate for the type of menu.\n     *\n     * In either case, this can assign a DOM element ID to the menu item,\n     * assign a click event handler, and will set ARIA roles.\n     *\n     * Args:\n     *     options (object, optional):\n     *         Options for the menu item.\n     *\n     * Option Args:\n     *     id (string, optional):\n     *         A DOM element ID to assign to the menu item.\n     *\n     *     onClick (function, optional):\n     *         A function to call when the menu item is clicked.\n     *\n     *     text (string, optional):\n     *         Explicit text to use for the menu item.\n     *\n     * Returns:\n     *     jQuery:\n     *     The jQuery-wrapped element for the menu item.\n     */\n    addItem(options={}) {\n        let $el;\n\n        if (this.type === RB.MenuView.TYPE_BUTTON_MENU) {\n            $el = $(\n                '<button class=\"rb-c-menu__item rb-c-button\" type=\"button\">'\n            );\n        } else if (this.type === RB.MenuView.TYPE_STANDARD_MENU) {\n            $el = $('<div class=\"rb-c-menu__item\">');\n        } else {\n            /* This shouldn't be able to be reached. */\n            console.assert(false, 'RB.MenuView type is not a supported type.');\n        }\n\n        if (options.text !== undefined) {\n            $el.text(options.text);\n        }\n\n        if (options.onClick !== undefined) {\n            $el.on('click', options.onClick);\n        }\n\n        $el\n            .attr({\n                role: 'menuitem',\n                tabindex: '-1',\n            })\n            .on('mousemove', this._onMenuItemMouseMove.bind(this))\n            .appendTo(this.el);\n\n        return $el;\n    },\n\n    /**\n     * Open the menu.\n     *\n     * This will show the menu on the screen. Before it's shown, an ``opening``\n     * event will be emitted. Once shown (and after the animation finishes),\n     * the ``opened`` event will be emitted.\n     *\n     * Args:\n     *     options (object, optional):\n     *         Options to use when opening the menu.\n     *\n     * Option Args:\n     *     animate (boolean, optional):\n     *         Whether to animate the menu. This defaults to ``true``.\n     */\n    open(options) {\n        this._setOpened(true, options);\n    },\n\n    /**\n     * Close the menu.\n     *\n     * This will hide the menu. Before it's hidden, a ``closing`` event will\n     * be emitted. Once hidden (and after the animation finishes), the\n     * ``closed`` event will be emitted.\n     *\n     * Args:\n     *     options (object, optional):\n     *         Options to use when closing the menu.\n     *\n     * Option Args:\n     *     animate (boolean, optional):\n     *         Whether to animate the menu. This defaults to ``true``.\n     */\n    close(options) {\n        this._setOpened(false, options);\n    },\n\n    /**\n     * Focus the first item in the menu.\n     *\n     * This should be used by callers when programmatically displaying the\n     * menu (such as a result of keyboard input), when showing the menu below\n     * the controller.\n     *\n     * Once focused, arrow keys can be used to navigate the menu.\n     */\n    focusFirstItem() {\n        if (this.el.children.length > 0) {\n            this._focusItem(0);\n        }\n    },\n\n    /**\n     * Focus the last item in the menu.\n     *\n     * This should be used by callers when programmatically displaying the\n     * menu (such as a result of keyboard input), when showing the menu above\n     * the controller.\n     *\n     * Once focused, arrow keys can be used to navigate the menu.\n     */\n    focusLastItem() {\n        const numChildren = this.el.children.length;\n\n        if (numChildren > 0) {\n            this._focusItem(numChildren - 1);\n        }\n    },\n\n    /**\n     * Set the menu's open/closed state.\n     *\n     * This takes care of emitting the opening/opened/closing/closed events,\n     * setting active item states, setting the classes or display states, and\n     * setting appropriate ARIA attributes on the controller.\n     *\n     * Args:\n     *     opened (boolean):\n     *         Whether the menu is set to opened.\n     *\n     *     options (object, optional):\n     *         The options to use when setting state.\n     *\n     * Option Args:\n     *     triggerEvents (boolean, optional):\n     *         Whether to trigger events from a state change. This defaults\n     *         to ``true``.\n     */\n    _setOpened(opened, options={}) {\n        if (this.isOpen === opened) {\n            return;\n        }\n\n        this._activeItemIndex = null;\n        this._activeItemEl = null;\n\n        if (options.animate === false) {\n            this.$el.addClass('js-no-animation');\n            _.defer(() => this.$el.removeClass('js-no-animation'));\n        }\n\n        this.isOpen = opened;\n\n        const triggerEvents = (options.triggerEvents !== false);\n\n        if (triggerEvents) {\n            this.trigger(opened ? 'opening' : 'closing');\n        }\n\n        if (opened) {\n            this.$el.addClass('-is-open');\n        } else {\n            this.$el.removeClass('-is-open');\n        }\n\n        if (this.$controller) {\n            this.$controller.attr('aria-expanded', opened);\n        }\n\n        if (triggerEvents) {\n            this.trigger(opened ? 'opened' : 'closed');\n        }\n    },\n\n    /**\n     * Focus an item at the specified index.\n     *\n     * Args:\n     *     index (number):\n     *         The index of the menu item to focus. This is expected to be\n     *         a valid index in the list of items.\n     */\n    _focusItem(index) {\n        this._activeItemIndex = index;\n        this._activeItemEl = this.el.children[index];\n        this._activeItemEl.focus();\n    },\n\n    /**\n     * Focus the previous item in the menu.\n     *\n     * This takes care of wrapping the focus around to the end of the menu,\n     * if focus was already on the first item.\n     */\n    _focusPreviousItem() {\n        if (this._activeItemIndex === null) {\n            this.focusFirstItem();\n        } else {\n            let index = this._activeItemIndex - 1;\n\n            if (index < 0) {\n                index = this.el.children.length - 1;\n            }\n\n            this._focusItem(index);\n        }\n    },\n\n    /**\n     * Focus the next item in the menu.\n     *\n     * This takes care of wrapping the focus around to the beginning of\n     * the menu, if focus was already on the last item.\n     */\n    _focusNextItem() {\n        if (this._activeItemIndex === null) {\n            this.focusFirstItem();\n        } else {\n            let index = this._activeItemIndex + 1;\n\n            if (index >= this.el.children.length) {\n                index = 0;\n            }\n\n            this._focusItem(index);\n        }\n    },\n\n    /**\n     * Handle a keydown event.\n     *\n     * When the menu or a menu item has focus, this will take care of\n     * handling keyboard-based navigation, allowing the menu to be closed,\n     * or the focused menu item to be changed or activated.\n     *\n     * Args:\n     *     evt (jQuery.Event):\n     *         The keydown event.\n     *\n     * Returns:\n     *     boolean:\n     *     ``True`` if the event was handled explicitly by the menu.\n     *     ``False`` if it should bubble up or invoke default behavior.\n     */\n    _onKeyDown(evt) {\n        switch (evt.which) {\n            case $.ui.keyCode.ENTER:\n                /* Activate any selected item. */\n                $(this._activeItemEl).triggerHandler('click');\n                return false;\n\n            case $.ui.keyCode.ESCAPE:\n            case $.ui.keyCode.TAB:\n                /* Close the menu and bring focus back to the controller. */\n                if (this.$controller) {\n                    this.$controller.focus();\n                }\n\n                this.close({\n                    animate: false,\n                });\n                return false;\n\n            case $.ui.keyCode.UP:\n                /* Move up an item. */\n                this._focusPreviousItem();\n                return false;\n\n            case $.ui.keyCode.DOWN:\n                /* Move down an item. */\n                this._focusNextItem();\n                return false;\n\n            case $.ui.keyCode.HOME:\n            case $.ui.keyCode.PAGE_UP:\n                /* Move to the first item. */\n                this.focusFirstItem();\n                return false;\n\n            case $.ui.keyCode.END:\n            case $.ui.keyCode.PAGE_DOWN:\n                /* Move to the last item. */\n                this.focusLastItem();\n                return false;\n        }\n    },\n\n    /**\n     * Handle mousemove events on a menu item.\n     *\n     * This will move the focus to the menu item.\n     *\n     * Args:\n     *     evt (jQuery.Event):\n     *         The mousemove event.\n     */\n    _onMenuItemMouseMove(evt) {\n        const targetEl = evt.currentTarget;\n\n        if (targetEl === this._activeItemEl) {\n            /* The mouse has moved but the item hasn't changed. */\n            return;\n        }\n\n        const menuItems = this.el.children;\n\n        for (let i = 0; i < menuItems.length; i++) {\n            if (menuItems[i] === targetEl) {\n                this._focusItem(i);\n                break;\n            }\n        }\n    },\n}, {\n    /** Standard drop-down menus. */\n    TYPE_STANDARD_MENU: 1,\n\n    /** Button-based menus. */\n    TYPE_BUTTON_MENU: 2,\n});\n"],"mappings":"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"}