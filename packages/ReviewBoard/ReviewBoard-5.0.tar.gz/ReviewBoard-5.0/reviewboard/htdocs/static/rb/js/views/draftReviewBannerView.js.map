{"version":3,"file":"draftReviewBannerView.js","names":["RB","DraftReviewBannerView","Backbone","View","extend","events","initialize","options","render","_$buttons","$","_$banner","model","listenTo","prop","errorText","alert","_publishButton","SplitButtonView","el","document","getElementById","text","ariaMenuLabel","click","_onPublishClicked","bind","id","alternatives","publishToOwnerOnly","publishAndArchive","$el","show","addClass","height","outerHeight","scrollManager","markForUpdate","removeClass","css","maxHeight","scrollYOffset","markUpdated","hide","_","delay","hideAndReload","defer","window","location","get","getHeight","remove","_super","call","_onEditReviewClicked","ReviewDialogView","create","review","reviewRequestEditor","set","publish","attrs","_onDiscardClicked","modalBox","title","buttons","val","destroy","instance"],"sources":["../../../../../static/rb/js/views/draftReviewBannerView.es6.js"],"sourcesContent":["/**\n * A banner that represents a pending draft review.\n *\n * The banner displays at the top of the page and provides buttons for\n * editing the review, publishing, and discarding.\n *\n * The banner is a singleton. There's only ever one at a time.\n */\nRB.DraftReviewBannerView = Backbone.View.extend({\n    events: {\n        'click #review-banner-edit': '_onEditReviewClicked',\n        'click #review-banner-discard': '_onDiscardClicked',\n    },\n\n    /**\n     * Initialize the view.\n     *\n     * Args:\n     *     options (object):\n     *         Options for the view.\n     *\n     * Option Args:\n     *     reviewRequestEditor (RB.ReviewRequestEditor):\n     *         The review request editor.\n     */\n    initialize(options) {\n        this.options = options;\n    },\n\n    /**\n     * Render the view.\n     *\n     * Returns:\n     *     RB.DraftReviewBannerView:\n     *     This object, for chaining.\n     */\n    render() {\n        this._$buttons = this.$('input');\n        this._$banner = this.$('.banner');\n\n        const model = this.model;\n        this.listenTo(model, 'saving destroying',\n                      () => this._$buttons.prop('disabled', true));\n        this.listenTo(model, 'saved destroyed',\n                      () => this._$buttons.prop('disabled', false));\n        this.listenTo(model, 'publishError', errorText => alert(errorText));\n\n        /*\n         * Just a note about how we're instantiating the button below, which\n         * is important for future work on this banner.\n         *\n         * When a reviewable page is served up, it always contains the HTML\n         * for this banner (possibly hidden), so that the page doesn't jump\n         * during rendering. This will contain (amongst other things) a\n         * bare-minimum implementation of the Publish button (just enough to,\n         * again, not cause a jump).\n         *\n         * When we instantiate the RB.SplitButtonView, its parent\n         * RB.MenuButtonView will will replace the Publish button's HTML with\n         * a more fully-defined version.\n         *\n         * The trouble comes from passing in an explicit element while running\n         * unit tests, which do not contain the HTML for this banner anywhere.\n         * If we attempt to fetch the button using jQuery, and pass the\n         * jQuery-wrapped element to the view below, then we'll end up with\n         * an empty jQuery element. All HTML building and lookups will fail,\n         * resulting in asserts in RB.MenuButtonView.\n         *\n         * So we have to make sure we're passing either a valid DOM element\n         * or a falsy valuy (in which case the button will just make its own\n         * DOM element).\n         */\n        this._publishButton = new RB.SplitButtonView({\n            el: document.getElementById('review-banner-publish-container'),\n            text: gettext('Publish Review'),\n            ariaMenuLabel: gettext('More publishing options'),\n            click: this._onPublishClicked.bind(this),\n            id: 'review-banner-publish',\n            alternatives: [\n                {\n                    text: gettext('... and only e-mail the owner'),\n                    click: () => this._onPublishClicked({\n                        publishToOwnerOnly: true,\n                    }),\n                    id: 'review-banner-publish-submitter-only',\n                },\n                {\n                    text: gettext('... and archive the review request'),\n                    click: () => this._onPublishClicked({\n                        publishAndArchive: true,\n                    }),\n                    id: 'review-banner-publish-and-archive',\n                },\n            ],\n\n        });\n\n        this._publishButton.render();\n\n        if (!this.$el.prop('hidden')) {\n            this.show();\n        }\n\n        this.$el.addClass('ui-ready');\n\n        return this;\n    },\n\n    /*\n     * Show the banner.\n     *\n     * The banner will appear to slide down from the top of the page.\n     */\n    show() {\n        const height = this._$banner.outerHeight();\n\n        RB.scrollManager.markForUpdate(this.$el);\n\n        this.$el\n            .prop('hidden', false)\n            .removeClass('hidden')\n            .css({\n                maxHeight: height,\n                height: height,\n            });\n        RB.scrollManager.scrollYOffset += height;\n        RB.scrollManager.markUpdated(this.$el);\n    },\n\n    /*\n     * Hide the banner.\n     *\n     * The banner will slide up to the top of the page.\n     */\n    hide() {\n        RB.scrollManager.markForUpdate(this.$el);\n\n        const height = this._$banner.outerHeight();\n\n        this.$el\n            .prop('hidden', true)\n            .addClass('hidden')\n            .css('max-height', '');\n\n        /*\n         * If we set the height immediately, the browser will appear to not\n         * animate, since it can't transition heights (only max-heights). So\n         * we delay for a short period after we know the transition will have\n         * completed.\n         */\n        _.delay(\n            () => {\n                this.$el.css('height', '');\n                RB.scrollManager.markUpdated(this.$el);\n                RB.scrollManager.scrollYOffset -= height;\n            },\n            500);\n    },\n\n    /**\n     * Hide the banner and reloads the page.\n     *\n     * XXX Remove this function when we make the pages more dynamic.\n     */\n    hideAndReload() {\n        this.hide();\n\n        /*\n         * hideAndReload might have been called from within a $.funcQueue.\n         * With Firefox, later async functions that are queued in the\n         * $.funcQueue will not run when we change window.location, which\n         * means that we might miss out on some teardown that was\n         * scheduled. We defer changing the location until the next tick\n         * of the event loop to let any teardown occur.\n         */\n        _.defer(() => {\n            window.location = this.model.get('parentObject').get('reviewURL');\n        });\n    },\n\n    /**\n     * Return the height of the banner.\n     *\n     * Returns:\n     *     number:\n     *     The height of the banner.\n     */\n    getHeight() {\n        return this._$banner.outerHeight();\n    },\n\n    /**\n     * Remove the banner from the page.\n     */\n    remove() {\n        if (this._publishButton) {\n            this._publishButton.remove();\n        }\n\n        _super(this).remove.call(this);\n    },\n\n    /**\n     * Handler for the Edit Review button.\n     *\n     * Displays the review editor dialog.\n     *\n     * Returns:\n     *     boolean:\n     *     false, always.\n     */\n    _onEditReviewClicked() {\n        RB.ReviewDialogView.create({\n            review: this.model,\n            reviewRequestEditor: this.options.reviewRequestEditor,\n        });\n\n        return false;\n    },\n\n    /**\n     * Handler for the Publish button.\n     *\n     * Publishes the review.\n     *\n     * Args:\n     *     options (object):\n     *         Options that determine special cases for submission.\n     *\n     * Option Args:\n     *     publishToOwnerOnly (boolean):\n     *         Whether or not we should only notify the submitter of the review.\n     *\n     *     publishAndArchive (boolean):\n     *         Whether or not we should archive the review after it is published.\n     *\n     * Returns:\n     *     boolean:\n     *     false, always.\n     */\n    _onPublishClicked(options={}) {\n        if (options.publishToOwnerOnly) {\n            this.model.set('publishToOwnerOnly', true);\n        }\n\n        if (options.publishAndArchive) {\n            this.model.set('publishAndArchive', true);\n        }\n\n        this.model.publish({\n            attrs: ['public', 'publishToOwnerOnly', 'publishAndArchive'],\n        });\n\n        return false;\n    },\n\n    /**\n     * Handler for the Discard button.\n     *\n     * Prompts the user to confirm that they want the review discarded.\n     * If they confirm, the review will be discarded.\n     *\n     * Returns:\n     *     boolean:\n     *     false, always.\n     */\n    _onDiscardClicked() {\n        $('<p/>')\n            .text(gettext('If you discard this review, all related comments will be permanently deleted.'))\n            .modalBox({\n                title: gettext('Are you sure you want to discard this review?'),\n                buttons: [\n                    $('<input type=\"button\">')\n                        .val(gettext('Cancel')),\n                    $('<input type=\"button\">')\n                        .val(gettext('Discard'))\n                        .click(() => this.model.destroy()),\n                ],\n            });\n\n        return false;\n    },\n}, {\n    instance: null,\n\n    /**\n     * Create the draft review banner singleton.\n     *\n     * Returns:\n     *     RB.DraftReviewBannerView:\n     *     The banner view.\n     */\n    create(options) {\n        if (!this.instance) {\n            this.instance = new RB.DraftReviewBannerView(options);\n            this.instance.render();\n        }\n\n        return this.instance;\n    },\n});\n"],"mappings":"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"}