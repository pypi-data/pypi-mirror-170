{"version":3,"file":"diffCommitModelTests.js","names":["suite","describe","it","model","RB","DiffCommit","author_name","commit_id","commit_message","id","parent_id","parse","expect","toBeTruthy","attributes","not","toBe","undefined","toEqual","authorName","commitID","commitMessage","parentID","summary","hasSummary","message","repeat","substr"],"sources":["../../../../../../../static/rb/js/diffviewer/models/tests/diffCommitModelTests.es6.js"],"sourcesContent":["suite('rb/diffviewer/models/DiffCommit', function() {\n    describe('parse', function() {\n        it('Short commit message', function() {\n            const model = new RB.DiffCommit(\n                {\n                    author_name: 'Author Name',\n                    commit_id: 'r123',\n                    commit_message: 'A commit message.\\n',\n                    id: 1,\n                    parent_id: 'r122',\n                }, {parse: true});\n\n            expect(model).toBeTruthy();\n            expect(model.attributes).not.toBe(undefined);\n            expect(model.attributes).toEqual({\n                authorName: 'Author Name',\n                commitID: 'r123',\n                commitMessage: 'A commit message.',\n                id: 1,\n                parentID: 'r122',\n                summary: 'A commit message.',\n            });\n            expect(model.hasSummary()).toBe(false);\n        });\n\n        it('Long commit message', function() {\n            const model = new RB.DiffCommit(\n                {\n                    author_name: 'Author Name',\n                    commit_id: 'r123',\n                    commit_message: dedent`\n                        This is a long commit message.\n\n                        It spans several lines.\n                        It has trailing newlines as well.\n\n\n                    `,\n                    id: 2,\n                    parent_id: 'r122',\n                }, {parse: true});\n\n            expect(model).toBeTruthy();\n            expect(model.attributes).not.toBe(undefined);\n            expect(model.attributes).toEqual({\n                authorName: 'Author Name',\n                commitID: 'r123',\n                commitMessage: (\n                    'This is a long commit message.\\n\\n' +\n                    'It spans several lines.\\n' +\n                    'It has trailing newlines as well.'\n                ),\n                id: 2,\n                parentID: 'r122',\n                summary: 'This is a long commit message.',\n            });\n            expect(model.hasSummary()).toBe(true);\n        });\n\n        it('Commit message with overlong first line', function() {\n            const message = 'abcd'.repeat(100);\n            const summary = message.substr(0, 77) + '...';\n            const model = new RB.DiffCommit(\n                {\n                    author_name: 'Author Name',\n                    commit_id: 'r234',\n                    commit_message: message,\n                    id: 3,\n                    parent_id: 'r233',\n                },\n                {parse: true});\n\n            expect(model).toBeTruthy();\n            expect(model.attributes).not.toBe(undefined);\n            expect(model.attributes).toEqual({\n                authorName: 'Author Name',\n                commitID: 'r234',\n                commitMessage: message,\n                id: 3,\n                parentID: 'r233',\n                summary: summary,\n            });\n            expect(model.hasSummary()).toBe(true);\n        });\n    });\n});\n"],"mappings":"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"}