{"version":3,"file":"reviewView.js","names":["RB","ReviewRequestPage","ReviewView","Backbone","View","extend","initialize","options","entryModel","_bannerView","_draftBannerShown","_openIssueCount","_reviewReply","_replyEditors","_replyEditorViews","_replyDraftsCount","_diffFragmentViews","_$reviewComments","_$bodyTop","_$bodyBottom","model","set","_setupNewReply","listenTo","get","forEach","view","hideControls","render","reviewRequestEditor","$","$comment","find","on","hasDraft","_showReplyDraftBanner","_hideReplyDraftBanner","_","each","el","$issueState","length","issueStatus","data","BaseComment","isStateOpen","issueBar","CommentIssueBarView","reviewID","id","canVerify","commentID","commentType","interactive","oldStatus","newStatus","oldOpen","newOpen","trigger","$el","editor","ReviewReplyEditor","anchorPrefix","contextID","contextType","review","reviewReply","ReviewReplyEditorView","push","page","PageManager","getPage","diffCommentsData","i","diffCommentData","queueLoadDiff","reviewRequest","bugTrackerURL","formatText","_onBodyTopChanged","_onBodyBottomChanged","_onBodyTopRichTextChanged","_onBodyBottomRichTextChanged","html","bodyTop","addClass","removeClass","bodyBottom","closest","setVisible","hasOpenIssues","getOpenIssueCount","getReviewReplyEditorView","undefined","getReviewReply","createReply","stopListening","ReviewReplyDraftBannerView","$floatContainer","$bannerFloatContainer","noFloatContainerClass","bannerNoFloatContainerClass","appendTo","$bannerParent","remove"],"sources":["../../../../../../static/rb/js/reviewRequestPage/views/reviewView.es6.js"],"sourcesContent":["/**\n * Handles interaction for a review on the review request page. These can be\n * contained within the main review entries, but also for status updates in\n * change description entries or the initial status updates entry.\n */\nRB.ReviewRequestPage.ReviewView = Backbone.View.extend({\n    /**\n     * Initialize the view.\n     */\n    initialize(options) {\n        this.options = options;\n        this.entryModel = options.entryModel;\n\n        this._bannerView = null;\n        this._draftBannerShown = false;\n        this._openIssueCount = 0;\n        this._reviewReply = null;\n        this._replyEditors = [];\n        this._replyEditorViews = [];\n        this._replyDraftsCount = 0;\n        this._diffFragmentViews = [];\n\n        this._$reviewComments = null;\n        this._$bodyTop = null;\n        this._$bodyBottom = null;\n\n        this.model.set('includeTextTypes', 'html,raw,markdown');\n\n        this._setupNewReply();\n\n        this.listenTo(this.entryModel, 'change:collapsed', () => {\n            if (!this.entryModel.get('collapsed')) {\n                this._diffFragmentViews.forEach(\n                    view => view.hideControls(false));\n            }\n        });\n    },\n\n    /**\n     * Render the view.\n     *\n     * Returns:\n     *     RB.ReviewRequestPage.ReviewView:\n     *     This object, for chaining.\n     */\n    render() {\n        const reviewRequestEditor = this.entryModel.get('reviewRequestEditor');\n\n        this._$reviewComments = this.$('.review-comments');\n\n        const $comment = this._$reviewComments.find(\n            '.review-comment-details .review-comment');\n        this._$bodyTop = $comment.find('.body_top');\n        this._$bodyBottom = $comment.find('.body_bottom');\n\n        this._replyDraftsCount = 0;\n\n        this.on('hasDraftChanged', hasDraft => {\n            if (hasDraft) {\n                this._showReplyDraftBanner();\n            } else {\n                this._hideReplyDraftBanner();\n            }\n        });\n\n        _.each(this._$reviewComments.find('.issue-indicator'), el => {\n            const $issueState = $('.issue-state', el);\n\n            /*\n             * Not all issue-indicator divs have an issue-state div for the\n             * issue bar.\n             */\n            if ($issueState.length > 0) {\n                const issueStatus = $issueState.data('issue-status');\n\n                if (RB.BaseComment.isStateOpen(issueStatus)) {\n                    this._openIssueCount++;\n                }\n\n                const issueBar = new RB.CommentIssueBarView({\n                    el: el,\n                    reviewID: this.model.id,\n                    canVerify: $issueState.data('can-verify'),\n                    commentID: $issueState.data('comment-id'),\n                    commentType: $issueState.data('comment-type'),\n                    interactive: $issueState.data('interactive'),\n                    issueStatus: issueStatus,\n                });\n\n                issueBar.render();\n\n                this.listenTo(issueBar, 'statusChanged',\n                              (oldStatus, newStatus) => {\n                    const oldOpen = RB.BaseComment.isStateOpen(oldStatus);\n                    const newOpen = RB.BaseComment.isStateOpen(newStatus);\n\n                    if (oldOpen !== newOpen) {\n                        if (newOpen) {\n                            this._openIssueCount++;\n                        } else {\n                            this._openIssueCount--;\n                        }\n                    }\n\n                    this.trigger('openIssuesChanged');\n                });\n            }\n        });\n\n        _.each(this.$('.comment-section'), el => {\n            const $el = $(el);\n            const editor = new RB.ReviewRequestPage.ReviewReplyEditor({\n                anchorPrefix: $el.data('reply-anchor-prefix'),\n                contextID: $el.data('context-id'),\n                contextType: $el.data('context-type'),\n                review: this.model,\n                reviewReply: this._reviewReply,\n            });\n\n            const view = new RB.ReviewRequestPage.ReviewReplyEditorView({\n                el: el,\n                model: editor,\n                reviewRequestEditor: reviewRequestEditor,\n            });\n            view.render();\n\n            this.listenTo(editor, 'change:hasDraft', (model, hasDraft) => {\n                if (hasDraft) {\n                    this._replyDraftsCount++;\n                    this.trigger('hasDraftChanged', true);\n                } else {\n                    this._replyDraftsCount--;\n\n                    if (this._replyDraftsCount === 0) {\n                        this.trigger('hasDraftChanged', false);\n                    }\n                }\n            });\n\n            this._replyEditors.push(editor);\n            this._replyEditorViews.push(view);\n\n            if (editor.get('hasDraft')) {\n                this._replyDraftsCount++;\n            }\n        });\n\n        if (this._replyDraftsCount > 0) {\n            this.trigger('hasDraftChanged', true);\n        }\n\n        /*\n         * Load any diff fragments for comments made on this review. Each\n         * will be queued up and loaded when the page is rendered.\n         */\n        this._diffFragmentViews = [];\n\n        const page = RB.PageManager.getPage();\n        const diffCommentsData = this.entryModel.get('diffCommentsData');\n\n        for (let i = 0; i < diffCommentsData.length; i++) {\n            const diffCommentData = diffCommentsData[i];\n\n            page.queueLoadDiff(diffCommentData[0], diffCommentData[1],\n                               view => this._diffFragmentViews.push(view));\n        }\n\n        /*\n         * Do this last, after ReviewReplyEditorView has already set up the\n         * inline editors.\n         */\n        const reviewRequest = this.model.get('parentObject');\n        const bugTrackerURL = reviewRequest.get('bugTrackerURL');\n        _.each(this.$('pre.reviewtext'), el => {\n            RB.formatText($(el), { bugTrackerURL: bugTrackerURL });\n        });\n\n        this.listenTo(this.model, 'change:bodyTop',\n                      this._onBodyTopChanged);\n        this.listenTo(this.model, 'change:bodyBottom',\n                      this._onBodyBottomChanged);\n        this.listenTo(this.model, 'change:bodyTopRichText',\n                      this._onBodyTopRichTextChanged);\n        this.listenTo(this.model, 'change:bodyBottomRichText',\n                      this._onBodyBottomRichTextChanged);\n\n        return this;\n    },\n\n    /**\n     * Handler for when the Body Top field of a review changes.\n     *\n     * Updates the HTML for the field to show the new content.\n     */\n    _onBodyTopChanged() {\n        this._$bodyTop.html(this.model.get('htmlTextFields').bodyTop);\n    },\n\n    /**\n     * Handler for when the Body Top's Rich Text field of a review changes.\n     *\n     * Updates the class on the field to reflect the Rich Text state.\n     */\n    _onBodyTopRichTextChanged() {\n        if (this.model.get('bodyTopRichText')) {\n            this._$bodyTop.addClass('rich-text');\n        } else {\n            this._$bodyTop.removeClass('rich-text');\n        }\n    },\n\n    /**\n     * Handler for when the Body Bottom field of a review changes.\n     *\n     * Updates the HTML for the field to show the new content. The visibility\n     * of the body section will also be dependent on whether there is any\n     * content (mimicking the logic used when rendering the page).\n     */\n    _onBodyBottomChanged() {\n        const html = this.model.get('htmlTextFields').bodyBottom;\n\n        this._$bodyBottom\n            .html(html)\n            .closest('li').setVisible(html && html.length > 0);\n    },\n\n    /**\n     * Handler for when the Body Bottom's Rich Text field of a review changes.\n     *\n     * Updates the class on the field to reflect the Rich Text state.\n     */\n    _onBodyBottomRichTextChanged() {\n        if (this.model.get('bodyBottomRichText')) {\n            this._$bodyBottom.addClass('rich-text');\n        } else {\n            this._$bodyBottom.removeClass('rich-text');\n        }\n    },\n\n    /**\n     * Return whether there are any open issues in the review.\n     *\n     * Returns:\n     *     boolean:\n     *     true if there are any open issues.\n     */\n    hasOpenIssues() {\n        return this._openIssueCount > 0;\n    },\n\n    /**\n     * Return the number of open issues in the review.\n     *\n     * Returns:\n     *     number:\n     *     The number of open issues.\n     */\n    getOpenIssueCount() {\n        return this._openIssueCount;\n    },\n\n    /**\n     * Return the ReviewReplyEditorView with the given context type and ID.\n     *\n     * Args:\n     *     contextType (string):\n     *         The type of object being replied to (such as ``body_top`` or\n     *         ``diff_comments``)\n     *\n     *     contextID (number, optional):\n     *         The ID of the comment being replied to, if appropriate.\n     *\n     * Returns:\n     *     RB.ReviewRequestPage.ReviewReplyEditorView:\n     *     The matching editor view.\n     */\n    getReviewReplyEditorView(contextType, contextID) {\n        if (contextID === undefined) {\n            contextID = null;\n        }\n\n        return _.find(this._replyEditorViews, view => {\n            const editor = view.model;\n            return editor.get('contextID') === contextID &&\n                   editor.get('contextType') === contextType;\n        });\n    },\n\n    /**\n     * Return the active reply.\n     *\n     * Returns:\n     *     RB.ReviewReply:\n     *     The active draft reply, or null if none exists.\n     */\n    getReviewReply() {\n        return this._reviewReply;\n    },\n\n    /**\n     * Set up a new ReviewReply for the editors.\n     *\n     * The new ReviewReply will be used for any new comments made on this\n     * review.\n     *\n     * A ReviewReply is set until it's either destroyed or published, at\n     * which point a new one is set.\n     *\n     * Args:\n     *     reviewReply (RB.ReviewReply, optional):\n     *         The reply object. If this is ``null``, a new ``RB.ReviewReply``\n     *         will be created. Note that this argument is only expected to be\n     *         used for unit testing.\n     */\n    _setupNewReply(reviewReply) {\n        if (!reviewReply) {\n            reviewReply = this.model.createReply();\n        }\n\n        if (this._reviewReply !== null) {\n            this.stopListening(this._reviewReply);\n\n            // Update all the existing editors to point to the new object.\n            this._replyEditors.forEach(\n                editor => editor.set('reviewReply', reviewReply));\n\n            this.trigger('hasDraftChanged', false);\n        }\n\n        this.listenTo(reviewReply, 'destroyed published',\n                      () => this._setupNewReply());\n\n        this._reviewReply = reviewReply;\n    },\n\n    /**\n     * Show the reply draft banner.\n     *\n     * This will be called in response to any new replies made on a review,\n     * or if there are pending replies that already exist on the review.\n     */\n    _showReplyDraftBanner() {\n        if (!this._draftBannerShown) {\n            this._bannerView =\n                new RB.ReviewRequestPage.ReviewReplyDraftBannerView({\n                    model: this._reviewReply,\n                    $floatContainer: this.options.$bannerFloatContainer,\n                    noFloatContainerClass:\n                        this.options.bannerNoFloatContainerClass,\n                    reviewRequestEditor: this.entryModel.get(\n                        'reviewRequestEditor'),\n                });\n\n            this._bannerView.render();\n            this._bannerView.$el.appendTo(this.options.$bannerParent);\n            this._draftBannerShown = true;\n        }\n    },\n\n    /**\n     * Hide the reply draft banner.\n     */\n    _hideReplyDraftBanner() {\n        if (this._draftBannerShown) {\n            this._bannerView.remove();\n            this._bannerView = null;\n            this._draftBannerShown = false;\n        }\n    },\n});\n"],"mappings":"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"}