{"version":3,"file":"regionCommentBlockModel.js","names":["RB","RegionCommentBlock","FileAttachmentCommentBlock","extend","defaults","_","x","y","width","height","AbstractCommentBlock","prototype","serializedFields","parse","fields","parseInt","undefined","canUpdateBounds","isEmpty","get","saveDraftCommentBounds","draftComment","ready","extraData","save","attrs","boundsUpdated"],"sources":["../../../../../static/rb/js/models/regionCommentBlockModel.es6.js"],"sourcesContent":["/**\n * Represents the comments on a region of an image or document.\n *\n * RegionCommentBlock deals with creating and representing comments\n * that exist in a specific region of some content.\n *\n * Model Attributes:\n *     x (number):\n *         The X position of the region being commented upon.\n *\n *     y (number):\n *         The Y position of the region being commented upon.\n *\n *     width (number):\n *         The width of the region being commented upon.\n *\n *     height (number):\n *         The height of the region being commented upon.\n *\n * See Also:\n *     :js:class:`RB.FileAttachmentCommentBlock`:\n *         For attributes defined on the base model.\n *\n *     :js:class:`RB.AbstractCommentBlock`:\n *         For attributes defined on all comment block models.\n */\nRB.RegionCommentBlock = RB.FileAttachmentCommentBlock.extend({\n    defaults: _.defaults({\n        x: null,\n        y: null,\n        width: null,\n        height: null,\n    }, RB.AbstractCommentBlock.prototype.defaults),\n\n    serializedFields: ['x', 'y', 'width', 'height'],\n\n    /**\n     * Parse the incoming attributes for the comment block.\n     *\n     * The fields are stored server-side as strings, so we need to convert\n     * them back to integers where appropriate.\n     *\n     * Args:\n     *     fields (object):\n     *         The serialized fields for the comment.\n     *\n     * Returns:\n     *     object:\n     *     The parsed data.\n     */\n    parse(fields) {\n        fields.x = parseInt(fields.x, 10) || undefined;\n        fields.y = parseInt(fields.y, 10) || undefined;\n        fields.width = parseInt(fields.width, 10) || undefined;\n        fields.height = parseInt(fields.height, 10) || undefined;\n\n        return fields;\n    },\n\n    /**\n     * Return whether the bounds of this region can be updated.\n     *\n     * If there are any existing published comments on this region, it\n     * cannot be updated.\n     *\n     * Returns:\n     *     boolean:\n     *     A value indicating whether new bounds can be set for this region.\n     */\n    canUpdateBounds() {\n        return _.isEmpty(this.get('serializedComments'));\n    },\n\n    /**\n     * Save the new bounds of the draft comment to the server.\n     *\n     * The new bounds will be stored in the comment's ``x``, ``y``,\n     * ``width``, and ``height`` keys in ``extra_data``.\n     */\n    async saveDraftCommentBounds() {\n        const draftComment = this.get('draftComment');\n\n        await draftComment.ready();\n\n        const extraData = draftComment.get('extraData');\n\n        extraData.x = this.get('x');\n        extraData.y = this.get('y');\n        extraData.width = this.get('width');\n        extraData.height = this.get('height');\n\n        await draftComment.save({\n            attrs: [\n                'extra_data.x',\n                'extra_data.y',\n                'extra_data.width',\n                'extra_data.height',\n            ],\n            boundsUpdated: true,\n        });\n    },\n});\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,EAAE,CAACC,kBAAH,GAAwBD,EAAE,CAACE,0BAAH,CAA8BC,MAA9B,CAAqC;EACzDC,QAAQ,EAAEC,CAAC,CAACD,QAAF,CAAW;IACjBE,CAAC,EAAE,IADc;IAEjBC,CAAC,EAAE,IAFc;IAGjBC,KAAK,EAAE,IAHU;IAIjBC,MAAM,EAAE;EAJS,CAAX,EAKPT,EAAE,CAACU,oBAAH,CAAwBC,SAAxB,CAAkCP,QAL3B,CAD+C;EAQzDQ,gBAAgB,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,OAAX,EAAoB,QAApB,CARuC;;EAUzD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,KAAK,CAACC,MAAD,EAAS;IACVA,MAAM,CAACR,CAAP,GAAWS,QAAQ,CAACD,MAAM,CAACR,CAAR,EAAW,EAAX,CAAR,IAA0BU,SAArC;IACAF,MAAM,CAACP,CAAP,GAAWQ,QAAQ,CAACD,MAAM,CAACP,CAAR,EAAW,EAAX,CAAR,IAA0BS,SAArC;IACAF,MAAM,CAACN,KAAP,GAAeO,QAAQ,CAACD,MAAM,CAACN,KAAR,EAAe,EAAf,CAAR,IAA8BQ,SAA7C;IACAF,MAAM,CAACL,MAAP,GAAgBM,QAAQ,CAACD,MAAM,CAACL,MAAR,EAAgB,EAAhB,CAAR,IAA+BO,SAA/C;IAEA,OAAOF,MAAP;EACH,CA/BwD;;EAiCzD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIG,eAAe,GAAG;IACd,OAAOZ,CAAC,CAACa,OAAF,CAAU,KAAKC,GAAL,CAAS,oBAAT,CAAV,CAAP;EACH,CA7CwD;;EA+CzD;AACJ;AACA;AACA;AACA;AACA;EACI,MAAMC,sBAAN,GAA+B;IAC3B,MAAMC,YAAY,GAAG,KAAKF,GAAL,CAAS,cAAT,CAArB;IAEA,MAAME,YAAY,CAACC,KAAb,EAAN;IAEA,MAAMC,SAAS,GAAGF,YAAY,CAACF,GAAb,CAAiB,WAAjB,CAAlB;IAEAI,SAAS,CAACjB,CAAV,GAAc,KAAKa,GAAL,CAAS,GAAT,CAAd;IACAI,SAAS,CAAChB,CAAV,GAAc,KAAKY,GAAL,CAAS,GAAT,CAAd;IACAI,SAAS,CAACf,KAAV,GAAkB,KAAKW,GAAL,CAAS,OAAT,CAAlB;IACAI,SAAS,CAACd,MAAV,GAAmB,KAAKU,GAAL,CAAS,QAAT,CAAnB;IAEA,MAAME,YAAY,CAACG,IAAb,CAAkB;MACpBC,KAAK,EAAE,CACH,cADG,EAEH,cAFG,EAGH,kBAHG,EAIH,mBAJG,CADa;MAOpBC,aAAa,EAAE;IAPK,CAAlB,CAAN;EASH;;AA1EwD,CAArC,CAAxB"}