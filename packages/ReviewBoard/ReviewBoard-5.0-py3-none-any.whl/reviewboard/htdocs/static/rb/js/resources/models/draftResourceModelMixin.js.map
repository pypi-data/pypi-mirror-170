{"version":3,"file":"draftResourceModelMixin.js","names":["RB","DraftResourceModelMixin","ready","options","context","undefined","_","isFunction","success","error","complete","console","warn","promiseToCallbacks","newOptions","get","isNew","_needDraft","_super","call","_retrieveDraft","destroy","url","parentObject","linkName","result","links","href","$","now","UserSession","instance","Promise","reject","BackboneError","errorText","data","extraQueryArgs","isEmpty","extend","resolve","Backbone","Model","prototype","fetch","processData","model","xhr","status"],"sources":["../../../../../../static/rb/js/resources/models/draftResourceModelMixin.es6.js"],"sourcesContent":["/**\n * Mixin for resources that have special \"draft\" URLs.\n *\n * Some resources contain a \"draft/\" singleton URL that will either redirect to\n * the URL for an existing draft, or indicate there's no draft (and requiring\n * that one be created).\n *\n * These resources need a little more logic to look up the draft state and\n * craft the proper URL. They can use this mixin to do that work for them.\n */\nRB.DraftResourceModelMixin = {\n    /**\n     * Call a function when the object is ready to use.\n     *\n     * If the object is unloaded, we'll likely need to grab the draft\n     * resource, particularly if we haven't already retrieved a draft.\n     *\n     * Otherwise, we delegate to the parent's ready().\n     *\n     * Version Changed:\n     *     5.0:\n     *     Deprecated callbacks and changed to return a promise.\n     *\n     * Args:\n     *     options (object, optional):\n     *         Options for the operation, including callbacks.\n     *\n     *     context (object, optional):\n     *         Context to bind when calling callbacks.\n     *\n     * Returns:\n     *     Promise:\n     *     A promise which resolves when the operation is complete.\n     */\n    async ready(options={}, context=undefined) {\n        if (_.isFunction(options.success) ||\n            _.isFunction(options.error) ||\n            _.isFunction(options.complete) ||\n            _.isFunction(options.ready)) {\n            console.warn('RB.DraftResourceModelMixin.ready was ' +\n                         'called using callbacks. Callers should be updated ' +\n                         'to use promises instead.');\n            return RB.promiseToCallbacks(\n                options, context, newOptions => this.ready(newOptions));\n        }\n\n        if (!this.get('loaded') && this.isNew() &&\n            this._needDraft === undefined) {\n            this._needDraft = true;\n        }\n\n        await _super(this).ready.call(this);\n\n        if (this._needDraft) {\n            /*\n             * Start by delegating to the parent ready() function. Because the\n             * object is \"new\", this will make sure that the parentObject is\n             * ready.\n             */\n            await this._retrieveDraft(options);\n        }\n    },\n\n    /**\n     * Destroy the object.\n     *\n     * If destruction is successful, we'll reset the needDraft state so we'll\n     * look up the draft the next time an operation is performed.\n     *\n     * Version Changed:\n     *     5.0:\n     *     Deprecated callbacks and changed to return a promise.\n     *\n     * Args:\n     *     options (object, optional):\n     *         Options for the operation, including callbacks.\n     *\n     *     context (object, optional):\n     *         Context to bind when calling callbacks.\n     *\n     * Returns:\n     *     Promise:\n     *     A promise which resolves when the operation is complete.\n     */\n    async destroy(options={}, context=undefined) {\n        if (_.isFunction(options.success) ||\n            _.isFunction(options.error) ||\n            _.isFunction(options.complete)) {\n            console.warn('RB.DraftResourceModelMixin.destroy was ' +\n                         'called using callbacks. Callers should be updated ' +\n                         'to use promises instead.');\n            return RB.promiseToCallbacks(\n                options, context, newOptions => this.destroy(newOptions));\n        }\n\n        await this.ready();\n        await _super(this).destroy.call(this, options);\n\n        /* We need to fetch the draft resource again. */\n        this._needDraft = true;\n    },\n\n    /**\n     * Return the URL to use when syncing the model.\n     *\n     * Custom URL implementation which will return the special draft resource\n     * if we have yet to redirect and otherwise delegate to the prototype\n     * implementation.\n     *\n     * Returns:\n     *     string:\n     *     The URL to use for the resource.\n     */\n    url() {\n        if (this._needDraft) {\n            const parentObject = this.get('parentObject');\n            const linkName = _.result(this, 'listKey');\n            const links = parentObject.get('links');\n\n            /*\n             * Chrome hyper-aggressively caches things it shouldn't, and\n             * appears to do so in a subtly broken way.\n             *\n             * If we do a DELETE on a reply's URL, then later a GET (resulting\n             * from a redirect from a GET to draft/), Chrome will somehow get\n             * confused and associate the GET's caching information with a 404.\n             *\n             * In order to prevent this, we need to make requests to draft/\n             * appear unique. We can do this by appending the timestamp here.\n             * Chrome will no longer end up with broken state for our later\n             * GETs.\n             *\n             * Much of this is only required in the case of sqlite, which,\n             * with Django, may reuse row IDs, causing problems when making\n             * a reply, deleting, and making a new one. In production, this\n             * shouldn't be a problem, but it's very confusing during\n             * development.\n             */\n            return links[linkName].href + 'draft/?' + $.now();\n        } else {\n            return _super(this).url.call(this);\n        }\n    },\n\n    /**\n     * Try to retrieve an existing draft from the server.\n     *\n     * This uses the special draft/ resource within the resource list, which\n     * will redirect to an existing draft if one exists.\n     *\n     * Args:\n     *     options (object):\n     *         Options for the operation, including callbacks.\n     */\n    _retrieveDraft(options) {\n        if (!RB.UserSession.instance.get('authenticated')) {\n            return Promise.reject(new BackboneError(\n                this,\n                { errorText: gettext('You must be logged in to retrieve the draft.') },\n                {}));\n        }\n\n        let data = options.data || {};\n        const extraQueryArgs = _.result(this, 'extraQueryArgs', {});\n\n        if (!_.isEmpty(extraQueryArgs)) {\n            data = _.extend({}, extraQueryArgs, data);\n        }\n\n        return new Promise((resolve, reject) => {\n            Backbone.Model.prototype.fetch.call(this, {\n                data: data,\n                processData: true,\n                success: () => {\n                    /*\n                     * There was an existing draft, and we were redirected to it\n                     * and pulled data from it. We're done.\n                     */\n                    this._needDraft = false;\n\n                    resolve();\n                },\n                error: (model, xhr, options) => {\n                    if (xhr.status === 404) {\n                        /*\n                         * We now know we don't have an existing draft to work with,\n                         * and will eventually need to POST to create a new one.\n                         */\n                        this._needDraft = false;\n                        resolve();\n                    } else {\n                        reject(new BackboneError(model, xhr, options));\n                    }\n                }\n            });\n        });\n    },\n};\n"],"mappings":"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"}