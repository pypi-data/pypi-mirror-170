{"version":3,"file":"diffCommentsHintView.js","names":["RB","DiffCommentsHintView","Backbone","View","extend","events","template","_","initialize","listenTo","model","render","revisionText","interdiffText","get","$el","html","unpublishedCommentsHeader","unpublishedCommentsText","$ul","$","forEach","diffset","$li","addClass","data","revision","text","interpolate","appendTo","isCurrent","interdiff","oldRevision","newRevision","empty","_onRevisionSelected","ev","$target","currentTarget","hasClass","trigger","_onInterdiffSelected"],"sources":["../../../../../../static/rb/js/diffviewer/views/diffCommentsHintView.es6.js"],"sourcesContent":["/**\n * A view which gives the user hints about comments in other revisions.\n */\nRB.DiffCommentsHintView = Backbone.View.extend({\n    events: {\n        'click .revision': '_onRevisionSelected',\n        'click .interdiff': '_onInterdiffSelected',\n    },\n\n    template: _.template(dedent`\n        <div class=\"box-container\">\n         <div class=\"box important\">\n          <div class=\"box-inner comments-hint\">\n           <h1><%- unpublishedCommentsHeader %></h1>\n           <p><%- unpublishedCommentsText %></p>\n           <ul>\n           </ul>\n          </div>\n         </div>\n        </div>\n    `),\n\n    /**\n     * Initialize the view.\n     */\n    initialize() {\n        this.listenTo(this.model, 'change', this.render);\n    },\n\n    /**\n     * Render the view.\n     *\n     * Returns:\n     *     RB.DiffCommentsHintView:\n     *     This object, for chaining.\n     */\n    render() {\n        const revisionText = gettext('Revision %s');\n        const interdiffText = gettext('Interdiff revision %(oldRevision)s - %(newRevision)s');\n\n        if (this.model.get('hasOtherComments')) {\n            this.$el.html(this.template({\n                unpublishedCommentsHeader: gettext('You have unpublished comments on other revisions'),\n                unpublishedCommentsText: gettext('Your review consists of comments on the following revisions:')\n            }));\n\n            const $ul = this.$('ul');\n\n            this.model.get('diffsetsWithComments').forEach(diffset => {\n                const $li = $('<li/>')\n                    .addClass('revision')\n                    .data('revision', diffset.revision)\n                    .text(interpolate(revisionText, [diffset.revision]))\n                    .appendTo($ul);\n\n                if (diffset.isCurrent) {\n                    $li.addClass('current');\n                }\n            });\n\n            this.model.get('interdiffsWithComments').forEach(interdiff => {\n                const $li = $('<li/>')\n                    .addClass('interdiff')\n                    .data({\n                        'first-revision': interdiff.oldRevision,\n                        'second-revision': interdiff.newRevision\n                    })\n                    .text(interpolate(\n                        interdiffText,\n                        {\n                            oldRevision: interdiff.oldRevision,\n                            newRevision: interdiff.newRevision\n                        },\n                        true))\n                    .appendTo($ul);\n\n                if (interdiff.isCurrent) {\n                    $li.addClass('current');\n                }\n            });\n        } else {\n            this.$el.empty();\n        }\n\n        return this;\n    },\n\n    /**\n     * Callback for when a single revision is selected.\n     *\n     * Args:\n     *     ev (Event):\n     *         The click event.\n     */\n    _onRevisionSelected(ev) {\n        const $target = $(ev.currentTarget);\n\n        if (!$target.hasClass('current')) {\n            this.trigger('revisionSelected', [0, $target.data('revision')]);\n        }\n    },\n\n    /**\n     * Callback for when an interdiff is selected.\n     *\n     * Args:\n     *     ev (Event):\n     *         The click event.\n     */\n    _onInterdiffSelected(ev) {\n        const $target = $(ev.currentTarget);\n\n        if (!$target.hasClass('current')) {\n            this.trigger('revisionSelected',\n                         [$target.data('first-revision'),\n                          $target.data('second-revision')]);\n        }\n    }\n});\n"],"mappings":"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"}