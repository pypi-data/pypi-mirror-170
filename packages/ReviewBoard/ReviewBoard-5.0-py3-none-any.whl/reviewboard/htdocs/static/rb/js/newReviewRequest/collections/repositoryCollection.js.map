{"version":3,"file":"repositoryCollection.js","names":["RB","RepositoryCollection","BaseCollection","extend","model","Repository","initialize","models","options","collection","ResourceCollection","repositories","extraQueryData","_fetchURL","SITE_ROOT","localSitePrefix","_fileAttachmentRepo","name","scmtoolName","supportsPostCommit","filesOnly","listenTo","add","remove","_rebuild","reset","concat","search","query","q","fetch","success"],"sources":["../../../../../../static/rb/js/newReviewRequest/collections/repositoryCollection.es6.js"],"sourcesContent":["/**\n * A collection for displaying repositories in the \"New Review Request\" page.\n *\n * Version Added:\n *     4.0.7\n */\nRB.RepositoryCollection = RB.BaseCollection.extend({\n    model: RB.Repository,\n\n    /**\n     * Initialize the collection.\n     *\n     * Args:\n     *     models (Array of object):\n     *         Initial models for the collection.\n     *\n     *     options (object):\n     *         Options for the collection.\n     */\n    initialize(models, options) {\n        this.collection = new RB.ResourceCollection(options.repositories, {\n            extraQueryData: {},\n            model: this.model,\n        });\n        this.collection._fetchURL = SITE_ROOT + options.localSitePrefix +\n                                    'api/repositories/';\n\n        this._fileAttachmentRepo = new RB.Repository({\n            name: gettext('(None - File attachments only)'),\n            scmtoolName: '',\n            localSitePrefix: options.localSitePrefix,\n            supportsPostCommit: false,\n            filesOnly: true,\n        });\n\n        this.listenTo(this.collection, 'add', this.add);\n        this.listenTo(this.collection, 'remove', this.remove);\n        this.listenTo(this.collection, 'reset', this._rebuild);\n\n        this._rebuild();\n    },\n\n    /**\n     * Rebuild the list of models.\n     */\n    _rebuild() {\n        this.reset([this._fileAttachmentRepo].concat(this.collection.models));\n    },\n\n    /**\n     * Perform a search.\n     *\n     * Args:\n     *     query (string):\n     *         The query to search for in repository names and paths.\n     */\n    search(query) {\n        this.collection.extraQueryData.q = query;\n        this.collection.fetch({\n            success: () => this._rebuild(),\n        });\n    },\n});\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACAA,EAAE,CAACC,oBAAH,GAA0BD,EAAE,CAACE,cAAH,CAAkBC,MAAlB,CAAyB;EAC/CC,KAAK,EAAEJ,EAAE,CAACK,UADqC;;EAG/C;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,UAAU,CAACC,MAAD,EAASC,OAAT,EAAkB;IACxB,KAAKC,UAAL,GAAkB,IAAIT,EAAE,CAACU,kBAAP,CAA0BF,OAAO,CAACG,YAAlC,EAAgD;MAC9DC,cAAc,EAAE,EAD8C;MAE9DR,KAAK,EAAE,KAAKA;IAFkD,CAAhD,CAAlB;IAIA,KAAKK,UAAL,CAAgBI,SAAhB,GAA4BC,SAAS,GAAGN,OAAO,CAACO,eAApB,GACA,mBAD5B;IAGA,KAAKC,mBAAL,GAA2B,IAAIhB,EAAE,CAACK,UAAP,CAAkB;MACzCY,IAAI,2CADqC;MAEzCC,WAAW,EAAE,EAF4B;MAGzCH,eAAe,EAAEP,OAAO,CAACO,eAHgB;MAIzCI,kBAAkB,EAAE,KAJqB;MAKzCC,SAAS,EAAE;IAL8B,CAAlB,CAA3B;IAQA,KAAKC,QAAL,CAAc,KAAKZ,UAAnB,EAA+B,KAA/B,EAAsC,KAAKa,GAA3C;IACA,KAAKD,QAAL,CAAc,KAAKZ,UAAnB,EAA+B,QAA/B,EAAyC,KAAKc,MAA9C;IACA,KAAKF,QAAL,CAAc,KAAKZ,UAAnB,EAA+B,OAA/B,EAAwC,KAAKe,QAA7C;;IAEA,KAAKA,QAAL;EACH,CAlC8C;;EAoC/C;AACJ;AACA;EACIA,QAAQ,GAAG;IACP,KAAKC,KAAL,CAAW,CAAC,KAAKT,mBAAN,EAA2BU,MAA3B,CAAkC,KAAKjB,UAAL,CAAgBF,MAAlD,CAAX;EACH,CAzC8C;;EA2C/C;AACJ;AACA;AACA;AACA;AACA;AACA;EACIoB,MAAM,CAACC,KAAD,EAAQ;IACV,KAAKnB,UAAL,CAAgBG,cAAhB,CAA+BiB,CAA/B,GAAmCD,KAAnC;IACA,KAAKnB,UAAL,CAAgBqB,KAAhB,CAAsB;MAClBC,OAAO,EAAE,MAAM,KAAKP,QAAL;IADG,CAAtB;EAGH;;AAvD8C,CAAzB,CAA1B"}