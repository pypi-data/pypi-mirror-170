{"version":3,"file":"diffFileIndexView.js","names":["RB","DiffFileIndexView","Backbone","View","extend","chunkTemplate","_","template","_itemTemplate","events","initialize","options","_$items","_$itemsTable","collection","listenTo","update","render","$el","empty","$","appendTo","each","file","append","defaults","binaryFileText","deletedFileText","wasText","interpolate","get","attributes","addDiff","index","diffReviewableView","$item","removeClass","hasClass","_renderDiffError","_renderDiffEntry","find","html","attr","$table","fileDeleted","fileAdded","linesEqual","data","numDeletes","numInserts","numReplaces","tooltip","tooltipParts","chunksList","children","i","chunk","numRows","rows","length","$chunk","push","chunkID","id","substr","className","join","iconView","DiffComplexityIconView","totalLines","$fileIcon","toggleClass","_onAnchorClicked","e","preventDefault","stopPropagation","trigger","target","href","split"],"sources":["../../../../../../static/rb/js/diffviewer/views/diffFileIndexView.es6.js"],"sourcesContent":["/**\n * Displays the file index for the diffs on a page.\n *\n * The file page lists the names of the files, as well as a little graph\n * icon showing the relative size and complexity of a file, a list of chunks\n * (and their types), and the number of lines added and removed.\n */\nRB.DiffFileIndexView = Backbone.View.extend({\n    chunkTemplate: _.template(\n        '<a href=\"#<%= chunkID %>\" class=\"<%= className %>\"> </a>'\n    ),\n\n    _itemTemplate: _.template(dedent`\n        <tr class=\"loading\n         <% if (newfile) { %>new-file<% } %>\n         <% if (binary) { %>binary-file<% } %>\n         <% if (deleted) { %>deleted-file<% } %>\n         <% if (destFilename !== depotFilename) { %>renamed-file<% } %>\n         \">\n         <td class=\"diff-file-icon\">\n          <span class=\"fa fa-spinner fa-pulse\"></span>\n         </td>\n         <td class=\"diff-file-info\">\n          <a href=\"#<%- index %>\"><%- destFilename %></a>\n          <% if (destFilename !== depotFilename) { %>\n          <span class=\"diff-file-rename\"><%- wasText %></span>\n          <% } %>\n         </td>\n         <td class=\"diff-chunks-cell\">\n          <% if (binary) { %>\n           <%- binaryFileText %>\n          <% } else if (deleted) { %>\n           <%- deletedFileText %>\n          <% } else { %>\n           <div class=\"diff-chunks\"></div>\n          <% } %>\n         </td>\n        </tr>\n    `),\n\n    events: {\n        'click a': '_onAnchorClicked',\n    },\n\n    /**\n     * Initialize the view.\n     *\n     * Args:\n     *     options (object):\n     *         Options for the view.\n     *\n     * Option Args:\n     *     collection (RB.DiffFileCollection):\n     *         The collection containing the files.\n     */\n    initialize(options) {\n        this.options = options;\n        this._$items = null;\n        this._$itemsTable = null;\n\n        this.collection = this.options.collection;\n        this.listenTo(this.collection, 'reset update', this.update);\n    },\n\n    /**\n     * Render the view to the page.\n     *\n     * Returns:\n     *     RB.DiffFileIndexView:\n     *     This object, for chaining.\n     */\n    render() {\n        this.$el.empty();\n\n        this._$itemsTable = $('<table/>').appendTo(this.$el);\n        this._$items = this.$('tr');\n\n        // Add the files from the collection\n        this.update();\n\n        return this;\n    },\n\n    /**\n     * Update the list of files in the index view.\n     */\n    update() {\n        this._$itemsTable.empty();\n\n        this.collection.each(file => {\n            this._$itemsTable.append(this._itemTemplate(\n                _.defaults({\n                    binaryFileText: gettext('Binary file'),\n                    deletedFileText: gettext('Deleted'),\n                    wasText: interpolate(gettext('Was %s'),\n                                         [file.get('depotFilename')]),\n                }, file.attributes)\n            ));\n        });\n\n        this._$items = this.$('tr');\n    },\n\n    /**\n     * Add a loaded diff to the index.\n     *\n     * The reserved entry for the diff will be populated with a link to the\n     * diff, and information about the diff.\n     *\n     * Args:\n     *     index (number):\n     *         The array index at which to add the new diff.\n     *\n     *     diffReviewableView (RB.DiffReviewableView):\n     *         The view corresponding to the diff file being added.\n     */\n    addDiff(index, diffReviewableView) {\n        const $item = $(this._$items[index])\n            .removeClass('loading');\n\n        if (diffReviewableView.$el.hasClass('diff-error')) {\n            this._renderDiffError($item);\n        } else {\n            this._renderDiffEntry($item, diffReviewableView);\n        }\n    },\n\n    /**\n     * Render a diff loading error.\n     *\n     * An error icon will be displayed in place of the typical complexity\n     * icon.\n     *\n     * Args:\n     *     $item (jQuery):\n     *         The item in the file index which encountered the error.\n     */\n    _renderDiffError($item) {\n        $item.find('.diff-file-icon')\n            .html('<div class=\"rb-icon rb-icon-warning\" />')\n            .attr('title',\n                  gettext('There was an error loading this diff. See the details below.'));\n    },\n\n    /**\n     * Render the display of a loaded diff.\n     *\n     * Args:\n     *     $item (jQuery):\n     *         The item in the file index which was loaded.\n     *\n     *     diffReviewableView (RB.DiffReviewableView):\n     *         The view corresponding to the diff file which was loaded.\n     */\n    _renderDiffEntry($item, diffReviewableView) {\n        const $table = diffReviewableView.$el;\n        const fileDeleted = $item.hasClass('deleted-file');\n        const fileAdded = $item.hasClass('new-file');\n        const linesEqual = $table.data('lines-equal');\n        let numDeletes = 0;\n        let numInserts = 0;\n        let numReplaces = 0;\n        let tooltip = '';\n        const tooltipParts = [];\n        const chunksList = [];\n\n        if (fileAdded) {\n            numInserts = 1;\n        } else if (fileDeleted) {\n            numDeletes = 1;\n        } else if ($item.hasClass('binary-file')) {\n            numReplaces = 1;\n        } else {\n            $table.children('tbody').each((i, chunk) => {\n                const numRows = chunk.rows.length;\n                const $chunk = $(chunk);\n\n                if ($chunk.hasClass('delete')) {\n                    numDeletes += numRows;\n                } else if ($chunk.hasClass('insert')) {\n                    numInserts += numRows;\n                } else if ($chunk.hasClass('replace')) {\n                    numReplaces += numRows;\n                } else {\n                    return;\n                }\n\n                chunksList.push(this.chunkTemplate({\n                    chunkID: chunk.id.substr(5),\n                    className: chunk.className,\n                }));\n            });\n\n            /* Add clickable blocks for each diff chunk. */\n            $item.find('.diff-chunks').html(chunksList.join(''));\n        }\n\n        /* Render the complexity icon. */\n        const iconView = new RB.DiffComplexityIconView({\n            numInserts: numInserts,\n            numDeletes: numDeletes,\n            numReplaces: numReplaces,\n            totalLines: linesEqual + numDeletes + numInserts + numReplaces,\n        });\n\n        const $fileIcon = $item.find('.diff-file-icon');\n        $fileIcon\n            .empty()\n            .append(iconView.$el);\n\n        iconView.render();\n\n        /* Add tooltip for icon */\n        if (fileAdded) {\n            tooltip = gettext('New file');\n        } else if (fileDeleted) {\n            tooltip = gettext('Deleted file');\n        } else {\n            if (numInserts > 0) {\n                tooltipParts.push(interpolate(\n                    ngettext('%s new line', '%s new lines', numInserts),\n                    [numInserts]));\n            }\n\n            if (numReplaces > 0) {\n                tooltipParts.push(interpolate(\n                    ngettext('%s line changed', '%s lines changed', numReplaces),\n                    [numReplaces]));\n            }\n\n            if (numDeletes > 0) {\n                tooltipParts.push(interpolate(\n                    ngettext('%s line removed', '%s lines removed', numDeletes),\n                    [numDeletes]));\n            }\n\n            tooltip = tooltipParts.join(', ');\n        }\n\n        $fileIcon.attr('title', tooltip);\n\n        this.listenTo(\n            diffReviewableView,\n            'chunkDimmed chunkUndimmed',\n            chunkID => {\n                this.$(`a[href=\"#${chunkID}\"]`).toggleClass('dimmed');\n            });\n    },\n\n    /**\n     * Handler for when an anchor is clicked.\n     *\n     * Gets the name of the target and emits anchorClicked.\n     *\n     * Args:\n     *     e (Event):\n     *         The click event.\n     */\n    _onAnchorClicked: function(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.trigger('anchorClicked', e.target.href.split('#')[1]);\n    },\n});\n"],"mappings":"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"}