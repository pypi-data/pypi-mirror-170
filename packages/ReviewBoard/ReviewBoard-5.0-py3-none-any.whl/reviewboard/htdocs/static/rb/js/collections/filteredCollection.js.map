{"version":3,"file":"filteredCollection.js","names":["RB","FilteredCollection","BaseCollection","extend","initialize","models","options","collection","filters","listenTo","_onItemAdded","remove","_rebuild","setFilters","item","_passesFilters","add","_","isEmpty","reset","filter","checkEmpty","every","value","key","attrValue","get","isString","indexOf"],"sources":["../../../../../static/rb/js/collections/filteredCollection.es6.js"],"sourcesContent":["/**\n * A collection for filtered results from another collection.\n *\n * This allows a consumer to filter the contents of another collection.\n * A filter can be set by passing the 'filters' option at construction\n * time or calling setFilters, both taking a dictionary of attributes and\n * values. In order for an item to be in this collection, each key in the item\n * must start with the value in the filter.\n */\nRB.FilteredCollection = RB.BaseCollection.extend({\n    /**\n     * Initialize the collection.\n     *\n     * This begins listening for events on the main collection, in order\n     * to update and present a filtered view.\n     *\n     * Args:\n     *     models (Array of object):\n     *         Initial models for the collection.\n     *\n     *     options (object):\n     *         Options for the collection.\n     *\n     * Option Args:\n     *     collection (Backbone.Collection):\n     *         Main collection to filter.\n     *\n     *     filters (object):\n     *         A set of filters to apply. This is an object where the keys are\n     *         the name of the attributes and the values are the value to\n     *         filter for. If the values are strings, this will do a\n     *         starts-with comparison.\n     */\n    initialize(models, options) {\n        this.collection = options.collection;\n        this.filters = options.filters;\n\n        this.listenTo(this.collection, 'add', this._onItemAdded);\n        this.listenTo(this.collection, 'remove', this.remove);\n        this.listenTo(this.collection, 'reset', this._rebuild);\n\n        this._rebuild();\n    },\n\n    /**\n     * Set new filters for the collection.\n     *\n     * The items in the collection will be rebuilt to match the filter.\n     *\n     * Args:\n     *     filters (object):\n     *         A list of filters to apply.\n     */\n    setFilters(filters) {\n        this.filters = filters;\n\n        this._rebuild();\n    },\n\n    /**\n     * Handler for when an item in the main collection is added.\n     *\n     * If the item passes the filter, it will be added to this collection\n     * as well.\n     *\n     * Args:\n     *     item (Backbone.Model):\n     *         The newly-added item.\n     */\n    _onItemAdded(item) {\n        if (this._passesFilters(item, true)) {\n            this.add(item);\n        }\n    },\n\n    /**\n     * Rebuild the collection.\n     *\n     * This iterates through all the items in the main collection and\n     * adds any that pass the filter to this collection.\n     */\n    _rebuild() {\n        if (_.isEmpty(this.filters)) {\n            this.reset(this.collection.models);\n        } else {\n            this.reset(this.collection.filter(this._passesFilters, this));\n        }\n    },\n\n    /**\n     * Return whether an item passes the filters.\n     *\n     * Args:\n     *     item (Backbone.Model):\n     *         The item to check.\n     *\n     *     checkEmpty (boolean):\n     *         Whether to allow items if the filters list is empty.\n     */\n    _passesFilters(item, checkEmpty) {\n        if (checkEmpty && (!this.filters || _.isEmpty(this.filters))) {\n            return true;\n        }\n\n        return _.every(this.filters, (value, key) => {\n            const attrValue = item.get(key);\n\n            if (_.isString(value)) {\n                return attrValue.indexOf(value) === 0;\n            } else {\n                return attrValue === value;\n            }\n        });\n    }\n});\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,EAAE,CAACC,kBAAH,GAAwBD,EAAE,CAACE,cAAH,CAAkBC,MAAlB,CAAyB;EAC7C;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,UAAU,CAACC,MAAD,EAASC,OAAT,EAAkB;IACxB,KAAKC,UAAL,GAAkBD,OAAO,CAACC,UAA1B;IACA,KAAKC,OAAL,GAAeF,OAAO,CAACE,OAAvB;IAEA,KAAKC,QAAL,CAAc,KAAKF,UAAnB,EAA+B,KAA/B,EAAsC,KAAKG,YAA3C;IACA,KAAKD,QAAL,CAAc,KAAKF,UAAnB,EAA+B,QAA/B,EAAyC,KAAKI,MAA9C;IACA,KAAKF,QAAL,CAAc,KAAKF,UAAnB,EAA+B,OAA/B,EAAwC,KAAKK,QAA7C;;IAEA,KAAKA,QAAL;EACH,CAjC4C;;EAmC7C;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,UAAU,CAACL,OAAD,EAAU;IAChB,KAAKA,OAAL,GAAeA,OAAf;;IAEA,KAAKI,QAAL;EACH,CAhD4C;;EAkD7C;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIF,YAAY,CAACI,IAAD,EAAO;IACf,IAAI,KAAKC,cAAL,CAAoBD,IAApB,EAA0B,IAA1B,CAAJ,EAAqC;MACjC,KAAKE,GAAL,CAASF,IAAT;IACH;EACJ,CAhE4C;;EAkE7C;AACJ;AACA;AACA;AACA;AACA;EACIF,QAAQ,GAAG;IACP,IAAIK,CAAC,CAACC,OAAF,CAAU,KAAKV,OAAf,CAAJ,EAA6B;MACzB,KAAKW,KAAL,CAAW,KAAKZ,UAAL,CAAgBF,MAA3B;IACH,CAFD,MAEO;MACH,KAAKc,KAAL,CAAW,KAAKZ,UAAL,CAAgBa,MAAhB,CAAuB,KAAKL,cAA5B,EAA4C,IAA5C,CAAX;IACH;EACJ,CA9E4C;;EAgF7C;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIA,cAAc,CAACD,IAAD,EAAOO,UAAP,EAAmB;IAC7B,IAAIA,UAAU,KAAK,CAAC,KAAKb,OAAN,IAAiBS,CAAC,CAACC,OAAF,CAAU,KAAKV,OAAf,CAAtB,CAAd,EAA8D;MAC1D,OAAO,IAAP;IACH;;IAED,OAAOS,CAAC,CAACK,KAAF,CAAQ,KAAKd,OAAb,EAAsB,CAACe,KAAD,EAAQC,GAAR,KAAgB;MACzC,MAAMC,SAAS,GAAGX,IAAI,CAACY,GAAL,CAASF,GAAT,CAAlB;;MAEA,IAAIP,CAAC,CAACU,QAAF,CAAWJ,KAAX,CAAJ,EAAuB;QACnB,OAAOE,SAAS,CAACG,OAAV,CAAkBL,KAAlB,MAA6B,CAApC;MACH,CAFD,MAEO;QACH,OAAOE,SAAS,KAAKF,KAArB;MACH;IACJ,CARM,CAAP;EASH;;AAxG4C,CAAzB,CAAxB"}