{"version":3,"file":"diffReviewableModelTests.js","names":["suite","reviewRequest","beforeEach","RB","ReviewRequest","reviewURL","describe","it","diffReviewable","DiffReviewable","fileDiffID","revision","file","DiffFile","index","spyOn","$","and","callFake","request","expect","type","toBe","url","TEMPLATE_SERIAL","complete","responseText","html","getRenderedDiff","ajax","toHaveBeenCalled","toEqual","done","console","success","warn","error","fail","undefined","showDeleted","interdiffRevision","baseFileDiffID","getRenderedDiffFragment","chunkIndex","linesOfContext","interFileDiffID"],"sources":["../../../../../../../static/rb/js/diffviewer/models/tests/diffReviewableModelTests.es6.js"],"sourcesContent":["suite('rb/diffviewer/models/DiffReviewable', function() {\n    let reviewRequest;\n\n    beforeEach(function() {\n        reviewRequest = new RB.ReviewRequest({\n            reviewURL: '/r/1/',\n        });\n    });\n\n    describe('getRenderedDiff', function() {\n        it('Without interdiffs', async function() {\n            const diffReviewable = new RB.DiffReviewable({\n                reviewRequest: reviewRequest,\n                fileDiffID: 3,\n                revision: 2,\n                file: new RB.DiffFile({\n                    index: 4,\n                }),\n            });\n\n            spyOn($, 'ajax').and.callFake(request => {\n                expect(request.type).toBe('GET');\n                expect(request.url).toBe(\n                    '/r/1/diff/2/fragment/3/?index=4&_=' + TEMPLATE_SERIAL);\n\n                request.complete({ responseText: 'abc' });\n            });\n\n            const html = await diffReviewable.getRenderedDiff();\n            expect($.ajax).toHaveBeenCalled();\n            expect(html).toEqual('abc');\n        });\n\n        it('With callbacks', function(done) {\n            const diffReviewable = new RB.DiffReviewable({\n                reviewRequest: reviewRequest,\n                fileDiffID: 3,\n                revision: 2,\n                file: new RB.DiffFile({\n                    index: 4,\n                }),\n            });\n\n            spyOn($, 'ajax').and.callFake(request => {\n                expect(request.type).toBe('GET');\n                expect(request.url).toBe(\n                    '/r/1/diff/2/fragment/3/?index=4&show-deleted=1&_=' +\n                    TEMPLATE_SERIAL);\n\n                request.complete({ responseText: 'abc' });\n            });\n            spyOn(console, 'warn');\n\n            diffReviewable.getRenderedDiff(\n                {\n                    success: html => {\n                        expect($.ajax).toHaveBeenCalled();\n                        expect(html).toEqual('abc');\n                        expect(console.warn).toHaveBeenCalled();\n\n                        done();\n                    },\n                    error: () => done.fail(),\n                },\n                undefined,\n                {\n                    showDeleted: true,\n                });\n        });\n\n        it('With interdiffs', async function() {\n            const diffReviewable = new RB.DiffReviewable({\n                reviewRequest: reviewRequest,\n                fileDiffID: 3,\n                revision: 2,\n                interdiffRevision: 3,\n                file: new RB.DiffFile({\n                    index: 4,\n                }),\n            });\n\n            spyOn($, 'ajax').and.callFake(request => {\n                expect(request.type).toBe('GET');\n                expect(request.url).toBe(\n                    '/r/1/diff/2-3/fragment/3/?index=4&_=' + TEMPLATE_SERIAL);\n\n                request.complete({ responseText: 'abc' });\n            });\n\n            const html = await diffReviewable.getRenderedDiff();\n            expect($.ajax).toHaveBeenCalled();\n            expect(html).toEqual('abc');\n        });\n\n        it('With base FileDiff', async function() {\n            const diffReviewable = new RB.DiffReviewable({\n                reviewRequest: reviewRequest,\n                fileDiffID: 3,\n                revision: 2,\n                baseFileDiffID: 1,\n                file: new RB.DiffFile({\n                    index: 4,\n                }),\n            });\n\n            spyOn($, 'ajax').and.callFake(request => {\n                expect(request.type).toBe('GET');\n                expect(request.url).toBe(\n                    '/r/1/diff/2/fragment/3/?base-filediff-id=1&index=4&_=' +\n                    TEMPLATE_SERIAL);\n\n                request.complete({ responseText: 'abc' });\n            });\n\n            const html = await diffReviewable.getRenderedDiff();\n            expect(html).toEqual('abc');\n        });\n    });\n\n    describe('getRenderedDiffFragment', function() {\n        it('Without interdiffs', async function() {\n            const diffReviewable = new RB.DiffReviewable({\n                reviewRequest: reviewRequest,\n                fileDiffID: 3,\n                revision: 2,\n                file: new RB.DiffFile({\n                    index: 5,\n                }),\n            });\n\n            spyOn($, 'ajax').and.callFake(request => {\n                expect(request.type).toBe('GET');\n                expect(request.url).toBe(\n                    '/r/1/diff/2/fragment/3/chunk/4/?index=5&' +\n                    'lines-of-context=6&_=' + TEMPLATE_SERIAL);\n\n                request.complete({ responseText: 'abc' });\n            });\n\n            const html = await diffReviewable.getRenderedDiffFragment({\n                chunkIndex: 4,\n                linesOfContext: 6,\n            });\n\n            expect($.ajax).toHaveBeenCalled();\n            expect(html).toEqual('abc');\n        });\n\n        it('Without interdiffs', function(done) {\n            const diffReviewable = new RB.DiffReviewable({\n                reviewRequest: reviewRequest,\n                fileDiffID: 3,\n                revision: 2,\n                file: new RB.DiffFile({\n                    index: 5,\n                }),\n            });\n\n            spyOn($, 'ajax').and.callFake(request => {\n                expect(request.type).toBe('GET');\n                expect(request.url).toBe(\n                    '/r/1/diff/2/fragment/3/chunk/4/?index=5&' +\n                    'lines-of-context=6&_=' + TEMPLATE_SERIAL);\n\n                request.complete({ responseText: 'abc' });\n            });\n            spyOn(console, 'warn');\n\n            diffReviewable.getRenderedDiffFragment({\n                chunkIndex: 4,\n                linesOfContext: 6,\n                success: html => {\n                    expect($.ajax).toHaveBeenCalled();\n                    expect(html).toEqual('abc');\n                    expect(console.warn).toHaveBeenCalled();\n\n                    done();\n                },\n                error: () => done.fail(),\n            });\n        });\n\n        it('With interdiffs', async function() {\n            const diffReviewable = new RB.DiffReviewable({\n                reviewRequest: reviewRequest,\n                fileDiffID: 3,\n                revision: 2,\n                interdiffRevision: 3,\n                interFileDiffID: 4,\n                file: new RB.DiffFile({\n                    index: 5,\n                }),\n            });\n\n            spyOn($, 'ajax').and.callFake(request => {\n                expect(request.type).toBe('GET');\n                expect(request.url).toBe(\n                    '/r/1/diff/2-3/fragment/3-4/chunk/4/?index=5&' +\n                    'lines-of-context=6&_=' + TEMPLATE_SERIAL);\n\n                request.complete({ responseText: 'abc' });\n            });\n\n            const html = await diffReviewable.getRenderedDiffFragment({\n                chunkIndex: 4,\n                linesOfContext: 6,\n            });\n\n            expect($.ajax).toHaveBeenCalled();\n            expect(html).toEqual('abc');\n        });\n\n        it('With base filediff ID', async function() {\n            const diffReviewable = new RB.DiffReviewable({\n                reviewRequest: reviewRequest,\n                baseFileDiffID: 123,\n                fileDiffID: 3,\n                revision: 2,\n                interdiffRevision: 3,\n                interFileDiffID: 4,\n                file: new RB.DiffFile({\n                    index: 5,\n                }),\n            });\n\n            spyOn($, 'ajax').and.callFake(request => {\n                expect(request.type).toBe('GET');\n                expect(request.url).toBe(\n                    '/r/1/diff/2-3/fragment/3-4/chunk/4/' +\n                    '?base-filediff-id=123&index=5&' +\n                    'lines-of-context=6&_=' + TEMPLATE_SERIAL);\n\n                request.complete({ responseText: 'abc' });\n            });\n\n            const html = await diffReviewable.getRenderedDiffFragment({\n                chunkIndex: 4,\n                linesOfContext: 6,\n            });\n\n            expect($.ajax).toHaveBeenCalled();\n            expect(html).toEqual('abc');\n        });\n\n        it('With callbacks', function(done) {\n            const diffReviewable = new RB.DiffReviewable({\n                reviewRequest: reviewRequest,\n                fileDiffID: 3,\n                revision: 2,\n                file: new RB.DiffFile({\n                    index: 5,\n                }),\n            });\n\n            spyOn($, 'ajax').and.callFake(request => {\n                expect(request.type).toBe('GET');\n                expect(request.url).toBe(\n                    '/r/1/diff/2/fragment/3/chunk/4/?index=5&' +\n                    'lines-of-context=6&_=' + TEMPLATE_SERIAL);\n\n                request.complete({ responseText: 'abc' });\n            });\n            spyOn(console, 'warn');\n\n            diffReviewable.getRenderedDiffFragment(\n                {\n                    success: html => {\n                        expect($.ajax).toHaveBeenCalled();\n                        expect(html).toEqual('abc');\n                        expect(console.warn).toHaveBeenCalled();\n\n                        done();\n                    },\n                    error: () => done.fail(),\n                },\n                undefined,\n                {\n                    chunkIndex: 4,\n                    linesOfContext: 6,\n                });\n        });\n    });\n});\n"],"mappings":"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"}