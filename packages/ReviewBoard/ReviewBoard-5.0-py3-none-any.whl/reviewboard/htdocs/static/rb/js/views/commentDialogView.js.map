{"version":3,"file":"commentDialogView.js","names":["CommentsListView","Backbone","View","extend","itemTemplate","_","template","initialize","options","setComments","comments","replyType","length","reviewRequestURL","commentIssueManager","interactive","issuesInteractive","odd","$items","$","each","serializedComment","commentID","comment_id","$item","comment","itemClass","replyText","_replyText","viewText","_viewText","issue_opened","commentIssueBar","RB","CommentIssueBarView","reviewID","review_id","commentType","issueStatus","issue_status","render","$el","appendTo","listenTo","id","get","add","empty","append","CommentDialogView","DIALOG_TOTAL_HEIGHT","DIALOG_NON_EDITABLE_HEIGHT","DIALOG_READ_ONLY_HEIGHT","SLIDE_DISTANCE","COMMENTS_BOX_WIDTH","FORM_BOX_WIDTH","className","events","userSession","UserSession","instance","reviewRequest","model","reviewRequestEditor","animate","hide","html","authenticated","hasDraft","markdownDocsURL","MANUAL_URL","markdownText","_markdownText","otherReviewsText","_otherReviewsText","loginText","interpolate","_loginTextTemplate","draftWarning","_draftWarningTextTemplate","openAnIssueText","_openAnIssueText","enableMarkdownText","_enableMarkdownText","saveButton","_saveText","cancelButton","_cancelText","deleteButton","_deleteText","closeButton","_closeText","readOnly","readOnlyText","showVerify","EnabledFeatures","issueVerification","verifyIssueText","_verifyIssueText","_$commentsPane","_$draftForm","_$body","children","_$header","_$footer","_$title","_$commentOptions","_$issueOptions","bindVisibility","_$markdownOptions","_$issueField","find","bindProperty","elementToModel","inverse","_$issueVerificationField","_$enableMarkdownField","$buttons","$saveButton","$cancelButton","$deleteButton","$closeButton","commentsList","el","_textEditor","TextEditorView","autoSize","minHeight","text","bindRichText","attrName","show","set","getText","bindRichTextCheckbox","bindRichTextVisibility","setText","_handleResize","css","mousedown","evt","stopPropagation","resizable","handles","support","touch","transparent","resize","bind","proxyTouchEvents","draggable","handle","_updateTitle","_onPublishedCommentsChanged","CommentDialogHook","hook","HookViewType","hookView","extension","commentDialog","commentEditor","save","catch","err","alert","message","close","open","openDialog","scrollIntoView","focus","top","parseInt","opacity","beginEdit","call","onClosed","undefined","context","closeDialog","remove","trigger","isFunction","is","move","x","y","positionBeside","positionToSide","_yourCommentDirtyText","_yourCommentText","showComments","setVisible","width","height","commentsWidth","outerWidth","outerHeight","$commentsList","position","$textField","setSize","getExtents","_onCancelClicked","shouldExit","confirm","_shouldExitText","cancel","_onDeleteClicked","deleteComment","_onTextKeyDown","e","which","ui","keyCode","ESCAPE","ENTER","metaKey","ctrlKey","preventDefault","altKey","_instance","create","console","assert","PageManager","getPage","dlg","CommentEditor","publishedComments","publishedCommentsType","container","document","body","beside","scrollLeft","window","scrollTop","on","showCommentDlg"],"sources":["../../../../../static/rb/js/views/commentDialogView.es6.js"],"sourcesContent":["(function() {\n\n\n/**\n * Displays a list of existing comments within a comment dialog.\n *\n * Each comment in the list is an existing, published comment that a user\n * has made. They will be displayed, along with any issue states and\n * identifying information, and links for viewing the comment on the review\n * or replying to it.\n *\n * This is used internally in CommentDialogView.\n */\nconst CommentsListView = Backbone.View.extend({\n    itemTemplate: _.template(dedent`\n        <li class=\"<%= itemClass %>\">\n         <h2>\n          <%- comment.user.name %>\n          <span class=\"actions\">\n           <a class=\"comment-list-view-action\" href=\"<%= comment.url %>\"><%- viewText %></a>\n           <a class=\"comment-list-reply-action\"\n              href=\"<%= reviewRequestURL %>?reply_id=<%= comment.reply_to_id || comment.comment_id %>&reply_type=<%= replyType %>\"\n              ><%- replyText %></a>\n          </span>\n         </h2>\n         <pre><%- comment.text %></pre>\n        </li>\n    `),\n\n    /**\n     * Initialize the view.\n     *\n     * Args:\n     *     options (object):\n     *         Options for the view.\n     *\n     * Option Args:\n     *     commentIssueManager (RB.CommentIssueManager):\n     *         The manager for issues.\n     *\n     *     issuesInteractive (boolean):\n     *         Whether the user can interact with issues (they have permission\n     *         to change the state).\n     *\n     *     reviewRequestURL (string):\n     *         The URL of the review request.\n     */\n    initialize(options) {\n        this.options = options;\n    },\n\n    /**\n     * Set the list of displayed comments.\n     *\n     * Args:\n     *     comments (Array of object):\n     *         The serialized comments.\n     *\n     *     replyType (string):\n     *         The type of comment, for use in creating replies.\n     */\n    setComments(comments, replyType) {\n        if (comments.length === 0) {\n            return;\n        }\n\n        const reviewRequestURL = this.options.reviewRequestURL;\n        const commentIssueManager = this.options.commentIssueManager;\n        const interactive = this.options.issuesInteractive;\n        let odd = true;\n        let $items = $();\n\n        _.each(comments, serializedComment => {\n            const commentID = serializedComment.comment_id;\n            const $item = $(this.itemTemplate({\n                comment: serializedComment,\n                itemClass: odd ? 'odd' : 'even',\n                reviewRequestURL: reviewRequestURL,\n                replyText: CommentsListView._replyText,\n                replyType: replyType,\n                viewText: CommentsListView._viewText,\n            }));\n\n            if (serializedComment.issue_opened) {\n                const commentIssueBar = new RB.CommentIssueBarView({\n                    reviewID: serializedComment.review_id,\n                    commentID: commentID,\n                    commentType: replyType,\n                    issueStatus: serializedComment.issue_status,\n                    interactive: interactive,\n                    commentIssueManager: commentIssueManager,\n                });\n                commentIssueBar.render().$el.appendTo($item);\n\n                /*\n                 * Update the serialized comment's issue status whenever\n                 * the real comment's status is changed so we will\n                 * display it correctly the next time we render it.\n                 */\n                this.listenTo(\n                    commentIssueManager, 'issueStatusUpdated', comment => {\n                        if (comment.id === commentID) {\n                            serializedComment.issue_status =\n                                comment.get('issueStatus');\n                        }\n                    });\n            }\n\n            $items = $items.add($item);\n            odd = !odd;\n        });\n\n        this.$el\n            .empty()\n            .append($items);\n    },\n},\n{\n    _replyText: gettext('Reply'),\n    _viewText: gettext('View'),\n});\n\n\n/**\n * A dialog that allows for creating, editing or deleting draft comments on\n * a diff or file attachment. The dialog can be moved around on the page.\n *\n * Any existing comments for the selected region will be displayed alongside\n * the dialog for reference. However, this dialog is not intended to be\n * used to reply to those comments.\n */\nRB.CommentDialogView = Backbone.View.extend({\n    DIALOG_TOTAL_HEIGHT: 350,\n    DIALOG_NON_EDITABLE_HEIGHT: 120,\n    DIALOG_READ_ONLY_HEIGHT: 104,\n    SLIDE_DISTANCE: 10,\n    COMMENTS_BOX_WIDTH: 280,\n    FORM_BOX_WIDTH: 450,\n\n    className: 'comment-dlg',\n    template: _.template(dedent`\n        <div class=\"other-comments\">\n         <h1 class=\"title\"><%- otherReviewsText %></h1>\n         <ul></ul>\n        </div>\n        <form method=\"post\">\n         <h1 class=\"comment-dlg-header\">\n          <span class=\"title\"></span>\n          <% if (authenticated && !hasDraft) { %>\n           <a class=\"markdown-info\" href=\"<%- markdownDocsURL %>\"\n              target=\"_blank\"><%- markdownText %></a>\n          <% } %>\n         </h1>\n         <% if (!authenticated) { %>\n          <p class=\"login-text\"><%= loginText %></p>\n         <% } else if (readOnly) { %>\n          <p class=\"read-only-text\"><%= readOnlyText %></p>\n         <% } else if (hasDraft) { %>\n          <p class=\"draft-warning\"><%= draftWarning %></p>\n         <% } %>\n         <div class=\"comment-dlg-body\">\n          <div class=\"comment-text-field\"></div>\n          <ul class=\"comment-dlg-options\">\n           <li class=\"comment-issue-options\">\n            <input type=\"checkbox\" id=\"comment_issue\">\n            <label for=\"comment_issue\" accesskey=\"i\"><%= openAnIssueText %></label>\n            <% if (showVerify) { %>\n             <input type=\"checkbox\" id=\"comment_issue_verify\">\n             <label for=\"comment_issue_verify\"><%= verifyIssueText %></label>\n            <% } %>\n           </li>\n           <li class=\"comment-markdown-options\">\n            <input type=\"checkbox\" id=\"enable_markdown\">\n            <label for=\"enable_markdown\" accesskey=\"m\"><%= enableMarkdownText %></label>\n           </li>\n          </ul>\n         </div>\n         <div class=\"comment-dlg-footer\">\n          <div class=\"buttons\">\n           <input type=\"button\" class=\"save\" value=\"<%- saveButton %>\"\n                  disabled=\"true\">\n           <input type=\"button\" class=\"cancel\" value=\"<%- cancelButton %>\">\n           <input type=\"button\" class=\"delete\" value=\"<%- deleteButton %>\"\n                  disabled=\"true\">\n           <input type=\"button\" class=\"close\" value=\"<%- closeButton %>\">\n          </div>\n         </div>\n        </form>\n    `),\n\n    events: {\n        'click .buttons .cancel': '_onCancelClicked',\n        'click .buttons .close': '_onCancelClicked',\n        'click .buttons .delete': '_onDeleteClicked',\n        'click .buttons .save': 'save',\n        'keydown .comment-text-field': '_onTextKeyDown',\n    },\n\n    /**\n     * Initialize the view.\n     *\n     * Args:\n     *     options (object):\n     *         Options for the view.\n     *\n     * Option Args:\n     *     animate (boolean):\n     *         Whether to use animation.\n     *\n     *     commentIssueManager (RB.CommentIssueManager):\n     *         The manager for issues.\n     */\n    initialize(options) {\n        this.options = options;\n    },\n\n    /**\n     * Render the view.\n     *\n     * Returns:\n     *     RB.CommentDialogView:\n     *     This object, for chaining.\n     */\n    render() {\n        const userSession = RB.UserSession.instance;\n        const reviewRequest = this.model.get('reviewRequest');\n        const reviewRequestEditor = this.model.get('reviewRequestEditor');\n\n        this.options.animate = (this.options.animate !== false);\n\n        this.$el\n            .hide()\n            .html(this.template({\n                authenticated: userSession.get('authenticated'),\n                hasDraft: reviewRequest.get('hasDraft'),\n                markdownDocsURL: MANUAL_URL + 'users/markdown/',\n                markdownText: RB.CommentDialogView._markdownText,\n                otherReviewsText: RB.CommentDialogView._otherReviewsText,\n                loginText: interpolate(\n                    RB.CommentDialogView._loginTextTemplate,\n                    [userSession.get('loginURL')]),\n                draftWarning: interpolate(\n                    RB.CommentDialogView._draftWarningTextTemplate,\n                    [reviewRequest.get('reviewURL')]),\n                openAnIssueText: RB.CommentDialogView._openAnIssueText,\n                enableMarkdownText: RB.CommentDialogView._enableMarkdownText,\n                saveButton: RB.CommentDialogView._saveText,\n                cancelButton: RB.CommentDialogView._cancelText,\n                deleteButton: RB.CommentDialogView._deleteText,\n                closeButton: RB.CommentDialogView._closeText,\n                readOnly: userSession.get('readOnly'),\n                readOnlyText: gettext('Review Board is currently in read-only mode.'),\n                showVerify: RB.EnabledFeatures.issueVerification,\n                verifyIssueText: RB.CommentDialogView._verifyIssueText,\n            }));\n\n        this._$commentsPane = this.$('.other-comments');\n        this._$draftForm = this.$('form');\n        this._$body = this._$draftForm.children('.comment-dlg-body');\n        this._$header = this._$draftForm.children('.comment-dlg-header');\n        this._$footer = this._$draftForm.children('.comment-dlg-footer');\n        this._$title = this._$header.children('.title');\n\n        this._$commentOptions = this._$body.children('.comment-dlg-options');\n\n        this._$issueOptions =\n            this._$commentOptions.children('.comment-issue-options')\n                .bindVisibility(this.model, 'canEdit');\n        this._$markdownOptions =\n            this._$commentOptions.children('.comment-markdown-options')\n                .bindVisibility(this.model, 'canEdit');\n\n        this._$issueField = this._$issueOptions\n            .find('#comment_issue')\n                .bindProperty('checked', this.model, 'openIssue')\n                .bindProperty('disabled', this.model, 'editing', {\n                    elementToModel: false,\n                    inverse: true,\n                });\n\n        this._$issueVerificationField = this._$issueOptions\n            .find('#comment_issue_verify')\n                .bindProperty('checked', this.model, 'requireVerification')\n                .bindProperty('disabled', this.model, 'editing', {\n                    elementToModel: false,\n                    inverse: true,\n                });\n\n        this._$enableMarkdownField = this._$markdownOptions\n            .find('#enable_markdown')\n                .bindProperty('checked', this.model, 'richText')\n                .bindProperty('disabled', this.model, 'editing', {\n                    elementToModel: false,\n                    inverse: true,\n                });\n\n        this.$buttons = this._$footer.find('.buttons');\n\n        this.$saveButton = this.$buttons.find('input.save')\n            .bindVisibility(this.model, 'canEdit')\n            .bindProperty('disabled', this.model, 'canSave', {\n                elementToModel: false,\n                inverse: true,\n            });\n\n        this.$cancelButton = this.$buttons.find('input.cancel')\n            .bindVisibility(this.model, 'canEdit');\n\n        this.$deleteButton = this.$buttons.find('input.delete')\n            .bindVisibility(this.model, 'canDelete')\n            .bindProperty('disabled', this.model, 'canDelete', {\n                elementToModel: false,\n                inverse: true,\n            });\n\n        this.$closeButton = this.$buttons.find('input.close')\n            .bindVisibility(this.model, 'canEdit', {\n                inverse: true,\n            });\n\n        this.commentsList = new CommentsListView({\n            el: this._$commentsPane.find('ul'),\n            reviewRequestURL: reviewRequest.get('reviewURL'),\n            commentIssueManager: this.options.commentIssueManager,\n            issuesInteractive: reviewRequestEditor.get('editable'),\n        });\n\n        /*\n         * We need to handle keypress here, rather than in events above,\n         * because jQuery will actually handle it. Backbone fails to.\n         */\n        this._textEditor = new RB.TextEditorView({\n            el: this._$draftForm.find('.comment-text-field'),\n            autoSize: false,\n            minHeight: 0,\n            text: this.model.get('text'),\n            bindRichText: {\n                model: this.model,\n                attrName: 'richText',\n            },\n        });\n        this._textEditor.render();\n        this._textEditor.show();\n        this._textEditor.$el.bindVisibility(this.model, 'canEdit');\n        this.listenTo(this._textEditor, 'change',\n                      () => this.model.set('text',\n                                           this._textEditor.getText()));\n        this._textEditor.bindRichTextCheckbox(this._$enableMarkdownField);\n        this._textEditor.bindRichTextVisibility(\n            this._$draftForm.find('.markdown-info'));\n\n        this.listenTo(this.model, 'change:text',\n                      () => this._textEditor.setText(this.model.get('text')));\n\n        this.listenTo(this.model, 'change:richText', this._handleResize);\n\n        this.$el\n            .css('position', 'absolute')\n            .mousedown(evt => {\n                /*\n                 * Prevent this from reaching the selection area, which will\n                 * swallow the default action for the mouse down.\n                 */\n                evt.stopPropagation();\n            })\n            .resizable({\n                handles: $.support.touch ? 'grip,se'\n                                         : 'grip,n,e,s,w,se,sw,ne,nw',\n                transparent: true,\n                resize: _.bind(this._handleResize, this),\n            })\n            .proxyTouchEvents();\n\n        this._$header.css('cursor', 'move');\n        this.$el.draggable({\n            handle: '.comment-dlg-header',\n        });\n\n        this.listenTo(this.model, 'change:dirty', this._updateTitle);\n        this._updateTitle();\n\n        this.listenTo(this.model, 'change:publishedComments',\n                      () => this._onPublishedCommentsChanged());\n        this._onPublishedCommentsChanged();\n\n        /* Add any hooks. */\n        RB.CommentDialogHook.each(hook => {\n            const HookViewType = hook.get('viewType');\n            const hookView = new HookViewType({\n                extension: hook.get('extension'),\n                commentDialog: this,\n                commentEditor: this.model,\n                el: this.el,\n            });\n\n            hookView.render();\n        });\n\n        return this;\n    },\n\n    /**\n     * Callback for when the Save button is pressed.\n     *\n     * Saves the comment, creating it if it's new, and closes the dialog.\n     */\n    save() {\n        /*\n         * Set this immediately, in case new text has been set in the editor\n         * that we haven't been notified about yet.\n         */\n        this.model.set('text', this._textEditor.getText());\n\n        if (this.model.get('canSave')) {\n            this.model.save()\n                .catch(err => {\n                    alert(gettext('Error saving comment: ') + err.message);\n                });\n\n            this.close();\n        }\n    },\n\n    /**\n     * Open the comment dialog and focuses the text field.\n     */\n    open() {\n        function openDialog() {\n            this.$el.scrollIntoView();\n            this._textEditor.focus();\n        }\n\n        this.$el\n            .css({\n                top: parseInt(this.$el.css('top'), 10) - this.SLIDE_DISTANCE,\n                opacity: 0,\n            })\n            .show();\n\n        this._handleResize();\n\n        if (this.model.get('canEdit')) {\n            this.model.beginEdit();\n        }\n\n        if (this.options.animate) {\n            this.$el.animate({\n                top: `+=${this.SLIDE_DISTANCE}px`,\n                opacity: 1,\n            }, 350, 'swing', _.bind(openDialog, this));\n        } else {\n            openDialog.call(this);\n        }\n    },\n\n    /**\n     * Close the comment dialog, discarding the comment block if empty.\n     *\n     * This can optionally take a callback and context to notify when the\n     * dialog has been closed.\n     *\n     * Args:\n     *     onClosed (function, optional):\n     *         An optional callback to call once the dialog has been closed.\n     *\n     *     context (object, optional):\n     *         Context to use when calling ``onClosed``.\n     */\n    close(onClosed=undefined, context={}) {\n        function closeDialog() {\n            this.model.close();\n            this.$el.remove();\n            this.trigger('closed');\n\n            if (_.isFunction(onClosed)) {\n                onClosed.call(context);\n            }\n        }\n\n        if (this.options.animate && this.$el.is(':visible')) {\n            this.$el.animate({\n                top: `-=${this.SLIDE_DISTANCE}px`,\n                opacity: 0,\n            }, 350, 'swing', _.bind(closeDialog, this));\n        } else {\n            closeDialog.call(this);\n        }\n    },\n\n    /**\n     * Move the comment dialog to the given coordinates.\n     *\n     * Args:\n     *     x (number):\n     *         The X-coordinate to move the dialog to.\n     *\n     *     y (number):\n     *         The Y-coordinate to move the dialog to.\n     */\n    move(x, y) {\n        this.$el.move(x, y);\n    },\n\n    /**\n     * Position the dialog beside an element.\n     *\n     * This takes the same arguments that $.fn.positionToSide takes.\n     *\n     * Args:\n     *     $el (jQuery):\n     *        The element to move the dialog next to.\n     *\n     *     options (object):\n     *         Options for the ``positionToSide`` call.\n     */\n    positionBeside($el, options) {\n        this.$el.positionToSide($el, options);\n    },\n\n    /**\n     * Update the title of the comment dialog, based on the current state.\n     */\n    _updateTitle() {\n        this._$title.text(this.model.get('dirty')\n                          ? RB.CommentDialogView._yourCommentDirtyText\n                          : RB.CommentDialogView._yourCommentText);\n    },\n\n    /**\n     * Callback for when the list of published comments changes.\n     *\n     * Sets the list of comments in the CommentsList, and factors in some\n     * new layout properties.\n     */\n    _onPublishedCommentsChanged() {\n        const comments = this.model.get('publishedComments') || [];\n        this.commentsList.setComments(comments,\n                                       this.model.get('publishedCommentsType'));\n\n        const showComments = (comments.length > 0);\n        this._$commentsPane.setVisible(showComments);\n\n        /* Do this here so that calculations can be done before open() */\n        let width = this.FORM_BOX_WIDTH;\n\n        if (showComments) {\n            width += this.COMMENTS_BOX_WIDTH;\n        }\n\n        let height;\n\n        if (this.model.get('canEdit')) {\n            height = this.DIALOG_TOTAL_HEIGHT;\n        } else if (RB.UserSession.instance.get('readOnly')) {\n            height = this.DIALOG_READ_ONLY_HEIGHT;\n        } else {\n            height = this.DIALOG_NON_EDITABLE_HEIGHT;\n        }\n\n        this.$el\n            .width(width)\n            .height(height);\n    },\n\n    /**\n     * Handle the resize of the comment dialog.\n     *\n     * This will lay out the elements in the dialog appropriately.\n     */\n    _handleResize() {\n        const height = this.$el.height();\n        let width = this.$el.width();\n        let commentsWidth = 0;\n\n        if (this._$commentsPane.is(':visible')) {\n            this._$commentsPane\n                .outerWidth(this.COMMENTS_BOX_WIDTH)\n                .outerHeight(height)\n                .move(0, 0, 'absolute');\n\n            const $commentsList = this.commentsList.$el;\n            $commentsList.height(this._$commentsPane.height() -\n                                 $commentsList.position().top);\n\n            commentsWidth = this._$commentsPane.outerWidth(true);\n            width -= commentsWidth;\n        }\n\n        this._$draftForm\n            .outerWidth(width)\n            .outerHeight(height)\n            .move(commentsWidth, 0, 'absolute');\n\n        const $textField = this._textEditor.$el;\n        this._textEditor.setSize(\n            (this._$body.width() -\n             $textField.getExtents('b', 'lr')),\n            (this._$draftForm.height() -\n             this._$header.outerHeight() -\n             this._$commentOptions.outerHeight() -\n             this._$footer.outerHeight() -\n             $textField.getExtents('b', 'tb')));\n    },\n\n    /**\n     * Callback for when the Cancel button is pressed.\n     *\n     * Cancels the comment (which may delete the comment block, if it's new)\n     * and closes the dialog.\n     */\n    _onCancelClicked() {\n        let shouldExit = true;\n\n        if (this.model.get('dirty')) {\n            shouldExit = confirm(RB.CommentDialogView._shouldExitText);\n        }\n\n        if (shouldExit) {\n            this.model.cancel();\n            this.close();\n        }\n    },\n\n    /**\n     * Callback for when the Delete button is pressed.\n     *\n     * Deletes the comment and closes the dialog.\n     */\n    _onDeleteClicked() {\n        if (this.model.get('canDelete')) {\n            this.model.deleteComment();\n            this.close();\n        }\n    },\n\n    /**\n     * Callback for keydown events in the text field.\n     *\n     * If the Escape key is pressed, the dialog will be closed.\n     * If the Control-Enter or Alt-I keys are pressed, we'll handle them\n     * specially. Control-Enter is the same thing as clicking Save.\n     *\n     * metaKey used as alternative for Mac key shortcut philosophy.\n     * metaKey is only fired on keydown in Chrome and Brave.\n     *\n     * The keydown event won't be propagated to the parent elements.\n     *\n     * Args:\n     *     e (Event):\n     *         The keydown event.\n     */\n    _onTextKeyDown(e) {\n        e.stopPropagation();\n\n        switch (e.which) {\n            case $.ui.keyCode.ESCAPE:\n                this._onCancelClicked();\n                return false;\n\n            case 10:\n            case $.ui.keyCode.ENTER:\n                /* Enter */\n                if (e.metaKey || e.ctrlKey) {\n                    this.save();\n                    e.preventDefault();\n                    e.stopPropagation();\n                }\n                break;\n\n            case 73:\n            case 105:\n                /* I */\n                if (e.metaKey || e.altKey) {\n                    // preventDefault is called to avoid Firefox info window.\n                    e.preventDefault();\n                    this.model.set('openIssue', !this.model.get('openIssue'));\n                }\n                break;\n\n            case 77:\n            case 109:\n                /* M */\n                if (e.metaKey || e.altKey) {\n                    // preventDefault is called to avoid Mac's window minimize.\n                    e.preventDefault();\n                    this.model.set('richText', !this.model.get('richText'));\n                }\n                break;\n\n            default:\n                break;\n        }\n    },\n}, {\n    /**\n     * The singleton instance.\n     */\n    _instance: null,\n\n    /**\n     * Create and shows a new comment dialog and associated model.\n     *\n     * This is a class method that handles providing a comment dialog\n     * ready to use with the given state.\n     *\n     * Only one comment dialog can appear on the screen at any given time\n     * when using this.\n     *\n     * Args:\n     *     options (object, optional):\n     *         Options for the view construction.\n     */\n    create: function(options={}) {\n        console.assert(options.comment, 'A comment must be specified');\n\n        const reviewRequestEditor =\n            options.reviewRequestEditor ||\n            RB.PageManager.getPage().model.reviewRequestEditor;\n\n        const dlg = new RB.CommentDialogView({\n            animate: options.animate,\n            commentIssueManager: options.commentIssueManager ||\n                                 reviewRequestEditor.get('commentIssueManager'),\n            model: new RB.CommentEditor({\n                comment: options.comment,\n                reviewRequest: reviewRequestEditor.get('reviewRequest'),\n                reviewRequestEditor: reviewRequestEditor,\n                publishedComments: options.publishedComments || undefined,\n                publishedCommentsType: options.publishedCommentsType ||\n                                       undefined,\n            })\n        });\n\n        dlg.render().$el\n            .css('z-index', 999) // XXX Use classes for z-indexes.\n            .appendTo(options.container || document.body);\n\n        options.position = options.position || {};\n\n        if (_.isFunction(options.position)) {\n            options.position(dlg);\n        } else if (options.position.beside) {\n            dlg.positionBeside(options.position.beside.el,\n                               options.position.beside);\n        } else {\n            let x = options.position.x;\n            let y = options.position.y;\n\n            if (x === undefined) {\n                /* Center it. */\n                x = $(document).scrollLeft() +\n                    ($(window).width() - dlg.$el.width()) / 2;\n            }\n\n            if (y === undefined) {\n                /* Center it. */\n                y = $(document).scrollTop() +\n                    ($(window).height() - dlg.$el.height()) / 2;\n            }\n\n            dlg.move(x, y);\n        }\n\n        dlg.on('closed', () => RB.CommentDialogView._instance = null);\n\n        const instance = RB.CommentDialogView._instance;\n        const showCommentDlg = function showCommentDlg() {\n            try {\n                dlg.open();\n            } catch(e) {\n                dlg.close();\n                throw e;\n            }\n\n            RB.CommentDialogView._instance = dlg;\n        };\n\n        if (instance) {\n            instance.on('closed', showCommentDlg);\n            instance.close();\n        } else {\n            showCommentDlg();\n        }\n\n        return dlg;\n    },\n\n    _cancelText: gettext('Cancel'),\n    _closeText: gettext('Close'),\n    _deleteText: gettext('Delete'),\n    _draftWarningTextTemplate: gettext('The review request\\'s current <a href=\"%s\">draft</a> needs to be published before you can comment.'),\n    _enableMarkdownText: gettext('Enable <u>M</u>arkdown'),\n    _loginTextTemplate: gettext('You must <a href=\"%s\">log in</a> to post a comment.'),\n    _markdownText: gettext('Markdown'),\n    _openAnIssueText: gettext('Open an <u>I</u>ssue'),\n    _otherReviewsText: gettext('Other reviews'),\n    _saveText: gettext('Save'),\n    _shouldExitText: gettext('You have unsaved changes. Are you sure you want to exit?'),\n    _verifyIssueText: gettext('Require Verification'),\n    _yourCommentText: gettext('Your comment'),\n    _yourCommentDirtyText: gettext('Your comment (unsaved)'),\n});\n\n\n})();\n"],"mappings":"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"}