{"version":3,"file":"resourceListItemModel.js","names":["RB","Config","ResourceListItem","Djblets","ListItem","extend","defaults","_","resource","prototype","syncAttrs","initialize","get","set","pick","attributes","createResource","id","apply","arguments","listenTo","args","trigger","destroy","forEach","attr","model","value","console","assert","options","stopListening","collection","isFunction","success"],"sources":["../../../../../../static/rb/js/configForms/models/resourceListItemModel.es6.js"],"sourcesContent":["/**\n * A list item representing a resource in the API.\n *\n * This item will be backed by a resource model, which will be used for\n * all synchronization with the API. It will work as a proxy for requests\n * and events, and synchronize attributes between the resource and the list\n * item. This allows callers to work directly with the list item instead of\n * digging down into the resource.\n */\nRB.Config.ResourceListItem = Djblets.Config.ListItem.extend({\n    defaults: _.defaults({\n        resource: null\n    }, Djblets.Config.ListItem.prototype.defaults),\n\n    /** A list of attributes synced between the ListItem and the Resource. */\n    syncAttrs: [],\n\n    /**\n     * Initialize the list item.\n     *\n     * This will begin listening for events on the resource, updating\n     * the state of the icon based on changes.\n     */\n    initialize() {\n        let resource = this.get('resource');\n\n        if (resource) {\n            this.set(_.pick(resource.attributes, this.syncAttrs));\n        } else {\n            /*\n             * Create a resource using the attributes provided to this list\n             * item.\n             */\n            resource = this.createResource(_.extend(\n                { id: this.get('id') },\n                _.pick(this.attributes, this.syncAttrs)));\n\n            this.set('resource', resource);\n        }\n\n        this.resource = resource;\n\n        Djblets.Config.ListItem.prototype.initialize.apply(this, arguments);\n\n        /* Forward on a couple events we want the caller to see. */\n        this.listenTo(resource, 'request',\n                      (...args) => this.trigger('request', ...args));\n        this.listenTo(resource, 'sync',\n                      (...args) => this.trigger('sync', ...args));\n\n        /* Destroy this item when the resource is destroyed. */\n        this.listenTo(resource, 'destroy', this.destroy);\n\n        /*\n         * Listen for each synced attribute change so we can update this\n         * list item.\n         */\n        this.syncAttrs.forEach(\n            attr => this.listenTo(resource, `change:${attr}`,\n                                  (model, value) => this.set(attr, value)));\n    },\n\n    /**\n     * Create the Resource for this list item, with the given attributes.\n     */\n    createResource(/* attrs */) {\n        console.assert(false, 'createResource must be implemented');\n    },\n\n    /**\n     * Destroy the list item.\n     *\n     * This will just emit the 'destroy' signal. It is typically called when\n     * the resource itself is destroyed.\n     *\n     * Args:\n     *     options (object):\n     *         Options for the destroy operation.\n     *\n     * Option Args:\n     *     success (function):\n     *         Optional success callback.\n     */\n    destroy(options={}) {\n        this.stopListening(this.resource);\n        this.trigger('destroy', this, this.collection, options);\n\n        if (_.isFunction(options.success)) {\n            options.success(this, null, options);\n        }\n    }\n});\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,EAAE,CAACC,MAAH,CAAUC,gBAAV,GAA6BC,OAAO,CAACF,MAAR,CAAeG,QAAf,CAAwBC,MAAxB,CAA+B;EACxDC,QAAQ,EAAEC,CAAC,CAACD,QAAF,CAAW;IACjBE,QAAQ,EAAE;EADO,CAAX,EAEPL,OAAO,CAACF,MAAR,CAAeG,QAAf,CAAwBK,SAAxB,CAAkCH,QAF3B,CAD8C;;EAKxD;EACAI,SAAS,EAAE,EAN6C;;EAQxD;AACJ;AACA;AACA;AACA;AACA;EACIC,UAAU,GAAG;IAAA;;IACT,IAAIH,QAAQ,GAAG,KAAKI,GAAL,CAAS,UAAT,CAAf;;IAEA,IAAIJ,QAAJ,EAAc;MACV,KAAKK,GAAL,CAASN,CAAC,CAACO,IAAF,CAAON,QAAQ,CAACO,UAAhB,EAA4B,KAAKL,SAAjC,CAAT;IACH,CAFD,MAEO;MACH;AACZ;AACA;AACA;MACYF,QAAQ,GAAG,KAAKQ,cAAL,CAAoBT,CAAC,CAACF,MAAF,CAC3B;QAAEY,EAAE,EAAE,KAAKL,GAAL,CAAS,IAAT;MAAN,CAD2B,EAE3BL,CAAC,CAACO,IAAF,CAAO,KAAKC,UAAZ,EAAwB,KAAKL,SAA7B,CAF2B,CAApB,CAAX;MAIA,KAAKG,GAAL,CAAS,UAAT,EAAqBL,QAArB;IACH;;IAED,KAAKA,QAAL,GAAgBA,QAAhB;IAEAL,OAAO,CAACF,MAAR,CAAeG,QAAf,CAAwBK,SAAxB,CAAkCE,UAAlC,CAA6CO,KAA7C,CAAmD,IAAnD,EAAyDC,SAAzD;IAEA;;IACA,KAAKC,QAAL,CAAcZ,QAAd,EAAwB,SAAxB,EACc;MAAA,kCAAIa,IAAJ;QAAIA,IAAJ;MAAA;;MAAA,OAAa,KAAI,CAACC,OAAL,CAAa,SAAb,EAAwB,GAAGD,IAA3B,CAAb;IAAA,CADd;IAEA,KAAKD,QAAL,CAAcZ,QAAd,EAAwB,MAAxB,EACc;MAAA,mCAAIa,IAAJ;QAAIA,IAAJ;MAAA;;MAAA,OAAa,KAAI,CAACC,OAAL,CAAa,MAAb,EAAqB,GAAGD,IAAxB,CAAb;IAAA,CADd;IAGA;;IACA,KAAKD,QAAL,CAAcZ,QAAd,EAAwB,SAAxB,EAAmC,KAAKe,OAAxC;IAEA;AACR;AACA;AACA;;IACQ,KAAKb,SAAL,CAAec,OAAf,CACIC,IAAI,IAAI,KAAKL,QAAL,CAAcZ,QAAd,EAAyB,UAASiB,IAAK,EAAvC,EACc,CAACC,KAAD,EAAQC,KAAR,KAAkB,KAAKd,GAAL,CAASY,IAAT,EAAeE,KAAf,CADhC,CADZ;EAGH,CAnDuD;;EAqDxD;AACJ;AACA;EACIX,cAAc,GAAc;IACxBY,OAAO,CAACC,MAAR,CAAe,KAAf,EAAsB,oCAAtB;EACH,CA1DuD;;EA4DxD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIN,OAAO,GAAa;IAAA,IAAZO,OAAY,uEAAJ,EAAI;IAChB,KAAKC,aAAL,CAAmB,KAAKvB,QAAxB;IACA,KAAKc,OAAL,CAAa,SAAb,EAAwB,IAAxB,EAA8B,KAAKU,UAAnC,EAA+CF,OAA/C;;IAEA,IAAIvB,CAAC,CAAC0B,UAAF,CAAaH,OAAO,CAACI,OAArB,CAAJ,EAAmC;MAC/BJ,OAAO,CAACI,OAAR,CAAgB,IAAhB,EAAsB,IAAtB,EAA4BJ,OAA5B;IACH;EACJ;;AAjFuD,CAA/B,CAA7B"}