{"version":3,"file":"joinedGroupsView.js","names":["GroupMembershipItem","Djblets","Config","ListItem","extend","defaults","_","localSiteName","displayName","groupName","joined","showRemove","url","prototype","initialize","apply","arguments","name","get","set","text","editURL","group","RB","ReviewGroup","id","localSitePrefix","on","_updateActions","joinGroup","addUser","UserSession","instance","leaveGroup","removeUser","actions","label","trigger","GroupMembershipItemView","ListItemView","actionHandlers","template","join","_onJoinClicked","model","_onLeaveClicked","SiteGroupsView","Backbone","View","options","collection","FilteredCollection","Collection","groups","groupList","List","render","_listView","ListView","ItemView","$el","html","appendTo","$","filterBy","setFilters","setVisible","length","JoinedGroupsView","events","_$listsContainer","_$search","_searchText","_groupViews","Object","entries","view","push","_onGroupSearchChanged","val","forEach","_onSubmit","e","preventDefault"],"sources":["../../../../../../static/rb/js/accountPrefsPage/views/joinedGroupsView.es6.js"],"sourcesContent":["(function() {\n\n\n/**\n * An item representing the user's membership with a group.\n *\n * This keeps track of the group's information and the membership state\n * for the user. It also allows changing that membership.\n *\n * This provides two actions: 'Join', and 'Leave'.\n */\nconst GroupMembershipItem = Djblets.Config.ListItem.extend({\n    defaults: _.defaults({\n        localSiteName: null,\n        displayName: null,\n        groupName: null,\n        joined: false,\n        showRemove: false,\n        url: null\n    }, Djblets.Config.ListItem.prototype.defaults),\n\n    /**\n     * Initialize the item.\n     *\n     * The item's name and URL will be taken from the serialized group\n     * information, and a proxy ReviewGroup will be created to handle\n     * membership.\n     */\n    initialize() {\n        Djblets.Config.ListItem.prototype.initialize.apply(this, arguments);\n\n        const name = this.get('name');\n        const localSiteName = this.get('localSiteName');\n\n        this.set({\n            text: name,\n            editURL: this.get('url')\n        });\n\n        this.group = new RB.ReviewGroup({\n            id: this.get('reviewGroupID'),\n            name: name,\n            localSitePrefix: (localSiteName ? 's/' + localSiteName + '/' : '')\n        });\n\n        this.on('change:joined', this._updateActions, this);\n        this._updateActions();\n    },\n\n    /**\n     * Join the group.\n     *\n     * This will add the user to the group, and set the 'joined' property\n     * to true upon completion.\n     */\n    async joinGroup() {\n        await this.group.addUser(RB.UserSession.instance.get('username'));\n        this.set('joined', true);\n    },\n\n    /**\n     * Leave the group.\n     *\n     * This will remove the user from the group, and set the 'joined' property\n     * to false upon completion.\n     */\n    async leaveGroup() {\n        await this.group.removeUser(RB.UserSession.instance.get('username'));\n        this.set('joined', false);\n    },\n\n    /**\n     * Update the list of actions.\n     *\n     * This will replace the existing action, if any, with a new action\n     * allowing the user to join or leave the group, depending on their\n     * current membership status.\n     */\n    _updateActions() {\n        if (this.get('joined')) {\n            this.actions = [{\n                id: 'leave',\n                label: gettext('Leave')\n            }];\n        } else {\n            this.actions = [{\n                id: 'join',\n                label: gettext('Join')\n            }];\n        }\n\n        this.trigger('actionsChanged');\n    }\n});\n\n\n/**\n * Provides UI for showing a group membership.\n *\n * This will display the group information and provide buttons for\n * the Join/Leave actions.\n */\nconst GroupMembershipItemView = Djblets.Config.ListItemView.extend({\n    actionHandlers: {\n        'join': '_onJoinClicked',\n        'leave': '_onLeaveClicked'\n    },\n\n    template: _.template([\n        '<span class=\"config-group-name\">',\n        ' <a href=\"<%- editURL %>\"><%- text %></a>',\n        '</span>',\n        '<span class=\"config-group-display-name\"><%- displayName %></span>'\n    ].join('')),\n\n    /**\n     * Handler for when Join is clicked.\n     *\n     * Tells the model to join the group.\n     */\n    _onJoinClicked() {\n        this.model.joinGroup();\n    },\n\n    /**\n     * Handler for when Leave is clicked.\n     *\n     * Tells the model to leave the group.\n     */\n    _onLeaveClicked() {\n        this.model.leaveGroup();\n    }\n});\n\n\n/**\n * Displays a list of group membership items, globally or for a Local Site.\n *\n * If displaying for a Local Site, then the name of the site will be shown\n * before the list.\n *\n * Each group in the list will be shown as an item with Join/Leave buttons.\n *\n * The list of groups are filterable. When filtering, if there are no groups\n * that match the filter, then the whole view will be hidden.\n */\nconst SiteGroupsView = Backbone.View.extend({\n    template: _.template(dedent`\n        <% if (name) { %>\n         <div class=\"djblets-l-config-forms-container\">\n          <h3><%- name %></h3>\n         </div>\n        <% } %>\n        <div class=\"groups\"></div>\n    `),\n\n    /**\n     * Initialize the view.\n     *\n     * This will create a list for all groups in this view.\n     *\n     * Args:\n     *     options (object):\n     *         Options for view construction.\n     *\n     * Option Args:\n     *     name (string):\n     *         The name of the local site, if any.\n     */\n    initialize(options) {\n        this.name = options.name;\n        this.collection = new RB.FilteredCollection(null, {\n            collection: new Backbone.Collection(options.groups, {\n                model: GroupMembershipItem\n            })\n        });\n        this.groupList = new Djblets.Config.List({}, {\n            collection: this.collection\n        });\n    },\n\n    /**\n     * Render the view.\n     *\n     * Returns:\n     *     SiteGroupsView:\n     *     This object, for chaining.\n     */\n    render() {\n        this._listView = new Djblets.Config.ListView({\n            ItemView: GroupMembershipItemView,\n            model: this.groupList\n        });\n\n        this.$el.html(this.template({\n            name: this.name\n        }));\n\n        this._listView.render();\n        this._listView.$el.appendTo(this.$('.groups'));\n\n        return this;\n    },\n\n    /**\n     * Filter the list of groups by name.\n     *\n     * If no groups are found, then the view will hide itself.\n     *\n     * Args:\n     *     name (string):\n     *         The group name to search for.\n     */\n    filterBy(name) {\n        this.collection.setFilters({\n            'name': name\n        });\n\n        this.$el.setVisible(this.collection.length > 0);\n    }\n});\n\n\n/**\n * Provides UI for managing a user's group memberships.\n *\n * All accessible groups will be shown to the user, sectioned by\n * Local Site. This list is filterable through a search box at the top of\n * the view.\n *\n * Each group entry provides a button for joining or leaving the group,\n * allowing users to manage their memberships.\n */\nRB.JoinedGroupsView = Backbone.View.extend({\n    template: _.template(dedent`\n        <div class=\"djblets-l-config-forms-container\">\n         <div class=\"rb-c-search-field\">\n          <span class=\"fa fa-search\"></span>\n          <input class=\"rb-c-search-field__input\" type=\"search\">\n         </div>\n        </div>\n        <div class=\"group-lists\"></div>\n    `),\n\n    events: {\n        'submit': '_onSubmit',\n        'keyup .rb-c-search-field__input': '_onGroupSearchChanged',\n        'change .rb-c-search-field__input': '_onGroupSearchChanged',\n    },\n\n    /*\n     * Initialize the view.\n     *\n     * Args:\n     *     options (object):\n     *         Options for view construction.\n     *\n     * Option Args:\n     *     groups (Array of object):\n     *         Initial set of groups.\n     */\n    initialize(options) {\n        this.groups = options.groups;\n\n        this._$listsContainer = null;\n        this._$search = null;\n        this._searchText = null;\n        this._groupViews = [];\n    },\n\n    /**\n     * Render the view.\n     *\n     * This will set up the elements and the list of SiteGroupsViews.\n     *\n     * Returns:\n     *     RB.JoinedGroupsView.\n     *     This object, for chaining.\n     */\n    render() {\n        this.$el.html(this.template());\n\n        this._$listsContainer = this.$('.group-lists');\n        this._$search = this.$('.rb-c-search-field__input');\n\n        for (let [localSiteName, groups] of Object.entries(this.groups)) {\n            if (groups.length > 0) {\n                const view = new SiteGroupsView({\n                    name: localSiteName,\n                    groups: groups\n                });\n\n                view.$el.appendTo(this._$listsContainer);\n                view.render();\n\n                this._groupViews.push(view);\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * Handler for when the search box changes.\n     *\n     * This will instruct the SiteGroupsViews to filter their contents\n     * by the text entered into the search box.\n     */\n    _onGroupSearchChanged() {\n        const text = this._$search.val();\n\n        if (text !== this._searchText) {\n            this._searchText = text;\n            this._groupViews.forEach(view => view.filterBy(this._searchText));\n        }\n    },\n\n    /**\n     * Prevent form submission.\n     *\n     * This form live updates based on the content of the <input> field and\n     * submitting it will result in a CSRF error.\n     *\n     * Args:\n     *     e (Event):\n     *         The form submission event.\n     */\n    _onSubmit(e) {\n        e.preventDefault();\n    }\n});\n\n\n})();\n"],"mappings":"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"}