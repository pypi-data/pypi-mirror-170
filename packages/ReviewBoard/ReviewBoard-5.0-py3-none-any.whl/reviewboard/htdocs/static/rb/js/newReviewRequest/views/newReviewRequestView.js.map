{"version":3,"file":"newReviewRequestView.js","names":["FilesOnlyPreCommitModel","Backbone","Model","extend","defaults","_","repository","FilesOnlyPreCommitView","View","className","template","events","render","$el","html","description","buttonText","_onCreateClicked","ev","preventDefault","stopPropagation","model","get","reviewRequest","RB","ReviewRequest","localSitePrefix","save","_navigateTo","url","window","location","NewReviewRequestView","PageView","el","renderPage","$pageContent","hint","repositoriesLabel","_$newReviewRequestContainer","find","_$repoPane","_$repoDetailContainer","_$repoSelectorContainer","_$content","_$hint","_repositorySelectionView","RepositorySelectionView","collection","listenTo","set","_onRepositoryChanged","_preCommitView","hide","append","_postCommitView","repositories","models","length","trigger","onMobileModeChanged","inMobileMode","detach","appendTo","$mainSidebar","removeClass","delay","_removeCommitViews","bind","addClass","PreCommitView","UploadDiffModel","PostCommitView","PostCommitModel","$scrollContainer","remove","_onShowRepositoriesClicked","unselect"],"sources":["../../../../../../static/rb/js/newReviewRequest/views/newReviewRequestView.es6.js"],"sourcesContent":["(function() {\n\n\n/**\n * A simple model for creating file-attachment only review requests.\n *\n * Model Attributes:\n *     repository (RB.Repository):\n *         The associated repository (always ``null``).\n */\nconst FilesOnlyPreCommitModel = Backbone.Model.extend({\n    defaults: _.defaults({\n        repository: null,\n    }),\n});\n\n\n/**\n * A simple view for creating file-attachment only review requests.\n */\nconst FilesOnlyPreCommitView = Backbone.View.extend({\n    className: 'files-only',\n\n    template: _.template(dedent`\n        <p><%- description %></p>\n        <input type=\"submit\" class=\"primary large\" id=\"files-only-create\"\n               value=\"<%- buttonText %>\" />\n    `),\n\n    events: {\n        'click #files-only-create': '_onCreateClicked',\n    },\n\n    /**\n     * Render the view.\n     *\n     * Returns:\n     *     FilesOnlyPreCommitView:\n     *     This object, for chaining.\n     */\n    render() {\n        this.$el.html(this.template({\n            description: gettext('You won\\'t be able to add any diffs to this review request. The review request will only be usable for reviewing graphics, screenshots and file attachments.'),\n            buttonText: gettext('Create Review Request'),\n        }));\n\n        return this;\n    },\n\n    /**\n     * Callback for when the \"Create Review Request\" button is clicked.\n     *\n     * Creates a review request with the given localSitePrefix and nothing else,\n     * and redirects the browser to it.\n     *\n     * Args:\n     *     ev (Event):\n     *         The click event.\n     */\n    async _onCreateClicked(ev) {\n        ev.preventDefault();\n        ev.stopPropagation();\n\n        const repository = this.model.get('repository');\n        const reviewRequest = new RB.ReviewRequest({\n            localSitePrefix: repository.get('localSitePrefix')\n        });\n\n        // TODO: handle errors\n        await reviewRequest.save();\n        this._navigateTo(reviewRequest.get('reviewURL'));\n    },\n\n    /**\n     * Navigate to the given URL.\n     *\n     * Args:\n     *     url (string):\n     *         The URL to open.\n     */\n    _navigateTo(url) {\n        window.location = url;\n    },\n});\n\n\n/**\n * The view for creating new review requests.\n *\n * This orchestrates several other objects to guide users through creating file\n * attachment only, pre-commit, or post-commit review requests.\n */\nRB.NewReviewRequestView = RB.PageView.extend({\n    el: '#new-review-request',\n\n    template: _.template(dedent`\n        <div class=\"rb-c-new-review-request\">\n         <div class=\"rb-c-sidebar -no-icons\"></div>\n         <div class=\"rb-c-new-review-request__repo-pane\">\n          <a href=\"#\" class=\"rb-c-new-review-request__show-repositories\">\n           <span class=\"fa fa-chevron-left\"></span>\n           <%- repositoriesLabel %>\n          </a>\n          <div class=\"rb-c-new-review-request__repo-detail\">\n           <div class=\"rb-c-new-review-request__main\">\n            <div class=\"rb-c-new-review-request__hint\"><%- hint %></div>\n           </div>\n          </div>\n         </div>\n        </div>\n    `),\n\n    events: {\n        'click .rb-c-new-review-request__show-repositories':\n            '_onShowRepositoriesClicked',\n    },\n\n    /**\n     * Render the page.\n     */\n    renderPage() {\n        /* Build the main UI for the page. */\n        this.$pageContent.html(this.template({\n            hint: gettext('Select a repository'),\n            repositoriesLabel: gettext('Repositories'),\n        }));\n\n        this._$newReviewRequestContainer = this.$pageContent.find(\n            '.rb-c-new-review-request');\n        this._$repoPane = this.$pageContent.find(\n            '.rb-c-new-review-request__repo-pane');\n        this._$repoDetailContainer = this._$repoPane.find(\n            '.rb-c-new-review-request__repo-detail');\n        this._$repoSelectorContainer = this._$newReviewRequestContainer.find(\n            '.rb-c-sidebar');\n        this._$content = this._$repoDetailContainer.find(\n            '.rb-c-new-review-request__main');\n        this._$hint = this._$repoDetailContainer.find(\n            '.rb-c-new-review-request__hint');\n\n        /*\n         * Add the repository selector. This will live either in the page's\n         * sidebar (in desktop mode) or in the page's container (in mobile\n         * mode).\n         */\n        this._repositorySelectionView = new RB.RepositorySelectionView({\n            collection: this.model.get('repositories'),\n        });\n        this._repositorySelectionView.render();\n\n        this.listenTo(this._repositorySelectionView,\n                      'selected',\n                      repository => this.model.set('repository', repository));\n        this.listenTo(this.model, 'change:repository',\n                      this._onRepositoryChanged);\n\n        if (this._preCommitView) {\n            this._$hint.hide();\n            this._$content.append(this._preCommitView.render().el);\n        }\n        if (this._postCommitView) {\n            this._$hint.hide();\n            this._$content.append(this._postCommitView.render().el);\n        }\n\n        /*\n         * If the only two options are the \"None - File attachments only\"\n         * pseudo-repository and one real one, pre-select the real one to speed\n         * up the 80% case. Otherwise, we'll leave it at the \"Select a\n         * repository\" screen.\n         */\n        const repositories = this.model.get('repositories').models;\n\n        if (repositories.length === 2) {\n            repositories[1].trigger('selected', repositories[1]);\n        }\n\n        return this;\n    },\n\n    /**\n     * Handle mobile mode changes.\n     *\n     * This will update the parent of the repository selector. In desktop\n     * mode, it will be placed in the sidebar. In mobile mode, it will be\n     * placed in a container in this view, with its display managed by CSS.\n     *\n     * Args:\n     *     inMobileMode (bool):\n     *         Whether the UI is now in mobile mode.\n     */\n    onMobileModeChanged(inMobileMode) {\n        this._repositorySelectionView.$el\n            .detach()\n            .appendTo(inMobileMode\n                      ? this._$repoSelectorContainer\n                      : this.$mainSidebar);\n    },\n\n    /**\n     * Callback for when the current repository has changed.\n     *\n     * If the \"Files Only\" entry is selected, this shows the special\n     * FilesOnlyPreCommitView in the right-hand pane.\n     *\n     * If a repository that supports fetching committed revisions is selected,\n     * this will show both the pre-commit and post-commit UIs stacked\n     * vertically. If the repository only supports pre-commit, only the\n     * pre-commit UI is shown.\n     */\n    _onRepositoryChanged() {\n        const repository = this.model.get('repository');\n\n        if (repository === null) {\n            /*\n             * A repository is no longer selected. The user either chose\n             * the File Attachments Only entry or hit the \"< Repositories\"\n             * link on mobile.\n             *\n             * If on mobile, we're going to add a small delay (slightly longer\n             * than the animation time) before removing any views, so that\n             * they don't disappear during animation.\n             */\n            this._$newReviewRequestContainer\n                .removeClass('js-repository-selected');\n\n            if (this.inMobileMode) {\n                _.delay(this._removeCommitViews.bind(this), 400);\n            } else {\n                this._removeCommitViews();\n            }\n        } else {\n            /*\n             * The user has selected a repository. Begin placing new views\n             * based on the repository's capabilities.\n             */\n            this._$newReviewRequestContainer\n                .addClass('js-repository-selected');\n\n            this._removeCommitViews();\n\n            if (repository.get('filesOnly')) {\n                this._preCommitView = new FilesOnlyPreCommitView({\n                    model: new FilesOnlyPreCommitModel({\n                        repository: repository\n                    })\n                });\n            } else {\n                this._preCommitView = new RB.PreCommitView({\n                    model: new RB.UploadDiffModel({\n                        repository: repository\n                    })\n                });\n\n                if (repository.get('supportsPostCommit')) {\n                    this._postCommitView = new RB.PostCommitView({\n                        model: new RB.PostCommitModel({\n                            repository: repository\n                        }),\n                        $scrollContainer: this._$content,\n                    });\n                }\n            }\n\n            this._$hint.hide();\n            this._$content.append(this._preCommitView.render().el);\n\n            if (this._postCommitView) {\n                this._$content.append(this._postCommitView.render().el);\n            }\n        }\n    },\n\n    /**\n     * Remove the pre- and post-commit views.\n     *\n     * This will remove the views from the DOM and null them out, allowing\n     * them to be rebuilt.\n     */\n    _removeCommitViews() {\n        if (this._preCommitView) {\n            this._preCommitView.remove();\n            this._preCommitView = null;\n        }\n\n        if (this._postCommitView) {\n            this._postCommitView.remove();\n            this._postCommitView = null;\n        }\n    },\n\n    /**\n     * Handler for when the mobile-only Show Repositories link is clicked.\n     *\n     * Sets the page to slide back to the sidebar listing repositories.\n     */\n    _onShowRepositoriesClicked() {\n        this._repositorySelectionView.unselect();\n    },\n});\n\n\n})();\n"],"mappings":"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"}