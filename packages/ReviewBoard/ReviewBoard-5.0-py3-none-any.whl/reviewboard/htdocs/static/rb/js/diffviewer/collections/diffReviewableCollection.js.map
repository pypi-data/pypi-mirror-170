{"version":3,"file":"diffReviewableCollection.js","names":["RB","DiffReviewableCollection","Backbone","Collection","extend","model","DiffReviewable","initialize","models","options","reviewRequest","watchFiles","files","listenTo","_populateFromFiles","console","assert","reset","trigger","each","file","filediff","get","interfilediff","interdiffRevision","revision","add","baseFileDiffID","fileDiffID","id","interFileDiffID","serializedCommentBlocks"],"sources":["../../../../../../static/rb/js/diffviewer/collections/diffReviewableCollection.es6.js"],"sourcesContent":["/**\n * A collection of RB.DiffReviewable instances.\n *\n * This manages a collection of :js:class:`RB.DiffReviewable`s and can\n * populate itself based on changes to a collection of files.\n *\n * When repopulating, this will emit a ``populating`` event. After populating,\n * it will emit a ``populated`` event.\n */\nRB.DiffReviewableCollection = Backbone.Collection.extend({\n    model: RB.DiffReviewable,\n\n    /**\n     * Initialize the collection.\n     *\n     * Args:\n     *     models (Array):\n     *         Optional array of models.\n     *\n     *     options (object):\n     *         Options for the collection.\n     *\n     * Option Args:\n     *     reviewRequest (RB.ReviewRequest):\n     *         The review request for the collection. This must be provided.\n     */\n    initialize(models, options) {\n        this.reviewRequest = options.reviewRequest;\n    },\n\n    /**\n     * Watch for changes to a collection of files.\n     *\n     * When the files change (and when invoking this method), this collection\n     * will be rebuilt based on those files.\n     *\n     * Args:\n     *     files (RB.DiffFileCollection):\n     *         The collection of files to watch.\n     */\n    watchFiles(files) {\n        this.listenTo(files, 'reset', () => this._populateFromFiles(files));\n        this._populateFromFiles(files);\n    },\n\n    /**\n     * Populate this collection from a collection of files.\n     *\n     * This will clear this collection and then loop through each file,\n     * adding a corresponding :js:class:`RB.DiffReviewable`.\n     *\n     * After clearing, but prior to adding any entries, this will emit a\n     * ``populating`` event. After all reviewables have been added, this\n     * will emit a ``populated`` event.\n     *\n     * Args:\n     *     files (RB.DiffFileCollection):\n     *         The collection of files to populate from.\n     */\n    _populateFromFiles(files) {\n        const reviewRequest = this.reviewRequest;\n\n        console.assert(reviewRequest,\n                       'RB.DiffReviewableCollection.reviewRequest must be set');\n\n        this.reset();\n        this.trigger('populating');\n\n        files.each(file => {\n            const filediff = file.get('filediff');\n            const interfilediff = file.get('interfilediff');\n            let interdiffRevision = null;\n\n            if (interfilediff) {\n                interdiffRevision = interfilediff.revision;\n            } else if (file.get('forceInterdiff')) {\n                interdiffRevision = file.get('forceInterdiffRevision');\n            }\n\n            this.add({\n                baseFileDiffID: file.get('baseFileDiffID'),\n                reviewRequest: reviewRequest,\n                file: file,\n                fileDiffID: filediff.id,\n                interFileDiffID: interfilediff ? interfilediff.id : null,\n                revision: filediff.revision,\n                interdiffRevision: interdiffRevision,\n                serializedCommentBlocks: file.get('commentCounts'),\n            });\n        });\n\n        this.trigger('populated');\n    },\n});\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,EAAE,CAACC,wBAAH,GAA8BC,QAAQ,CAACC,UAAT,CAAoBC,MAApB,CAA2B;EACrDC,KAAK,EAAEL,EAAE,CAACM,cAD2C;;EAGrD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,UAAU,CAACC,MAAD,EAASC,OAAT,EAAkB;IACxB,KAAKC,aAAL,GAAqBD,OAAO,CAACC,aAA7B;EACH,CAnBoD;;EAqBrD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,UAAU,CAACC,KAAD,EAAQ;IACd,KAAKC,QAAL,CAAcD,KAAd,EAAqB,OAArB,EAA8B,MAAM,KAAKE,kBAAL,CAAwBF,KAAxB,CAApC;;IACA,KAAKE,kBAAL,CAAwBF,KAAxB;EACH,CAlCoD;;EAoCrD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIE,kBAAkB,CAACF,KAAD,EAAQ;IACtB,MAAMF,aAAa,GAAG,KAAKA,aAA3B;IAEAK,OAAO,CAACC,MAAR,CAAeN,aAAf,EACe,uDADf;IAGA,KAAKO,KAAL;IACA,KAAKC,OAAL,CAAa,YAAb;IAEAN,KAAK,CAACO,IAAN,CAAWC,IAAI,IAAI;MACf,MAAMC,QAAQ,GAAGD,IAAI,CAACE,GAAL,CAAS,UAAT,CAAjB;MACA,MAAMC,aAAa,GAAGH,IAAI,CAACE,GAAL,CAAS,eAAT,CAAtB;MACA,IAAIE,iBAAiB,GAAG,IAAxB;;MAEA,IAAID,aAAJ,EAAmB;QACfC,iBAAiB,GAAGD,aAAa,CAACE,QAAlC;MACH,CAFD,MAEO,IAAIL,IAAI,CAACE,GAAL,CAAS,gBAAT,CAAJ,EAAgC;QACnCE,iBAAiB,GAAGJ,IAAI,CAACE,GAAL,CAAS,wBAAT,CAApB;MACH;;MAED,KAAKI,GAAL,CAAS;QACLC,cAAc,EAAEP,IAAI,CAACE,GAAL,CAAS,gBAAT,CADX;QAELZ,aAAa,EAAEA,aAFV;QAGLU,IAAI,EAAEA,IAHD;QAILQ,UAAU,EAAEP,QAAQ,CAACQ,EAJhB;QAKLC,eAAe,EAAEP,aAAa,GAAGA,aAAa,CAACM,EAAjB,GAAsB,IAL/C;QAMLJ,QAAQ,EAAEJ,QAAQ,CAACI,QANd;QAOLD,iBAAiB,EAAEA,iBAPd;QAQLO,uBAAuB,EAAEX,IAAI,CAACE,GAAL,CAAS,eAAT;MARpB,CAAT;IAUH,CArBD;IAuBA,KAAKJ,OAAL,CAAa,WAAb;EACH;;AAnFoD,CAA3B,CAA9B"}