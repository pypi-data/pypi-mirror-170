{"version":3,"file":"dummyReviewableView.js","names":["RB","DummyReviewableView","FileAttachmentReviewableView","extend","commentBlockView","AbstractCommentBlockView","captionTableTemplate","_","template","captionItemTemplate","renderContent","$header","$","addClass","prependTo","$el","model","get","$revisionLabel","appendTo","_revisionLabelView","FileAttachmentRevisionLabelView","el","render","listenTo","_onRevisionSelected","$revisionSelector","_revisionSelectorView","FileAttachmentRevisionSelectorView","captionItems","push","caption","interpolate","revision","append","items","join","text","revisions","base","tip","revisionIDs","revisionTip","redirectURL","revisionBase","window","location","replace"],"sources":["../../../../../static/rb/js/views/dummyReviewableView.es6.js"],"sourcesContent":["/**\n * A Review UI for file types which otherwise do not have one.\n *\n * Normally, file types that do not have a Review UI are not linked to one.\n * However, in the case of a file attachment with multiple revisions, if one of\n * those revisions is a non-reviewable type, the user can still navigate to\n * that page. This Review UI is used as a placeholder in that case--it shows\n * the header (with revision selector) and a message saying that this file type\n * cannot be shown.\n */\nRB.DummyReviewableView = RB.FileAttachmentReviewableView.extend({\n    commentBlockView: RB.AbstractCommentBlockView,\n\n    captionTableTemplate: _.template(\n        '<table><tr><%= items %></tr></table>'\n    ),\n\n    captionItemTemplate: _.template(dedent`\n        <td>\n         <h1 class=\"caption\"><%- caption %></h1>\n        </td>\n    `),\n\n    /**\n     * Render the view.\n     */\n    renderContent() {\n        const $header = $('<div/>')\n            .addClass('review-ui-header')\n            .prependTo(this.$el);\n\n        if (this.model.get('numRevisions') > 1) {\n            const $revisionLabel = $('<div id=\"revision_label\"/>')\n                .appendTo($header);\n\n            this._revisionLabelView = new RB.FileAttachmentRevisionLabelView({\n                el: $revisionLabel,\n                model: this.model,\n            });\n            this._revisionLabelView.render();\n            this.listenTo(this._revisionLabelView, 'revisionSelected',\n                          this._onRevisionSelected);\n\n            const $revisionSelector = $('<div id=\"attachment_revision_selector\" />')\n                .appendTo($header);\n            this._revisionSelectorView = new RB.FileAttachmentRevisionSelectorView({\n                el: $revisionSelector,\n                model: this.model,\n            });\n            this._revisionSelectorView.render();\n            this.listenTo(this._revisionSelectorView, 'revisionSelected',\n                          this._onRevisionSelected);\n\n            const captionItems = [];\n\n            captionItems.push(this.captionItemTemplate({\n                caption: interpolate(\n                    gettext('%(caption)s (revision %(revision)s)'),\n                    {\n                        caption: this.model.get('caption'),\n                        revision: this.model.get('fileRevision'),\n                    },\n                    true)\n            }));\n\n            if (this.model.get('diffAgainstFileAttachmentID') !== null) {\n                captionItems.push(this.captionItemTemplate({\n                    caption: interpolate(\n                        gettext('%(caption)s (revision %(revision)s)'),\n                        {\n                            caption: this.model.get('diffCaption'),\n                            revision: this.model.get('diffRevision'),\n                        },\n                        true)\n                }));\n            }\n\n            $header.append(this.captionTableTemplate({\n                items: captionItems.join('')\n            }));\n        } else {\n            $('<h1 class=\"caption file-attachment-single-revision\">')\n                .text(this.model.get('caption'))\n                .appendTo($header);\n        }\n    },\n\n    /**\n     * Callback for when a new file revision is selected.\n     *\n     * This supports single revisions and diffs. If 'base' is 0, a\n     * single revision is selected, If not, the diff between `base` and\n     * `tip` will be shown.\n     *\n     * Args:\n     *     revisions (array of number):\n     *         An array with two elements, representing the range of revisions\n     *         to display.\n     */\n    _onRevisionSelected(revisions) {\n        const [base, tip] = revisions;\n\n        // Ignore clicks on No Diff Label.\n        if (tip === 0) {\n            return;\n        }\n\n        const revisionIDs = this.model.get('attachmentRevisionIDs');\n        const revisionTip = revisionIDs[tip - 1];\n\n        /*\n         * Eventually these hard redirects will use a router\n         * (see diffViewerPageView.js for example)\n         * this.router.navigate(base + '-' + tip + '/', {trigger: true});\n         */\n        let redirectURL;\n\n        if (base === 0) {\n            redirectURL = `../${revisionTip}/`;\n        } else {\n            const revisionBase = revisionIDs[base - 1];\n            redirectURL = `../${revisionBase}-${revisionTip}/`;\n        }\n\n        window.location.replace(redirectURL);\n    },\n});\n"],"mappings":"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"}