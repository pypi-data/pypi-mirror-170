{"version":3,"file":"changeListPageView.js","names":["ActionsDrawerView","RB","DrawerView","extend","template","_","initialize","options","actions","render","prototype","call","$content","html","$summary","$","Admin","ChangeListPageView","PageView","events","apply","arguments","drawerShown","renderPage","model","_$changelist","$pageContent","children","_$form","_$datagrid","_datagrid","data","setDrawer","get","modelNameLower","toLowerCase","modelNameLowerPlural","listenTo","count","drawer","text","showDrawer","_drawerShown","show","hide","onResize","resizeElementForFullHeight","resizeToFit","_onToggleAllCheckboxesChanged","e","$toggleCheckbox","target","find","prop","change","_onRowSelected","$checkbox","objectID","val","select","unselect"],"sources":["../../../../../../static/rb/js/admin/views/changeListPageView.es6.js"],"sourcesContent":["(function() {\n\n\n/**\n * A drawer containing actions that can be performed on selected objects.\n *\n * This displays any actions provided by the Django\n * :py:class:`~django.contrib.admin.ModelAdmin` class that can apply to\n * selected rows in the change list.\n */\nconst ActionsDrawerView = RB.DrawerView.extend({\n    template: _.template(dedent`\n        <p class=\"rb-c-drawer__summary\"></p>\n        <div class=\"rb-c-drawer__actions\">\n         <ul class=\"rb-c-drawer__action-group\">\n          <% _.each(actions, function(actionInfo) { %>\n           <li class=\"rb-c-drawer__action js-action-<%- actionInfo.id %>\">\n            <strong><%- actionInfo.label %></strong>\n           </li>\n          <% }) %>\n         </ul>\n        </div>\n    `),\n\n    /**\n     * Initialize the drawer.\n     *\n     * Args:\n     *     options (object):\n     *         Options for the drawer.\n     *\n     * Option Args:\n     *     actions (Array of object):\n     *         The actions to show in the drawer. Each is an object with the\n     *         following keys:\n     *\n     *         ``id`` (:js:class:`string`):\n     *             The action's identifier.\n     *\n     *         ``label`` (:js:class:`string`):\n     *             The human-readable label.\n     */\n    initialize(options) {\n        this.actions = options.actions;\n    },\n\n    /**\n     * Render the drawer.\n     *\n     * Returns:\n     *     ActionsDrawerView:\n     *     This instance, for chaining.\n     */\n    render() {\n        RB.DrawerView.prototype.render.call(this);\n\n        this.$content.html(this.template({\n            actions: this.actions,\n        }));\n\n        this.$summary = this.$('.rb-c-drawer__summary');\n\n        return this;\n    },\n});\n\n\n/**\n * The view for the Administration UI's Change List page.\n *\n * This manages the dynamic state of the Change List page, which is used for\n * showing all entries for a model.\n *\n * This includes a drawer for the actions that can be performed on selected\n * entries (defined in :py:class:`~django.contrib.admin.ModelAdmin`), and\n * managing the selection state in general.\n */\nRB.Admin.ChangeListPageView = RB.Admin.PageView.extend({\n    events: {\n        'change #action-toggle': '_onToggleAllCheckboxesChanged',\n        'change .action-select': '_onRowSelected',\n    },\n\n    /**\n     * Initialize the page view.\n     */\n    initialize() {\n        RB.Admin.PageView.prototype.initialize.apply(this, arguments);\n\n        this.drawerShown = false;\n    },\n\n    /**\n     * Render the page contents.\n     *\n     * This should be implemented by subclasses that need to render any\n     * UI elements.\n     */\n    renderPage() {\n        RB.Admin.PageView.prototype.renderPage.call(this);\n\n        const model = this.model;\n\n        this._$changelist = this.$pageContent.children(\n            '.rb-c-admin-change-list');\n        this._$form = this._$changelist.children(\n            '.rb-c-admin-change-list__form');\n        this._$datagrid = this._$form.children(\n            '.rb-c-admin-change-list__results');\n        this._datagrid = this._$datagrid.data('datagrid');\n\n        this.setDrawer(new ActionsDrawerView({\n            actions: model.get('actions'),\n        }));\n\n        const modelNameLower = model.get('modelName').toLowerCase();\n        const modelNameLowerPlural =\n            model.get('modelNamePlural').toLowerCase();\n\n        this.listenTo(model, 'change:selectionCount', (model, count) => {\n            this.drawer.$summary.text(\n                N_(`${count} ${modelNameLower} selected`,\n                   `${count} ${modelNameLowerPlural} selected`,\n                   count));\n\n            const showDrawer = (count > 0);\n\n            if (showDrawer !== this._drawerShown) {\n                if (showDrawer) {\n                    this.drawer.show();\n                } else {\n                    this.drawer.hide();\n                }\n\n                this._drawerShown = showDrawer;\n            }\n        });\n    },\n\n    /**\n     * Handle a page resize.\n     *\n     * This will lay out the elements to take the full height of the\n     * page.\n     */\n    onResize() {\n        this.resizeElementForFullHeight(this._$changelist);\n        this.resizeElementForFullHeight(this._$form);\n        this._datagrid.resizeToFit();\n    },\n\n    /**\n     * Handle a toggle on the checkbox in the datagrid header.\n     *\n     * This will toggle all rows' checkboxes to match the state of the\n     * one in the header.\n     *\n     * Args:\n     *     e (Event):\n     *         The change event.\n     */\n    _onToggleAllCheckboxesChanged(e) {\n        const $toggleCheckbox = $(e.target);\n\n        this._$datagrid.find('.action-select')\n            .prop('checked', $toggleCheckbox.prop('checked'))\n            .change();\n    },\n\n    /**\n     * Handle a toggle on a checkbox in a row.\n     *\n     * This will mark the row as selected or unselected, depending on the\n     * state of the checkbox.\n     *\n     * Args:\n     *     e (Event):\n     *         The change event.\n     */\n    _onRowSelected(e) {\n        const $checkbox = $(e.target);\n        const objectID = $checkbox.val();\n\n        if ($checkbox.prop('checked')) {\n            this.model.select(objectID);\n        } else {\n            this.model.unselect(objectID);\n        }\n    },\n});\n\n\n})();\n"],"mappings":"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"}