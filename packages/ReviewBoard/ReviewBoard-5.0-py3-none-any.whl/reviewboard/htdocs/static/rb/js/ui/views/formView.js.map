{"version":3,"file":"formView.js","names":["RB","FormView","Backbone","View","extend","events","initialize","_$subforms","_subformsByGroup","_formWidgetsInitialized","render","$","length","_setupSubforms","setupFormWidgets","$el","undefined","window","DateTimeShortcuts","find","remove","init","SelectFilter","each","i","el","parts","name","split","id","setSubformVisibility","options","console","assert","_","isObject","group","subformID","visible","subformIDs","hideOthers","$subform","isHidden","prop","disabled","hidden","configuredControllers","subformEl","controllerID","data","enablerID","$controller","$enabler","error","controllerGroup","$form","hasOwnProperty","val","on","enabled","is","setVisible","_onToggleFieldSetClicked","e","preventDefault","stopPropagation","$toggle","target","$fieldset","closest","hasClass","removeClass","text","addClass"],"sources":["../../../../../../static/rb/js/ui/views/formView.es6.js"],"sourcesContent":["/**\n * A view for managing state on a form.\n *\n * This provides some standard behavior for setting up form widgets and\n * handling collapsable fieldsets, along with managing subforms.\n */\nRB.FormView = Backbone.View.extend({\n    events: {\n        'click .rb-c-form-fieldset__toggle': '_onToggleFieldSetClicked',\n    },\n\n    /**\n     * Initialize the view.\n     */\n    initialize() {\n        this._$subforms = null;\n        this._subformsByGroup = {};\n        this._formWidgetsInitialized = false;\n    },\n\n    /**\n     * Render the view.\n     *\n     * This will set up any subforms that might be available within the form.\n     *\n     * Returns:\n     *     RB.FormView:\n     *     This object, for chaining.\n     */\n    render() {\n        this._$subforms = this.$('.rb-c-form-fieldset.-is-subform');\n\n        if (this._$subforms.length > 0) {\n            this._setupSubforms();\n        }\n\n        this.setupFormWidgets();\n\n        return this;\n    },\n\n    /**\n     * Set up state for widgets on the form.\n     *\n     * This will ensure that widgets are set up correctly on the form, or on\n     * a part of the form. This will take care to re-initialize widgets if\n     * they've already been initialized before (useful when dynamically adding\n     * new sections of a form).\n     *\n     * This supports only a few known types of widgets (Django date/time\n     * widgets and related object selectors).\n     *\n     * Args:\n     *     $el (jQuery, optional):\n     *         A starting point for finding the widgets. If not provided, all\n     *         widgets in the form will be set up.\n     */\n    setupFormWidgets($el) {\n        if ($el === undefined) {\n            $el = this.$el;\n        }\n\n        /*\n         * Update some state for Django widgets. We've quite possibly made use\n         * of widgets in the form that need to be initialized, and Django\n         * doesn't have much fine-grained support for doing this, so we need\n         * to take a heavy-handed approach.\n         *\n         * Django (up through 3.0 at least) performs similar logic.\n         */\n        if (window.DateTimeShortcuts &&\n            $el.find('.datetimeshortcuts').length > 0) {\n            if (this._formWidgetsInitialized) {\n                /*\n                 * Yep, we have to remove *all* of these... DateTimeShortcuts\n                 * has no granular widget support.\n                 */\n                $('.datetimeshortcuts').remove();\n            }\n\n            DateTimeShortcuts.init();\n        }\n\n        if (window.SelectFilter) {\n            $el.find('.selectfilter').each((i, el) => {\n                const parts = el.name.split('-');\n                SelectFilter.init(el.id, parts[parts.length - 1], false);\n            });\n\n            $el.find('.selectfilterstacked').each((i, el) => {\n                const parts = el.name.split('-');\n                SelectFilter.init(el.id, parts[parts.length - 1], true);\n            });\n        }\n\n        this._formWidgetsInitialized = true;\n    },\n\n    /**\n     * Set the visibility of one or more subforms.\n     *\n     * This will toggle visibility of a single subform, hide all subforms,\n     * or hide all subforms except one.\n     *\n     * Args:\n     *     options (object):\n     *         Options to control visibility.\n     *\n     * Option Args:\n     *     group (string):\n     *         The registered group for the subforms.\n     *\n     *     hideOthers (boolean):\n     *         Whether to hide any subforms other than the one specified by\n     *         ``subformID``.\n     *\n     *     subformID (string):\n     *         A single subform to set the visibility state for. If not\n     *         provided, this will toggle visibility of all subforms in the\n     *         group.\n     *\n     *     visible (boolean):\n     *         Whether to make the selected subform visible. This is only used\n     *         if ``hideOthers`` is not provided.\n     */\n    setSubformVisibility(options) {\n        console.assert(_.isObject(options),\n                       'An options object must be provided.');\n\n        const group = options.group;\n        const subformID = options.subformID;\n        const visible = options.visible;\n\n        console.assert(group, 'Missing option \"group\"');\n\n        const subformIDs = this._subformsByGroup[group];\n        console.assert(subformIDs, `Invalid subform group ${group}`);\n\n        if (options.hideOthers || !subformID) {\n            _.each(subformIDs, ($subform, id) => {\n                const isHidden = (subformID === undefined\n                                  ? !visible\n                                  : (id !== subformID));\n\n                $subform.prop({\n                    disabled: isHidden,\n                    hidden: isHidden,\n                });\n            });\n        } else {\n            console.assert(visible !== undefined, 'Missing option \"visible\"');\n\n            const $subform = subformIDs[subformID];\n            console.assert($subform, `Invalid subform ID ${subformID}`);\n\n            $subform.prop({\n                disabled: !visible,\n                hidden: !visible,\n            });\n        }\n    },\n\n    /**\n     * Set up state and event handlers for subforms.\n     *\n     * This will begin tracking all the subforms on the page, and connect\n     * subform visibility to any associated controllers.\n     */\n    _setupSubforms() {\n        const configuredControllers = {};\n\n        this._$subforms.each((i, subformEl) => {\n            const $subform = $(subformEl);\n            const controllerID = $subform.data('subform-controller');\n            const subformID = $subform.data('subform-id');\n            const enablerID = $subform.data('subform-enabler');\n            let group = $subform.data('subform-group');\n            let $controller;\n            let $enabler;\n\n            if (!subformID) {\n                console.error('Subform %o is missing data-subform-id=',\n                              subformEl);\n                return;\n            }\n\n            if (!group && !controllerID && !enablerID) {\n                console.error(\n                    'Subform %o is missing data-subform-group=, ' +\n                    'data-subform-controller=, or data-subform-enable=',\n                    subformEl);\n                return;\n            }\n\n            /*\n             * If we have a controller ID provided, look it up and ensure\n             * we're using the right group.\n             */\n            if (controllerID) {\n                $controller = this.$(`#${controllerID}`);\n\n                console.assert($controller.length === 1,\n                               `Missing controller #${controllerID}`);\n\n                const controllerGroup =\n                    $controller.data('subform-group');\n\n                /*\n                 * If the subform specifies an explicit group, and it\n                 * specified a controller, make sure they match up. While\n                 * we could work around an issue here, we'd rather make the\n                 * developer fix their code.\n                 */\n                if (group === undefined) {\n                    group = controllerGroup;\n                } else if (controllerGroup !== group) {\n                    console.error('Subform %o and controller %s have ' +\n                                  'different values for data-subform-group',\n                                  subformEl, controllerID);\n                    return;\n                }\n            } else if (enablerID) {\n                $enabler = this.$(`#${enablerID}`);\n                window.$form = this.$el;\n\n                console.assert($enabler.length === 1,\n                               `Missing enabler #${enablerID}`);\n            }\n\n            /* Register the subforms so that they can be looked up later. */\n            if (!this._subformsByGroup.hasOwnProperty(group)) {\n                this._subformsByGroup[group] = {};\n            }\n\n            this._subformsByGroup[group][subformID] = $subform;\n\n            /*\n             * If we have a controller associated, set the current subform's\n             * visibility based on that value, and listen for changes.\n             */\n            if ($controller) {\n                this.setSubformVisibility({\n                    group: group,\n                    subformID: subformID,\n                    visible: $controller.val() === subformID,\n                });\n\n                if (!configuredControllers[controllerID]) {\n                    configuredControllers[controllerID] = true;\n\n                    $controller.on('change', () => this.setSubformVisibility({\n                        group: group,\n                        subformID: $controller.val(),\n                        visible: true,\n                        hideOthers: true,\n                    }));\n                }\n            }\n\n            /*\n             * If there's an enabler, set the current subform's visibility\n             * based on the state of that element, and listen for changes.\n             */\n            if ($enabler) {\n                const enabled = $enabler.is(':checked');\n\n                $subform\n                    .setVisible(enabled)\n                    .prop('disabled', !enabled);\n\n                $enabler.on('change', () => {\n                    const enabled = $enabler.is(':checked');\n\n                    $subform\n                        .setVisible(enabled)\n                        .prop('disabled', !enabled);\n                });\n            }\n        });\n    },\n\n    /**\n     * Handle the showing or collapsing of a fieldset.\n     *\n     * This will set the appropriate state on the fieldset to show or hide\n     * the content.\n     *\n     * Args:\n     *     e (jQuery.Event):\n     *         The click event on the Show/Hide button.\n     */\n    _onToggleFieldSetClicked(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const $toggle = $(e.target);\n        const $fieldset = $toggle.closest('.rb-c-form-fieldset');\n\n        if ($fieldset.hasClass('-is-collapsed')) {\n            $fieldset.removeClass('-is-collapsed');\n            $toggle.text(gettext('(Hide)'));\n        } else {\n            $fieldset.addClass('-is-collapsed');\n            $toggle.text(gettext('(Show)'));\n        }\n    },\n});\n"],"mappings":"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"}