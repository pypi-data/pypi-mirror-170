{"version":3,"file":"fileAttachmentRevisionLabelView.js","names":["RB","FileAttachmentRevisionLabelView","Backbone","View","extend","events","template","_","_interdiffTemplate","_latestTemplate","_oldHeaderTemplate","_oldDetailTemplate","initialize","listenTo","model","render","revision","get","diffAgainstRevision","latestRevision","header","detail","$el","html","_onSelectLatest","ev","stopPropagation","preventDefault","trigger","_onSelectChanged"],"sources":["../../../../../static/rb/js/views/fileAttachmentRevisionLabelView.es6.js"],"sourcesContent":["/**\n * A view which explains the currently-shown revision of the file attachment.\n */\nRB.FileAttachmentRevisionLabelView = Backbone.View.extend({\n    events: {\n        'click .select-latest': '_onSelectLatest',\n        'click .select-changed': '_onSelectChanged',\n    },\n\n    /*\n     * Templates for various strings. We use _.template instead of interpolate\n     * to make sure that revision strings are HTML-escaped.\n     */\n    template: _.template(dedent`\n        <p><%- header %></p>\n        <% if (detail) { %><p><%= detail %></p><% } %>\n    `),\n    _interdiffTemplate: _.template(gettext('This file attachment has multiple revisions. Showing changes between revision <%- diffAgainstRevision %> and <%- revision %>.')),\n    _latestTemplate: _.template(gettext('This file attachment has multiple revisions. Showing revision <%- revision %> (latest).')),\n    _oldHeaderTemplate: _.template(gettext('This file attachment has multiple revisions. Showing revision <%- revision %>.')),\n    _oldDetailTemplate: _.template(\n        /* Translators: This string should be valid HTML (including any necessary escaping for entities). */\n        gettext('This is not the most recent revision of the file. The <a href=\"#\" class=\"select-latest\">latest version</a> is revision <%- latestRevision %>. <a href=\"#\" class=\"select-changed\">See what\\'s changed.</a>')),\n\n    /**\n     * Initialize the view.\n     */\n    initialize() {\n        this.listenTo(this.model, 'change', this.render);\n    },\n\n    /**\n     * Render the view.\n     *\n     * Returns:\n     *     RB.FileAttachmentRevisionLabelView:\n     *     This object, for chaining.\n     */\n    render() {\n        const revision = this.model.get('fileRevision');\n        const diffAgainstRevision = this.model.get('diffRevision');\n        const latestRevision = this.model.get('numRevisions');\n\n        let header = '';\n        let detail = null;\n\n        if (diffAgainstRevision) {\n            header = this._interdiffTemplate({\n                revision: revision,\n                diffAgainstRevision: diffAgainstRevision,\n            });\n        } else if (revision === latestRevision) {\n            header = this._latestTemplate({\n                revision: revision,\n            });\n        } else {\n            header = this._oldHeaderTemplate({\n                revision: revision,\n            });\n            detail = this._oldDetailTemplate({\n                revision: revision,\n                latestRevision: latestRevision,\n            });\n        }\n\n        this.$el.html(this.template({\n            header: header,\n            detail: detail,\n        }));\n\n        return this;\n    },\n\n    /**\n     * Callback when the \"latest diff\" link is clicked.\n     *\n     * This link is in the \"This is not the most recent revision\" explanation.\n     *\n     * Args:\n     *     ev (Event):\n     *         The event that triggered the action.\n     */\n    _onSelectLatest(ev) {\n        ev.stopPropagation();\n        ev.preventDefault();\n\n        this.trigger('revisionSelected', [0, this.model.get('numRevisions')]);\n    },\n\n    /**\n     * Callback for when \"See what's changed\" is clicked.\n     *\n     * This link is in the \"This is not the most recent revision\" explanation.\n     *\n     * Args:\n     *     ev (Event):\n     *         The event that triggered the action.\n     */\n    _onSelectChanged(ev) {\n        ev.stopPropagation();\n        ev.preventDefault();\n\n        this.trigger('revisionSelected',\n                     [this.model.get('fileRevision'),\n                      this.model.get('numRevisions')]);\n    },\n});\n"],"mappings":";;AAAA;AACA;AACA;AACAA,EAAE,CAACC,+BAAH,GAAqCC,QAAQ,CAACC,IAAT,CAAcC,MAAd,CAAqB;EACtDC,MAAM,EAAE;IACJ,wBAAwB,iBADpB;IAEJ,yBAAyB;EAFrB,CAD8C;;EAMtD;AACJ;AACA;AACA;EACIC,QAAQ,EAAEC,CAAC,CAACD,QAAF,CAAkB;AAChC,+CADc,CAV4C;EActDE,kBAAkB,EAAED,CAAC,CAACD,QAAF,0IAdkC;EAetDG,eAAe,EAAEF,CAAC,CAACD,QAAF,oGAfqC;EAgBtDI,kBAAkB,EAAEH,CAAC,CAACD,QAAF,2FAhBkC;EAiBtDK,kBAAkB,EAAEJ,CAAC,CAACD,QAAF;EAChB;EADgB,4NAjBkC;;EAqBtD;AACJ;AACA;EACIM,UAAU,GAAG;IACT,KAAKC,QAAL,CAAc,KAAKC,KAAnB,EAA0B,QAA1B,EAAoC,KAAKC,MAAzC;EACH,CA1BqD;;EA4BtD;AACJ;AACA;AACA;AACA;AACA;AACA;EACIA,MAAM,GAAG;IACL,MAAMC,QAAQ,GAAG,KAAKF,KAAL,CAAWG,GAAX,CAAe,cAAf,CAAjB;IACA,MAAMC,mBAAmB,GAAG,KAAKJ,KAAL,CAAWG,GAAX,CAAe,cAAf,CAA5B;IACA,MAAME,cAAc,GAAG,KAAKL,KAAL,CAAWG,GAAX,CAAe,cAAf,CAAvB;IAEA,IAAIG,MAAM,GAAG,EAAb;IACA,IAAIC,MAAM,GAAG,IAAb;;IAEA,IAAIH,mBAAJ,EAAyB;MACrBE,MAAM,GAAG,KAAKZ,kBAAL,CAAwB;QAC7BQ,QAAQ,EAAEA,QADmB;QAE7BE,mBAAmB,EAAEA;MAFQ,CAAxB,CAAT;IAIH,CALD,MAKO,IAAIF,QAAQ,KAAKG,cAAjB,EAAiC;MACpCC,MAAM,GAAG,KAAKX,eAAL,CAAqB;QAC1BO,QAAQ,EAAEA;MADgB,CAArB,CAAT;IAGH,CAJM,MAIA;MACHI,MAAM,GAAG,KAAKV,kBAAL,CAAwB;QAC7BM,QAAQ,EAAEA;MADmB,CAAxB,CAAT;MAGAK,MAAM,GAAG,KAAKV,kBAAL,CAAwB;QAC7BK,QAAQ,EAAEA,QADmB;QAE7BG,cAAc,EAAEA;MAFa,CAAxB,CAAT;IAIH;;IAED,KAAKG,GAAL,CAASC,IAAT,CAAc,KAAKjB,QAAL,CAAc;MACxBc,MAAM,EAAEA,MADgB;MAExBC,MAAM,EAAEA;IAFgB,CAAd,CAAd;IAKA,OAAO,IAAP;EACH,CApEqD;;EAsEtD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIG,eAAe,CAACC,EAAD,EAAK;IAChBA,EAAE,CAACC,eAAH;IACAD,EAAE,CAACE,cAAH;IAEA,KAAKC,OAAL,CAAa,kBAAb,EAAiC,CAAC,CAAD,EAAI,KAAKd,KAAL,CAAWG,GAAX,CAAe,cAAf,CAAJ,CAAjC;EACH,CApFqD;;EAsFtD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIY,gBAAgB,CAACJ,EAAD,EAAK;IACjBA,EAAE,CAACC,eAAH;IACAD,EAAE,CAACE,cAAH;IAEA,KAAKC,OAAL,CAAa,kBAAb,EACa,CAAC,KAAKd,KAAL,CAAWG,GAAX,CAAe,cAAf,CAAD,EACC,KAAKH,KAAL,CAAWG,GAAX,CAAe,cAAf,CADD,CADb;EAGH;;AAtGqD,CAArB,CAArC"}