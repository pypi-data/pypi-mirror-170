{"version":3,"file":"diffViewerPageModel.js","names":["RB","DiffViewerPage","ReviewablePage","extend","defaults","_","canDownloadDiff","filenamePatterns","numDiffs","prototype","constructor","commentsHint","DiffCommentsHint","commits","DiffCommitCollection","commitHistoryDiff","CommitHistoryDiffEntryCollection","files","DiffFileCollection","pagination","Pagination","revision","DiffRevision","apply","arguments","initialize","diffReviewables","DiffReviewableCollection","reviewRequest","get","watchFiles","parse","rsp","_parseDiffContext","call","loadDiffRevision","options","reviewRequestURL","url","queryData","push","name","value","interdiffRevision","baseCommitID","tipCommitID","page","Djblets","buildURL","baseURL","$","ajax","done","set","diff_context","comments_hint","reset","commit_history_diff","interdiff_revision","filename_patterns","num_diffs"],"sources":["../../../../../../static/rb/js/pages/models/diffViewerPageModel.es6.js"],"sourcesContent":["/**\n * The model for the diff viewer page.\n *\n * This handles all attribute storage and diff context parsing needed to\n * display and update the diff viewer.\n *\n * Model Attributes:\n *     canDownloadDiff (boolean):\n *         Whether a diff file can be downloaded, given the current revision\n *         state.\n *\n *     filenamePatterns (Array):\n *         A list of filenames or patterns used to filter the diff viewer.\n *         This is optional.\n *\n *     numDiffs (number):\n *         The total number of diffs.\n */\nRB.DiffViewerPage = RB.ReviewablePage.extend({\n    defaults: _.defaults({\n        canDownloadDiff: false,\n        filenamePatterns: null,\n        numDiffs: 1,\n    }, RB.ReviewablePage.prototype.defaults),\n\n    /**\n     * Construct the page's instance.\n     *\n     * This defines child objects for managing state related to the page\n     * prior to parsing the provided attributes payload and initializing\n     * the instance.\n     *\n     * NOTE: this explicitly doesn't use the shorthand \"member function\" syntax\n     * because otherwise browsers get confused about whether this is a class\n     * constructor.\n     */\n    constructor: function constructor() {\n        this.commentsHint = new RB.DiffCommentsHint();\n        this.commits = new RB.DiffCommitCollection();\n        this.commitHistoryDiff = new RB.CommitHistoryDiffEntryCollection();\n        this.files = new RB.DiffFileCollection();\n        this.pagination = new RB.Pagination();\n        this.revision = new RB.DiffRevision();\n\n        RB.ReviewablePage.apply(this, arguments);\n    },\n\n    /**\n     * Initialize the page.\n     *\n     * This will begin listening for events on the page and set up default\n     * state.\n     */\n    initialize() {\n        RB.ReviewablePage.prototype.initialize.apply(this, arguments);\n\n        this.diffReviewables = new RB.DiffReviewableCollection([], {\n            reviewRequest: this.get('reviewRequest'),\n        });\n        this.diffReviewables.watchFiles(this.files);\n    },\n\n    /**\n     * Parse the data for the page.\n     *\n     * Args:\n     *     rsp (object):\n     *         The payload to parse.\n     *\n     * Returns:\n     *     object:\n     *     The returned attributes.\n     */\n    parse(rsp) {\n        return _.extend(this._parseDiffContext(rsp),\n                        RB.ReviewablePage.prototype.parse.call(this, rsp));\n    },\n\n    /**\n     * Load a new diff from the server.\n     *\n     * Args:\n     *     options (object):\n     *         The options for the diff to load.\n     *\n     * Option Args:\n     *     baseCommitID (number):\n     *         The primary key of the base commit to base the diff off of.\n     *\n     *     filenames (string):\n     *         A comma-separated string of filenames or filename patterns to\n     *         load.\n     *\n     *     page (number):\n     *         The page number to load. Defaults to the first page.\n     *\n     *     revision (number):\n     *         The base revision. If displaying an interdiff, this will be\n     *         the first revision in the range.\n     *\n     *     interdiffRevision (number):\n     *         The optional interdiff revision, representing the ending\n     *         revision in a range.\n     *\n     *     tipCommitID (number):\n     *         The primary key of the tip commit to base the diff off of.\n     */\n    loadDiffRevision(options={}) {\n        const reviewRequestURL = this.get('reviewRequest').url();\n        const queryData = [];\n\n        if (options.revision) {\n            queryData.push({\n                name: 'revision',\n                value: options.revision,\n            });\n        }\n\n        if (options.interdiffRevision) {\n            queryData.push({\n                name: 'interdiff-revision',\n                value: options.interdiffRevision,\n            });\n        } else {\n            if (options.baseCommitID) {\n                queryData.push({\n                    name: 'base-commit-id',\n                    value: options.baseCommitID,\n                });\n            }\n\n            if (options.tipCommitID) {\n                queryData.push({\n                    name: 'tip-commit-id',\n                    value: options.tipCommitID,\n                });\n            }\n        }\n\n        if (options.page && options.page !== 1) {\n            queryData.push({\n                name: 'page',\n                value: options.page,\n            });\n        }\n\n        if (options.filenamePatterns) {\n            queryData.push({\n                name: 'filenames',\n                value: options.filenamePatterns,\n            });\n        }\n\n        const url = Djblets.buildURL({\n            baseURL: `${reviewRequestURL}diff-context/`,\n            queryData: queryData,\n        });\n\n        $.ajax(url)\n            .done(rsp => this.set(this._parseDiffContext(rsp.diff_context)));\n    },\n\n    /**\n     * Parse context for a displayed diff.\n     *\n     * Args:\n     *     rsp (object):\n     *         The payload to parse.\n     *\n     * Returns:\n     *     object:\n     *     The returned attributes.\n     */\n    _parseDiffContext(rsp) {\n        if (rsp.comments_hint) {\n            this.commentsHint.set(this.commentsHint.parse(rsp.comments_hint));\n        }\n\n        if (rsp.files) {\n            this.files.reset(rsp.files, {parse: true});\n        }\n\n        if (rsp.pagination) {\n            this.pagination.set(this.pagination.parse(rsp.pagination));\n        }\n\n        if (rsp.revision) {\n            this.revision.set(this.revision.parse(rsp.revision));\n        }\n\n        this.commitHistoryDiff.reset(rsp.commit_history_diff || [],\n                                     {parse: true});\n\n        if (rsp.commits) {\n            /*\n             * The RB.DiffCommitListView listens for the reset event on the\n             * commits collection to trigger a render, so it must be updated\n             * **after** the commit history is updated.\n             */\n            this.commits.reset(rsp.commits, {parse: true});\n        }\n\n        return {\n            canDownloadDiff: (rsp.revision &&\n                              rsp.revision.interdiff_revision === null),\n            filenamePatterns: rsp.filename_patterns || null,\n            numDiffs: rsp.num_diffs || 0,\n        };\n    },\n});\n"],"mappings":"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"}