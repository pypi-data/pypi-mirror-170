{"version":3,"file":"abstractReviewableView.js","names":["RB","AbstractReviewableView","Backbone","View","extend","commentBlockView","commentsListName","initialize","options","console","assert","commentDlg","_activeCommentBlock","renderedInline","render","renderContent","model","commentBlocks","each","_addCommentBlockView","on","createAndEditCommentBlock","get","confirm","defaultCommentBlockFields","_","result","length","reviewableIDField","log","once","showCommentDlg","pick","attributes","createCommentBlock","commentBlock","ensureDraftComment","stopListening","CommentDialogView","create","comment","publishedComments","publishedCommentsType","position","dlg","positionCommentDlg","listenTo","trigger"],"sources":["../../../../../static/rb/js/views/abstractReviewableView.es6.js"],"sourcesContent":["/**\n * Abstract base for review UIs.\n *\n * This provides all the basics for creating a review UI. It does the\n * work of loading in comments, creating views, and displaying comment dialogs,\n */\nRB.AbstractReviewableView = Backbone.View.extend({\n    /**\n     * The AbstractCommentBlockView subclass.\n     *\n     * This is the type that will be instantiated for rendering comment blocks.\n     */\n    commentBlockView: null,\n\n    /**\n     * The list type (as a string) for passing to CommentDlg.\n     */\n    commentsListName: null,\n\n    /**\n     * Initialize AbstractReviewableView.\n     *\n     * Args:\n     *     options (object, optional):\n     *         Options for the view.\n     */\n    initialize(options={}) {\n        console.assert(this.commentBlockView,\n                       'commentBlockView must be defined by the subclass');\n        console.assert(this.commentsListName,\n                       'commentsListName must be defined by the subclass');\n\n        this.commentDlg = null;\n        this._activeCommentBlock = null;\n        this.renderedInline = options.renderedInline || false;\n    },\n\n    /**\n     * Render the reviewable to the page.\n     *\n     * This will call the subclass's renderContent(), and then handle\n     * rendering each comment block on the reviewable.\n     *\n     * Returns:\n     *     RB.AbstractReviewableView:\n     *     This object, for chaining.\n     */\n    render() {\n        this.renderContent();\n\n        this.model.commentBlocks.each(this._addCommentBlockView, this);\n        this.model.commentBlocks.on('add', this._addCommentBlockView, this);\n\n        return this;\n    },\n\n    /**\n     * Render the content of the reviewable.\n     *\n     * This should be overridden by subclasses.\n     */\n    renderContent() {\n    },\n\n    /**\n     * Create a new comment in a comment block and opens it for editing.\n     *\n     * Args:\n     *     options (object):\n     *         Options for the comment block creation.\n     */\n    createAndEditCommentBlock(options) {\n        if (this.commentDlg !== null &&\n            this.commentDlg.model.get('dirty') &&\n            !confirm(gettext('You are currently editing another comment. Would you like to discard it and create a new one?'))) {\n            return;\n        }\n\n        let defaultCommentBlockFields =\n            _.result(this.model, 'defaultCommentBlockFields');\n\n        if (defaultCommentBlockFields.length === 0 &&\n            this.model.reviewableIDField) {\n            console.log('Deprecation notice: Reviewable subclass is missing ' +\n                        'defaultCommentBlockFields. Rename reviewableIDField ' +\n                        'to defaultCommentBlockFields, and make it a list.');\n            defaultCommentBlockFields = [this.model.reviewableIDField];\n        }\n\n        /* As soon as we add the comment block, show the dialog. */\n        this.once('commentBlockViewAdded',\n                  commentBlockView => this.showCommentDlg(commentBlockView));\n\n        _.extend(options,\n                 _.pick(this.model.attributes, defaultCommentBlockFields));\n        this.model.createCommentBlock(options);\n    },\n\n    /**\n     * Show the comment details dialog for a comment block.\n     *\n     * Args:\n     *     commentBlockView (RB.AbstractCommentBlockView):\n     *         The comment block to show the dialog for.\n     */\n    showCommentDlg(commentBlockView) {\n        const commentBlock = commentBlockView.model;\n\n        commentBlock.ensureDraftComment();\n\n        if (this._activeCommentBlock === commentBlock) {\n            return;\n        }\n\n        this.stopListening(this.commentDlg, 'closed');\n        this.commentDlg = RB.CommentDialogView.create({\n            comment: commentBlock.get('draftComment'),\n            publishedComments: commentBlock.get('serializedComments'),\n            publishedCommentsType: this.commentsListName,\n            position: dlg => commentBlockView.positionCommentDlg(dlg),\n        });\n        this._activeCommentBlock = commentBlock;\n\n        this.listenTo(this.commentDlg, 'closed', () => {\n            this.commentDlg = null;\n            this._activeCommentBlock = null;\n        });\n    },\n\n    /**\n     * Add a CommentBlockView for the given CommentBlock.\n     *\n     * This will create a view for the block, render it, listen for clicks\n     * in order to show the comment dialog, and then emit\n     * 'commentBlockViewAdded'.\n     *\n     * Args:\n     *     commentBlock (RB.AbstractCommentBlock):\n     *         The comment block to add a view for.\n     */\n    _addCommentBlockView(commentBlock) {\n        const commentBlockView = new this.commentBlockView({\n            model: commentBlock\n        });\n\n        commentBlockView.on('clicked', () => this.showCommentDlg(commentBlockView));\n        commentBlockView.render();\n        this.trigger('commentBlockViewAdded', commentBlockView);\n    },\n});\n"],"mappings":"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"}