{"version":3,"file":"relatedUserSelectorViewTests.js","names":["suite","describe","it","view","RB","RelatedUserSelectorView","$input","$","initialOptions","useAvatars","multivalued","expect","options","toBe","render","$el","find","length","username","fullname","id","avatarHTML","siblings","val","_selectedIDs","size","beforeEach","done","$testsScratch","append","spyOn","and","callFake","query","callback","selectize","focus","setTimeout","click","loadOptions","toHaveBeenCalled"],"sources":["../../../../../../static/rb/js/admin/tests/relatedUserSelectorViewTests.es6.js"],"sourcesContent":["suite('rb/admin/views/relatedUserSelectorView', function() {\n    describe('Rendering', function() {\n        it('when empty', function() {\n            let view = new RB.RelatedUserSelectorView({\n                $input: $('<input id=\"id_people\" type=\"hidden\">'),\n                initialOptions: [],\n                useAvatars: true,\n                multivalued: true\n            });\n            expect(view.options.useAvatars).toBe(true);\n            expect(view.options.multivalued).toBe(true);\n            view.render();\n\n            expect(view.$el.find('.related-object-selected li').length)\n                .toBe(0);\n        });\n    });\n\n    describe('Rendering', function() {\n        it('with inital options', function() {\n            let view = new RB.RelatedUserSelectorView({\n                $input: $('<input id=\"id_people\" type=\"hidden\">'),\n                initialOptions: [{\n                    username: 'admin',\n                    fullname: 'Admin User',\n                    id: 1,\n                    avatarHTML: {\n                        '20': '<div class=\"avatar\" alt=\"Admin User\"></div>',\n                    },\n                }, {\n                    username: 'doc',\n                    fullname: \"Doc Dwarf\",\n                    id: 2,\n                    avatarHTML: {\n                        '20': '<div class=\"avatar\" alt=\"Doc Dwarf\"></div>',\n                    },\n                }, {\n                    username: 'dopey',\n                    fullname: 'Dopey Dwarf',\n                    id: 3,\n                    avatarHTML: {\n                        '20': '<div class=\"avatar\" alt=\"Dopey Dwarf\"></div>',\n                    },\n                }],\n                useAvatars: true,\n                multivalued: true,\n            });\n            view.render();\n            expect(view.options.useAvatars).toBe(true);\n            expect(view.options.multivalued).toBe(true);\n\n            expect(view.$el.find('.related-object-selected li').length)\n                .toBe(3);\n            expect(view.$el.siblings('#id_people').val()).toBe('');\n            /* The input element value should be empty, since the widget will\n               not fill in the values from the objects if the objects are\n               passed through initialOptions. */\n            expect(view._selectedIDs.size).toBe(3);\n        });\n    });\n\n    describe('Select item', function() {\n        let view;\n\n        beforeEach(function(done) {\n            $testsScratch.append('<input id=\"id_people\" type=\"hidden\">');\n            view = new RB.RelatedUserSelectorView({\n                $input: $('#id_people'),\n                initialOptions: [],\n                useAvatars: true,\n                multivalued: true\n            });\n            view.render();\n\n            /* These are the fake users, that will be displayed in the\n               dropdown */\n            spyOn(view, 'loadOptions').and.callFake(function(query, callback) {\n                callback([{\n                    avatarHTML: {\n                        '20': '<div class=\"avatar\" alt=\"Admin User\"></div>',\n                    },\n                    fullname: 'Admin User',\n                    id: 1,\n                    username: 'admin',\n                }, {\n                    avatarHTML: {\n                        '20': '<div class=\"avatar\" alt=\"Doc Dwarf\"></div>',\n                    },\n                    fullname: 'Doc Dwarf',\n                    id: 2,\n                    username: 'doc',\n                }]);\n            });\n\n            $('select')[0].selectize.focus();\n            /* The focus() method is being called asynchronously, so it\n              doesn't actually call the loadOptions() method here\n              instantly. That's why I use setTimeout to wait for it to\n              finish. */\n            setTimeout(function() {\n                $testsScratch.find('div .selectize-input.items.not-full input').click();\n                done();\n            }, 4000);\n            /* I probably shouldn't be doing this, but I\n            don't know how else to get it to work. */\n        });\n\n        it('from dropdown', function(done) {\n            expect(view.loadOptions).toHaveBeenCalled();\n            $(\"div[data-value='admin']\").click();\n            $(\"div[data-value='doc']\").click();\n            expect(view.$el.siblings('#id_people').val()).toBe('1,2');\n            done();\n        });\n    });\n\n\n});"],"mappings":"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"}