{"version":3,"file":"trelloFieldView.js","names":["TrelloInlineEditorView","RB","InlineEditorView","extend","initialize","options","_","defaults","hasRawValue","formatResult","value","name","htmlEncode","getFieldValue","editor","selectize","$field","selected","getValue","JSON","stringify","map","key","isFieldDirty","initialValue","setFieldValue","prototype","call","createField","$","setupEvents","on","_scheduleUpdateDirtyState","bind","showEditor","focusOnOpen","focus","ReviewRequestFields","TrelloFieldView","TextFieldView","autocomplete","multiline","useEditIconOnly","cardTemplate","template","_formatField","cards","parse","model","getDraftField","jsonFieldName","fieldID","useExtraData","_renderValue","items","card","tagName","$el","html","join","_getInlineEditorClass","_buildAutoComplete","reviewRequest","get","localSite","reviewRequestId","url","SITE_ROOT","inlineEditorView","data","copyClassesToDropdown","dropdownParent","multiple","labelField","valueField","searchField","pluck","render","option","escape","load","query","callback","params","param","q","ajax","type","error","success","res"],"sources":["../../../../../../rbintegrations/static/js/trello/trelloFieldView.es6.js"],"sourcesContent":["(function() {\n\n\n/**\n * An inline editor view for selecting Trello cards.\n */\nconst TrelloInlineEditorView = RB.InlineEditorView.extend({\n    /**\n     * Initialize the view.\n     *\n     * Args:\n     *     options (object):\n     *         Options for the view.\n     */\n    initialize(options) {\n        options = _.defaults(options, {\n            hasRawValue: true,\n            formatResult: value => {\n                if (value && value.name) {\n                    return value.name.htmlEncode();\n                } else {\n                    return '';\n                }\n            },\n            getFieldValue: editor => {\n                const selectize = this.$field[0].selectize;\n                const selected = selectize.getValue();\n\n                return JSON.stringify(\n                    selected.map(key => selectize.options[key]));\n            },\n            isFieldDirty: (editor, initialValue) => {\n                const value = editor.getValue();\n                return (initialValue !== value);\n            },\n            setFieldValue: (editor, value) => {\n                // This is a no-op, since we do this in the $.selectize call.\n            },\n        });\n\n        RB.InlineEditorView.prototype.initialize.call(this, options);\n    },\n\n    /**\n     * Create and return the field to use for the input element.\n     *\n     * Returns:\n     *     jQuery:\n     *     The newly created input element.\n     */\n    createField() {\n        return $('<select multiple class=\"trello-field\">');\n    },\n\n    /**\n     * Connect events.\n     */\n    setupEvents() {\n        RB.InlineEditorView.prototype.setupEvents.call(this);\n\n        this.$field.on('change', this._scheduleUpdateDirtyState.bind(this));\n    },\n\n    /**\n     * Show the editor.\n     *\n     * Args:\n     *     options (object, optional):\n     *         Options for showing the editor.\n     */\n    showEditor(options={}) {\n        RB.InlineEditorView.prototype.showEditor.call(this, options);\n\n        if (this.options.focusOnOpen) {\n            this.$field[0].selectize.focus();\n        }\n    },\n});\n\n\n/**\n * A review request field view for selecting Trello cards.\n */\nRB.ReviewRequestFields.TrelloFieldView =\n    RB.ReviewRequestFields.TextFieldView.extend({\n    autocomplete: {},\n    multiline: true,\n    useEditIconOnly: true,\n\n    cardTemplate: _.template(dedent`\n        <<%- tagName %> class=\"trello-card\">\n         <div class=\"trello-card-card\">\n          <a href=\"<%- url %>\"><%- name %></a>\n         </div>\n         <div class=\"trello-card-details\">\n          on <span class=\"trello-card-list\"><%- list %></span>\n          in <span class=\"trello-card-board\"><%- board %></span>\n         </div>\n        </<%- tagName %>>\n        `),\n\n    /**\n     * Format the contents of the field.\n     *\n     * This will apply the contents of the model attribute to the field\n     * element. If the field defines a ``formatValue`` method, this will use\n     * that to do the formatting. Otherwise, the element will just be set to\n     * contain the text of the value.\n     */\n    _formatField() {\n        const cards = JSON.parse(this.model.getDraftField(\n            this.jsonFieldName || this.fieldID, {\n                useExtraData: this.useExtraData,\n            }));\n        this._renderValue(cards);\n    },\n\n    /**\n     * Render the current value of the field.\n     *\n     * Args:\n     *     cards (Array of object):\n     *         The current set of cards to list.\n     */\n    _renderValue(cards) {\n        const items = cards.map(card => this.cardTemplate(_.defaults({\n            tagName: 'li',\n        }, card)));\n        this.$el.html(`<ul>${items.join('')}</ul>`);\n    },\n\n    /**\n     * Return the type to use for the inline editor view.\n     *\n     * Returns:\n     *     function:\n     *     The constructor for the inline editor class to instantiate.\n     */\n    _getInlineEditorClass() {\n        return TrelloInlineEditorView;\n    },\n\n    /**\n     * Add auto-complete functionality to the field.\n     */\n    _buildAutoComplete() {\n        const reviewRequest = this.model.get('reviewRequest');\n        const localSite = reviewRequest.get('localSitePrefix');\n        const reviewRequestId = reviewRequest.get('id');\n        const url = `${SITE_ROOT}rbintegrations/trello/${localSite}card-search/${reviewRequestId}/`;\n        const $field = this.inlineEditorView.$field;\n        const cards = this.$el.data('raw-value');\n\n        this._renderValue(cards || []);\n\n        $field.selectize({\n            copyClassesToDropdown: true,\n            dropdownParent: 'body',\n            multiple: true,\n            labelField: 'name',\n            valueField: 'id',\n            searchField: 'name',\n            options: cards,\n            items: _.pluck(cards, 'id'),\n            render: {\n                option: (data, escape) => this.cardTemplate(_.defaults({\n                    tagName: 'div',\n                }, data)),\n            },\n            load(query, callback) {\n                const params = $.param({ q: query });\n\n                $.ajax({\n                    url: `${url}?${params}`,\n                    type: 'GET',\n                    error: callback.bind(this),\n                    success: res => callback(res),\n                });\n            },\n        });\n    },\n});\n\n\n})();\n"],"mappings":"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"}