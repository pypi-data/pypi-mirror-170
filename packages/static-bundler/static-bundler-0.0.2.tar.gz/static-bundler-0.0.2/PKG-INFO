Metadata-Version: 2.1
Name: static-bundler
Version: 0.0.2
Summary: Bundles multiple css/js files into one and reduce request time
Home-page: 
Author: Saad Abdullah
Author-email: Saad Abdullah <saadfast.qc@gmail.com>
License: MIT License
        
        Copyright (c) 2022 Saad Abdullah
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
Project-URL: Homepage, https://github.com/saadqc/bundler.git
Project-URL: Bug Tracker, https://github.com/saadqc/bundler/issues
Keywords: bundler,bundles,minify,static
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.5
Description-Content-Type: text/markdown
License-File: LICENSE.rst


### JS/CSS Bundle 
Bundles multiple css or js files into one to reduce worker load for development server (flask) or webserver (nginx) connections

### Usage

```python
from flask import Flask
from static_bundle import register_extension

app = Flask(__name__, static_folder='static')

register_extension(app)
```

```html

{% bundler 'cache/vendor.css' %}
    <link rel="stylesheet" type="text/css"
          href="{{ file_path_for('static', filename = 'fontawesome-free-5.7.1-web/css/fontawesome.min.css') }}">
        
    <link rel="stylesheet" type="text/css"
          href="{{ file_path_for('static', filename = 'css/bootstrap_table_1.18.3/bootstrap-table.css') }}">
    <link rel="stylesheet" type="text/css"
          href="{{ file_path_for('static', filename = 'css/bootstrap_table_1.18.3/extensions/filter-control/bootstrap-table-filter-control.css') }}">
    <link rel="stylesheet" type="text/css" href="{{ file_path_for('static', filename = 'css/datetime_picker_css.css') }}">

{% endbundler %}

```

This will generate `cache/vendor.css` inside static folder and generate final output like below

```html
<link rel="stylesheet" type="text/css" href="/static/cache/vendor.css">
```

Please create github issue if you encounter any problem.

#### Checklist Items for future

- Add support for Django & FastAPI
- Add support to minify content
