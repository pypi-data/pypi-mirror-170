# -*- coding: utf-8 -*-
from setuptools import setup

packages = \
['pytse_client',
 'pytse_client.data',
 'pytse_client.examples',
 'pytse_client.financial_index',
 'pytse_client.proxy',
 'pytse_client.scraper',
 'pytse_client.scripts',
 'pytse_client.ticker',
 'pytse_client.ticker_statisticals',
 'pytse_client.utils']

package_data = \
{'': ['*']}

install_requires = \
['aiohttp>=3.7.4,<4.0.0',
 'beautifulsoup4>=4.9.3,<5.0.0',
 'black>=22.6.0,<23.0.0',
 'jdatetime>=3.6.2,<4.0.0',
 'lxml>=4.6.3,<5.0.0',
 'pandas',
 'requests>=2.23.0,<3.0.0',
 'tenacity>=7.0.0,<8.0.0']

setup_kwargs = {
    'name': 'pytse-client',
    'version': '0.14.0',
    'description': 'tehran stock exchange(TSE) client in python',
    'long_description': '<div dir="rtl"  markdown="1">\n\n# دریافت اطلاعات بازار بورس تهران\n\n[![Test](https://github.com/Glyphack/pytse-client/actions/workflows/unit_test.yml/badge.svg)](https://github.com/Glyphack/pytse-client/actions/workflows/unit_test.yml)\n[![Language grade: Python](https://img.shields.io/lgtm/grade/python/g/Glyphack/pytse-client.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/Glyphack/pytse-client/context:python)\n[![Discord Chat](https://img.shields.io/discord/730808323808559106?label=discord)](https://discord.gg/ampPDKHpVv)\n\nبا استفاده از pytse client میتونید به دیتای بازار بورس تهران در پایتون دسترسی داشته باشید.\nهدف حل مشکلات گرفتن اطلاعات بروز از سایت بازار بورس تهران هست.\n\n## میخواید مشارکت کنید؟\n\nلطفا [این صفحه](https://github.com/Glyphack/pytse-client/blob/master/CONTRIBUTING.md) رو مطالعه کنید\n\n- [دریافت اطلاعات بازار بورس تهران](#دریافت-اطلاعات-بازار-بورس-تهران)\n  - [میخواید مشارکت کنید؟](#میخواید-مشارکت-کنید)\n  - [قابلیت\u200cها](#قابلیتها)\n  - [نصب](#نصب)\n  - [نصب آخرین نسخه در حال توسعه](#نصب-آخرین-نسخه-در-حال-توسعه)\n  - [نحوه استفاده](#نحوه-استفاده)\n    - [دانلود سابقه سهم ها](#دانلود-سابقه-سهم-ها)\n    - [دانلود سابقه شاخص های مالی](#دانلود-سابقه-شاخص-های-مالی)\n    - [دانلود سابقه معاملات حقیقی و حقوقی به صورت مجزا](#دانلود-سابقه-معاملات-حقیقی-و-حقوقی-به-صورت-مجزا)\n    - [ماژول Ticker](#ماژول-ticker)\n        - [نکته ۱](#نکته-۱)\n        - [نکته ۲](#نکته-۲)\n      - [اطلاعات نماد\u200cهای حذف شده](#اطلاعات-نمادهای-حذف-شده)\n      - [اطلاعات حقیقی و حقوقی](#اطلاعات-حقیقی-و-حقوقی)\n      - [سهامداران عمده](#سهامداران-عمده)\n      - [تاریخچه\u200cی سهام\u200cداران عمده](#تاریخچهی-سهامداران-عمده)\n      - [تاریخچه\u200c تعداد سهام](#تاریخچه-تعداد-سهام)\n      - [شناور سهم](#شناور-سهم)\n      - [اطلاعات لحظه\u200cای سهام](#اطلاعات-لحظهای-سهام)\n      - [ریز معاملات سهام](#ریز-معاملات-سهام)\n    - [تمامی اطلاعات موجود برای فیلترنویسی](#تمامی-اطلاعات-موجود-برای-فیلترنویسی)\n    - [گرفتن تمام اطلاعات تاریخی یا لحظه\u200cای نماد به صورت CSV](#گرفتن-تمام-اطلاعات-تاریخی-یا-لحظهای-نماد-به-صورت-csv)\n  - [کامیونیتی](#کامیونیتی)\n  - [منابع آموزشی](#منابع-آموزشی)\n  - [الهام گرفته از:](#الهام-گرفته-از)\n\n## قابلیت\u200cها\n\n- دریافت اطلاعات تاریخی به صورت تعدیل\u200cشده و تعدیل نشده برای نمادها\n- دریافت اطلاعات لحظه نمادها\n- دریافت اطلاعات تاریخی شاخص\u200cهای مالی\n- قابلیت گرفتن اطلاعات یک سهم مانند گروه سهم و اطلاعات معاملات حقیقی و حقوقی\n- دریافت اطلاعات فاندامنتال یک نماد شامل (EPS ,P/E و حجم مبنا)\n- دریافت اطلاعات سهامداران عمده\n- دریافت آمارهای کلیدی مربوط به فیلترنویسی برای نمادها\n- دریافت ریزمعاملاتی آخرین روز معاملاتی نمادها\n\n## نصب\n\n<div dir="ltr">\n\n```bash\npip install pytse-client\n```\n\n</div>\n\n## نصب آخرین نسخه در حال توسعه\n\nاین نسخه\u200cی در حال توسعه است که بر روی گیت\u200cهاب قرار دارد، همه\u200cی قابلیت\u200cهای گفته شده در این صفحه را دارد اما ممکن است بعضی قابلیت\u200cهای جدید تست شده نباشند. در صورتی که نسخه\u200cی بالا کاری که میخواهید را انجام نمیدهد این را نصب کنید.\n\n<div dir="ltr">\n\n```bash\npip install git+https://github.com/Glyphack/pytse-client.git\n```\n\n</div>\n\n## نحوه استفاده\n\n### دانلود سابقه سهم ها\n\nبا استفاده از این تابع می\u200cتوان سابقه سهام رو دریافت کرد و هم اون رو ذخیره و هم توی کد استفاده کرد\n\n<div dir="ltr">\n\n```python\nimport pytse_client as tse\n\ntickers = tse.download(symbols="all", write_to_csv=True)\nprint(tickers["ولملت"])  # history\n\n# Output\n            date     open     high  ...     volume  count    close\n0     2009-02-18   1050.0   1050.0  ...  330851245    800   1050.0\n1     2009-02-21   1051.0   1076.0  ...  335334212   6457   1057.0\n2     2009-02-22   1065.0   1074.0  ...    8435464    603   1055.0\n3     2009-02-23   1066.0   1067.0  ...    8570222    937   1060.0\n4     2009-02-25   1061.0   1064.0  ...    7434309    616   1060.0\n...          ...      ...      ...  ...        ...    ...      ...\n2323  2020-04-14   9322.0   9551.0  ...  105551315  13536   9400.0\n2324  2020-04-15   9410.0   9815.0  ...  201457026  11322   9815.0\n2325  2020-04-18  10283.0  10283.0  ...  142377245   8929  10283.0\n2326  2020-04-19  10797.0  10797.0  ...  292985635  22208  10380.0\n2327  2020-04-20  10600.0  11268.0  ...  295590437  16313  11268.0\n```\n\n</div>\n\nبرای دانلود سابقه یک یا چند سهم کافیست اسم اون\u200cها به تابع داده بشه:\n\n<div dir="rtl">\n\nهمچنین با گذاشتن\n`write_to_csv=True`\nسابقه سهم توی فایلی با نماد سهم نوشته میشه\n\nسابقه سهم در قالب `Dataframe` است\n\nدر صورتی که می\u200cخواهید تاریخ شمسی به خروجی اضافه شود می\u200cتوانید با گذاشتن\n`include_jdate=True`\nاین امکان را فراهم کنید\n\nبرای دریافت قیمت\u200cهای تعدیل شده از\n`adjust=True`\nاستفاده کنید\n\n</div>\n\n<div dir="ltr">\n\n```python\nimport pytse_client as tse\n\ntse.download(symbols="وبملت", write_to_csv=True)\ntse.download(symbols="وبملت", write_to_csv=True, include_jdate=True)\ntse.download(symbols=["وبملت", "ولملت"], write_to_csv=True)\n```\n\n</div>\n\n### دانلود سابقه شاخص های مالی\n\n<div style="line-height:80px;">\nبرای دانلود سابقه شاخص های منتخب بازار که از طریق این <a href="http://www.tsetmc.com/Loader.aspx?Partree=151315&Flow=1">  لینک </a>\nمی توانید لیست نام آن ها را ملاحظه کنید کافی است اسم شاخص یا شاخص های مورد نظر خود را به صورت\n<strong> دقیقا مشابه با لینک ارائه شده در بالا </strong>\n\nدر بخش \u200d\u200d\n`symbols`\nوارد کنید.\n\nهمینطور در صورتی که علاقه داشته باشید دیتای مربوط به همه شاخص ها را دریافت کنید کافی است که در برابر کلید `symbols`\nرشته\n`"all"`\nوارد کنید.\n\nچند نمونه از دریافت داده\u200cهای شاخصی را می\u200cتوانید در پایین مشاهده کنید.\n\n</div>\n<div dir="ltr">\n\n```python\nfrom pytse_client.download import download_financial_indexes\n\ndownload_financial_indexes(symbols="all", write_to_csv=True, base_path="hello")\n\n\ndownload_financial_indexes(symbols=["شاخص قيمت 50 شركت", "فني مهندسي"], write_to_csv=True, include_jdate=True)\n```\n\n</div>\n<div>\n<i>\nبه این موضوع توجه داشته باشید که دیتای دریافتی تنها حاوی مقدار شاخص مورد نظر در پایان روز معاملاتی است و اطلاعاتی از `OHLCV`\nشاخص در اختیار شما قرار نمی\u200cدهد.\n</i>\n</div>\n\n### دانلود سابقه معاملات حقیقی و حقوقی به صورت مجزا\n\nبرای دانلود سابقه معاملات حقیقی و حقوقی برای تمامی نمادها می\u200cتوان از تابع زیر استفاده کرد\n\n<div dir="ltr">\n\n```python\nfrom pytse_client import download_client_types_records\n\nif __name__ == \'__main__\':\n    records_dict = download_client_types_records("all")\n    print(records_dict["فولاد"])\n\n# Output\ndate         individual_buy_count  ... individual_ownership_change\n\n2020-09-01                36298  ...                   -691857.0\n2020-08-31                58185  ...                  83789408.0\n2020-08-26                  461  ...                  21647730.0\n2020-08-25                 1248  ...                  14716846.0\n2020-08-24                38291  ...                -238454702.0\n...                         ...  ...                         ...\n2008-12-02                    7  ...                    -10000.0\n2008-12-01                    8  ...                         0.0\n2008-11-30                   10  ...                    -12781.0\n2008-11-29                  116  ...                   4596856.0\n2008-11-26                   14  ...                    -20000.0\n\n[2518 rows x 17 columns]\n\n```\n\n</div>\n\nمشابه تابع قبلی می\u200cتوان نتایج را ذخیره کرد\n\n<div dir="ltr">\n\n```python\nfrom pytse_client import download_client_types_records\n\nif __name__ == \'__main__\':\n    # Records are saved as a .csv file with the same name of ticer\'s\n    records = download_client_types_records("فولاد", write_to_csv=True)\n```\n\n</div>\n\n### ماژول Ticker\n\nاین ماژول برای کار با دیتای یک سهم خاص هست و با گرفتن نماد اطلاعات موجود رو میده\n\nبرای مثال:\n\n<div dir="ltr">\n\n```python\nimport pytse_client as tse\n\ntse.download(symbols="نوری", write_to_csv=True)  # optional\nticker = tse.Ticker("نوری")\n\nprint(ticker.history)  # سابقه قیمت سهم\nprint(ticker.client_types)  # حقیقی حقوقی\nprint(ticker.title)  # نام شرکت\nپتروشيمي نوري (نوري)\nprint(ticker.url)  # آدرس صفحه سهم\nhttp://tsetmc.com/Loader.aspx?ParTree=151311&i=19040514831923530\nprint(ticker.group_name)  # نام گروه\nمحصولات شيميايي\nprint(ticker.fiscal_year)  # سال مالی\n12/29\nprint(ticker.eps)  # EPS\n16442.0\nprint(ticker.p_e_ratio)  # P/E\n6.705388638851721\nprint(ticker.group_p_e_ratio)  # group P/E\n8.24\nprint(ticker.nav)  # NAV خالص ارزش دارایی\u200cها ویژه صندوق\u200cها می\u200cباشد\n112,881\nprint(ticker.nav_date)  # last date of NAV تاریخ بروزرسانی خالص ارزش دارایی\u200cها ویژه صندوق\u200cها می\u200cباشد\n1400/7/25 13:58:00\nprint(ticker.psr)  # PSR این نسبت ویژه شرکت\u200cهای تولیدی است\n71483.0238888889\nprint(ticker.p_s_ratio)  # P/S این نسبت ویژه شرکت\u200cهای تولیدی است\n1.5423242331125966\nprint(ticker.base_volume)  # حجم مبنا\n918780.0\nprint(ticker.state)  # وضعیت نماد\nمجاز\nprint(ticker.last_price)  # آخرین معامله\n109940\nprint(ticker.adj_close)  # قیمت پایانی\n110250\nprint(ticker.yesterday_price)  # قیمت دیروز\n106800\nprint(ticker.open_price)  # قیمت اولین معامله\n108200\nprint(ticker.high_price)  # قیمت حداکثر\n111830\nprint(ticker.low_price)  # قیمت حداقل\n108200\nprint(ticker.count)  # تعداد معاملات\n3934\nprint(ticker.volume)  # حجم معاملات\n2602437\nprint(ticker.value)  # ارزش معاملات\n286919407590\nprint(ticker.last_date)  # تاریخ آخرین اطلاعات قیمت پایانی ناشی از تغییرات شرکتی و معاملات\n2021-11-01 12:29:54\nprint(ticker.flow)  # عنوان بازار\nبورس\nprint(ticker.sta_max)  # حداکثر قیمت مجاز\n115760.0\nprint(ticker.sta_min)  # حداقل قیمت مجاز\n104740.0\nprint(ticker.min_week)  # حداقل قیمت هفته اخیر\n104500.0\nprint(ticker.max_week)  # حداکثر قیمت هفته اخیر\n111830.0\nprint(ticker.min_year)  # حداقل قیمت بازه سال\n48320.0\nprint(ticker.max_year)  # حداکثر قیمت بازه سال\n197000.0\nprint(ticker.month_average_volume)  # میانگین حجم ماه\n3865804\nprint(ticker.float_shares)  # درصد سهام شناور\n10.0\nprint(ticker.best_supply_price)  # قیمت بهترین تقاضا\n109960\nprint(ticker.best_supply_vol)  # حجم بهترین تقاضا\n8296\nprint(ticker.best_demand_price)  # قیمت بهترین عرضه\n109920\nprint(ticker.best_demand_vol)  # حجم بهترین عرضه\n3620\nprint(ticker.total_shares)  # تعداد سهام\nprint(ticker.market_cap) # ارزش بازار شرکت\nprint(ticker.shareholders)  # اطلاعات سهام\u200cداران عمده\nprint(ticker.get_shareholders_history())) # تاریخچه\u200cی سهام\u200cداران عمده\nprint(ticker.get_trade_details())  # ریز معاملات روز جاری\nprint(ticker.get_ticker_real_time_info_response()) # اطلاعات لحظه\u200cای مانند قیمت و پیشنهادات خرید و فروش\n```\n\n</div>\nبرای دریافت قیمت\u200cهای تعدیل شده هم میشه از این کد استفاده کرد\n\n<div dir="ltr">\n\n```python\nimport pytse_client as tse\n\nticker = tse.Ticker(symbol="بركت", adjust=True)\n```\n\n</div>\n\nبرای استفاده لازم نیست حتما تابع دانلود صدا زده بشه.\nاگر این کد رو بدون دانلود کردن سهم استفاده کنید خودش اطلاعات سهم رو از سایت میگیره،\nاما اگر قبل از اون از دانلود استفاده کرده باشید\nبه جای گرفتن از اینترنت اطلاعات رو از روی فایل میخونه که سریع تر هست\n\n##### نکته ۱\n\nطبق تجربه\u200c ای که داشتم چون گاهی اوقات سایت بورس مدت زیادی طول میکشه تا اطلاعات رو بفرسته یا بعضی مواقع نمی\u200cفرسته بهتر هست که اول تابع دانلود رو استفاده کنید برای سهم\u200cهایی که لازم هست و بعد با دیتای اون\u200cها کار کنید.\n\nدر صورت نیاز به اطلاعات لحظه\u200cای نماد بهتر است کل [اطلاعات لحظه\u200cای سهام](#اطلاعات-لحظهای-سهام) را یکجا دریافت کنید تا هم دیتای دریافتی مربوط به یک زمان باشند و هم از ارسال درخواست\u200cهای مکرر به سایت بورس جلوگیری شود.\n\n##### نکته ۲\n\nبعضی از ویژگی\u200cها برای همه\u200cی سهم\u200cها در دسترس نیست. برای مثال بعضی از سهم\u200cها دارای آخرین قیمت یا پی به ای یا ای پی اس نیستند. مقدار این ویژگی\u200cها در صورت نبودن برابر با `None` خواهد بود. پس باید در برنامه خود اینکه این مقادیر وجود دارند را بررسی کنید.\n\n#### اطلاعات نماد\u200cهای حذف شده\n\nتعدادی از نماد\u200cها توی سایت به شکل حذف شده هستند. برای گرفتن دیتای این نماد\u200cها از ماژول تیکر استفاده کنید.\nبرای مثال جهت دسترسی به دیتای نماد حذف شده خصدرا، اندیس آن را از آدرس نماد در سایت بورس بگیرید\nhttp://www.tsetmc.com/Loader.aspx?ParTree=151311&i=25165947991415904\n\n<div dir="ltr">\n\n```python\nimport pytse_client as tse\n\nticker = tse.Ticker("", index="25165947991415904")\n```\n\n</div>\n\nمقدار \u200d`index` را با مقدار جلوی `i=` جایگزین میکنیم.\n\n#### اطلاعات حقیقی و حقوقی\n\nاطلاعات خرید و فروش حقیقی و حقوقی سهام رو میشه از طریق `ticker.client_types` گرفت این اطلاعات یه DataFrame شامل اطلاعات موجود در تب حقیقی حقوقی(تب بنفشی که در این [صفحه](http://www.tsetmc.com/Loader.aspx?ParTree=151311&i=778253364357513) هست) سهم هست:\n\n<div dir="ltr">\n\n```\ndate : تاریخ\nindividual_buy_count : تعداد معاملات خرید حقیقی\ncorporate_buy_count : تعداد معلاملات خرید حقوقی\nindividual_sell_count : تعداد معاملات فروش حقیقی\ncorporate_sell_count : تعداد معلاملات فروش حقوقی\nindividual_buy_vol : حجم خرید حقیقی\ncorporate_buy_vol : حجم خرید حقوقی\nindividual_sell_vol : حجم فروش حقیقی\ncorporate_sell_value : حجم فروش حقوقی\nindividual_buy_mean_price : قیمت میانگین خرید حقیقی\nindividual_sell_mean_price : قیمت میانگین فروش حقیقی\ncorporate_buy_mean_price : قیمت میانگین خرید حقوقی\ncorporate_sell_mean_price : قیمت میانگین فروش حقوقی\nindividual_ownership_change : تغییر مالکیت حقوقی به حقیقی\n```\n\n</div>\n\n#### سهامداران عمده\n\nسهام\u200cداران عمده اطلاعات داخل این [صفحه](http://tsetmc.com/Loader.aspx?Partree=15131T&c=IRO1BMLT0007) هست.\nاین اطلاعات رو میشه با `shareholders` گرفت که یک DataFrame هست.\n\n<div dir="ltr">\n\n```python\nimport pytse_client as tse\n\nticker = tse.Ticker("وبملت")\nprint(ticker.shareholders)  # اطلاعات سهام\u200cداران عمده\n\n# Output\n change   percentage       share                                 shareholder\n0   دولت جمهوري اسلامي ايران                    23,114,768,760  11.160     0\n1   صندوق تامين آتيه كاركنان بانك ملت           13,353,035,330  6.440      0\n2   صندوق سرمايه گذاري واسطه گري مالي يكم       11,748,764,647  5.670      0\n3   شركت پتروشيمي فن آوران-سهامي عام-           9,253,327,080   4.460      0\n4   شركت گروه مالي ملت-سهام عام-                8,933,698,834   4.310      0\n5   صندوق سرمايه گذاري.ا.بازارگرداني ملت     8,395,500,914   4.050      0\n6   شركت سرمايه گذاري صباتامين-سهامي عام-       7,659,597,269   3.690      0\n7   شركت تعاوني معين آتيه خواهان                4,561,801,327   2.200      0\n8   شركت س اتهران س.خ-م ك م ف ع-                4,278,903,677   2.060      0\n9   شركت گروه توسعه مالي مهرآيندگان-سهامي عام-  4,161,561,525   2.000      0\n10  شركت س اخراسان رضوي س.خ-م ك م ف ع-          3,442,236,423   1.660      0\n11  شركت س افارس س.خ-م ك م ف ع-                 2,593,956,288   1.250      0\n12  شركت س اخوزستان س.خ-م ك م ف ع-              2,526,080,803   1.220      0\n13  شركت شيرين عسل-سهامي خاص-                   2,496,936,881   1.200      0\n14  شركت سرمايه گذاري ملي ايران-سهامي عام-      2,423,674,676   1.170      0\n15  شركت س ااصفهان س.خ-م ك م ف ع-               2,274,221,331   1.090      0\n```\n\n</div>\n\n#### تاریخچه\u200cی سهام\u200cداران عمده\n\nبا استفاده از تابع get_shareholders_history میشه تاریخچه اطلاعات سهام\u200cداران عمده رو گرفت:\n\n**رفع خطای asyncio.run() cannot be called from a running event loop**\nدر صورتی که این خطا رو گرفتید به این معنی هست که تابع `get_shareholders_history` در یک تابع `async` داره اجرا میشه.\nبرای رفع اون کافیه که تابع `get_shareholders_history_async` رو استفاده کنید مطابق مثال پایین تکه کد دوم.\n\n<div dir="ltr">\n\n```python\nimport pytse_client as tse\n\nticker = tse.Ticker("وبملت")\nticker.get_shareholders_history(\n    from_when=datetime.timedelta(days=90),  # تعداد روز\u200cهای گذشته که مقدار پیشفرض ۹۰ روز است\n    to_when=datetime.datetime.now(),  # تا چه تاریخی اطلاعات گرفته شود که پیشفرض امروز است\n    only_trade_days=True,  # فقط روز\u200cهای معاملاتی که پیشفرض بله است\n)\n\n# در صورتی که میخواهید تابع\n# async\n# رو استفاده کنید\nawait ticker.get_shareholders_history(\n    from_when=datetime.timedelta(days=90),  # تعداد روز\u200cهای گذشته که مقدار پیشفرض ۹۰ روز است\n    to_when=datetime.datetime.now(),  # تا چه تاریخی اطلاعات گرفته شود که پیشفرض امروز است\n    only_trade_days=True,  # فقط روز\u200cهای معاملاتی که پیشفرض بله است\n)\n\n```\n\n</div>\nخروجی این تابع یک دیتا فریم حاوی دیتای زیر است:\n<div dir="ltr">\n\n```\n,date,shareholder_id,shareholder_shares,shareholder_percentage,shareholder_instrument_id,shareholder_name,change\n0,2021-08-30 17:01:23.037957,273,2910355428.0,32.19,IRO1RSAP0000,شركت ايراني توليداتومبيل-سايپا-,1\n1,2021-08-30 17:01:23.037957,406,975144471.0,10.78,IRO1RSAP0000,شركت سايپا,1\n2,2021-08-30 17:01:23.037957,50264,454000000.0,5.02,IRO1RSAP0000,شركت ايراني توليداتومبيل سايپا-سهامي عام-,1\n3,2021-08-30 17:01:23.037957,42636,409843922.0,4.53,IRO1RSAP0000,شركت سرمايه گذاري وتوسعه صنعتي نيوان ابتكارس.ع,1\n4,2021-08-30 17:01:23.037957,46966,116002189.0,1.28,IRO1RSAP0000,BFMصندوق.س.ا.بازارگرداني سهم آشنايكم,1\n5,2021-08-31 17:01:23.037957,273,2910355428.0,32.19,IRO1RSAP0000,شركت ايراني توليداتومبيل-سايپا-,1\n6,2021-08-31 17:01:23.037957,406,975144471.0,10.78,IRO1RSAP0000,شركت سايپا,1\n7,2021-08-31 17:01:23.037957,50264,454000000.0,5.02,IRO1RSAP0000,شركت ايراني توليداتومبيل سايپا-سهامي عام-,1\n8,2021-08-31 17:01:23.037957,42636,409843922.0,4.53,IRO1RSAP0000,شركت سرمايه گذاري وتوسعه صنعتي نيوان ابتكارس.ع,1\n9,2021-08-31 17:01:23.037957,46966,116002189.0,1.28,IRO1RSAP0000,BFMصندوق.س.ا.بازارگرداني سهم آشنايكم,1\n10,2021-09-01 17:01:23.037957,273,2910355428.0,32.19,IRO1RSAP0000,شركت ايراني توليداتومبيل-سايپا-,1\n11,2021-09-01 17:01:23.037957,406,975144471.0,10.78,IRO1RSAP0000,شركت سايپا,1\n12,2021-09-01 17:01:23.037957,50264,454000000.0,5.02,IRO1RSAP0000,شركت ايراني توليداتومبيل سايپا-سهامي عام-,1\n13,2021-09-01 17:01:23.037957,42636,409843922.0,4.53,IRO1RSAP0000,شركت سرمايه گذاري وتوسعه صنعتي نيوان ابتكارس.ع,1\n14,2021-09-01 17:01:23.037957,46966,116002189.0,1.28,IRO1RSAP0000,BFMصندوق.س.ا.بازارگرداني سهم آشنايكم,1\n\n```\n\n</div>\n\n<div id="qa" />\nگرفتن این دیتا کار زمان بری هست (با توجه به تعداد روزی که لازم دارید) و سریع کردن کار با کد به راحتی امکان پذیر نیست. سعی نکنید با همزمان اجرا کردن این تابع برای سهم\u200cهای مختلف روند رو سریع\u200cتر کنید چون سایت ip رو بلاک میکنه.\nاگر موقع اجرای کد پیغام زیر را به تعداد زیاد گرفتید (مثلا هر ثانیه این پیغام اومد) یعنی آیپی شما توسط سایت بورس بلاک شده و چند دقیقه صبر کنید و دوباره ادامه بدید.\n<div dir="ltr">\n\n```\nRetrying pytse_client.ticker.ticker.Ticker._get_ticker_daily_info_page_response in 1.3127419515957892 seconds as it raised ClientResponseError: 500, message=\'Internal Server Error\', url=URL(\'http://cdn.tsetmc.com/Loader.aspx?ParTree=15131P&i=56574323121551263&d=20210220\').\n```\n\n</div>\n\n#### تاریخچه\u200c تعداد سهام\nبرای گرفتن این اطلاعات از تابع `get_total_shares_history_async`\nاستفاده کنید.\n\nخروجی این تابع یک دیتافریم با دو ستون \ndate, total_shares\nاست.\n\nتوجه داشته باشید که اجرا کردن این تابع به علت `async` بودن متفاوت از بقیه دستورات است.\nبرای اطلاعات بیشتر درباره\u200cی این نوع توابع [این ویدیو](https://www.youtube.com/watch?v=EHHxGAfcZWw) را ببینید\n\nدر صورتی که در کد خود تابع async ندارید:\n\n<div dir="ltr">\n\n```python\nimport asyncio\nimport pytse_client as tse\nticker = tse.Ticker("وبملت")\n\nresult = asyncio.run(ticker.get_total_shares_history_async(\n    from_when=datetime.timedelta(days=90),  # تعداد روز\u200cهای گذشته که مقدار پیشفرض ۶۰ روز است\n    to_when=datetime.datetime.now(),  # تا چه تاریخی اطلاعات گرفته شود که پیشفرض امروز است\n    only_trade_days=True,  # فقط روز\u200cهای معاملاتی که پیشفرض بله است\n)\n```\n\n</div>\nاگر در برنامه\u200cی خود کد async دارید:\nاین تابع را به این شکل اجرا کنید\n\n<div dir="ltr">\n\n```python\nimport pytse_client as tse\nticker = tse.Ticker("وبملت")\n\nresult = await ticker.get_total_shares_history_async(\n    from_when=datetime.timedelta(days=90),  # تعداد روز\u200cهای گذشته که مقدار پیشفرض ۶۰ روز است\n    to_when=datetime.datetime.now(),  # تا چه تاریخی اطلاعات گرفته شود که پیشفرض امروز است\n    only_trade_days=True,  # فقط روز\u200cهای معاملاتی که پیشفرض بله است\n)\n```\n\n</div>\n\n#### شناور سهم\n\nبرای مثال میشه با استفاده از دیتای سهامداران عمده، شناوری سهم رو حساب کرد:\n\n<div dir="ltr">\n\n```python\nimport pytse_client as tse\n\nticker = tse.Ticker("وبملت")\n\nprint(ticker.shareholders.percentage.sum())  # جمع درصد سهام\u200cداران عمده\n53.63\n\nprint(100 - ticker.shareholders.percentage.sum())  # درصد سهام شناور\n46.37\n```\n\n</div>\n\n#### اطلاعات لحظه\u200cای سهام\n\nاز طریق تابع `get_ticker_real_time_info_response` میشه اطلاعات لحظه\u200cای سهام رو گرفت.\nدر صورتی که هنگام گرفتن اطلاعات لحظه\u200cای وضعیت سهام در حالت ممنوع متوقف باشد یا نماد قدیمی باشد اطلاعات لحظه\u200cای موجود نیست و با ارور مواجه خواهید شد که باید به درستی هندل شود.\n\nبرای گرفتن اطلاعات لحظه\u200cای به صورت فایل csv می\u200cتوانید از تابع زیر استفاده کنید:\n\n<div dir="ltr">\n\n```python\ndf = ticker_real_time_data_to_csv(ticker)\ndf.to_csv("test.csv") # برای ذخیره کردن در فایل\n```\n</div>\nنمونه\u200cی استفاده\n\n<div dir="ltr">\n\n```python\nimport pytse_client as tse\n\nticker = tse.Ticker("وبملت")\ntry:\n    real_time_data = ticker.get_ticker_real_time_info_response()\nexcept RuntimeError: # هندل کردن ارور در صورت وجود نداشتن اطلاعات لحظه\u200cای\n    print("cannot get realtime data")\n\nprint(real_time_data.buy_orders) # پیشنهادات خرید\nprint(real_time_data.sell_orders) # پیشنهادات فروش\nprint(real_time_data.best_supply_price)  # قیمت بهترین تقاضا\nprint(real_time_data.best_supply_vol)  # حجم بهترین تقاضا\nprint(real_time_data.best_demand_price)  # قیمت بهترین عرضه\nprint(real_time_data.best_demand_vol)  # حجم بهترین عرضه\nprint(real_time_data.state)  # وضعیت نماد\nprint(real_time_data.last_price)  # قیمت آخرین معامله\nprint(real_time_data.adj_close)  # قیمت پایانی\nprint(real_time_data.yesterday_price)  # قیمت دیروز\nprint(real_time_data.open_price)  # قیمت اولین معامله\nprint(real_time_data.high_price)  # قیمت حداکثر\nprint(real_time_data.low_price)  # قیمت حداقل\nprint(real_time_data.count)  # تعداد معاملات\nprint(real_time_data.volume)  # حجم معاملات\nprint(real_time_data.value)  # ارزش معاملات\nprint(real_time_data.last_date)  # آخرین اطلاعات قیمت ناشی از تغییرات شرکتی و معاملات\n\n# پیشنهادات فروش\nfor sell_order in real_time_data.sell_orders:\n    print(sell_order.volume, sell_order.count, sell_order.price)\n\n# پیشنهادات خرید\nfor buy_order in real_time_data.buy_orders:\n    print(buy_order.volume, buy_order.count, buy_order.price)\n\n# اطلاعات خرید و فروش حقیقی و حقوقی\nprint(real_time_data.individual_trade_summary.buy_count)\nprint(real_time_data.individual_trade_summary.buy_vol)\nprint(real_time_data.individual_trade_summary.sell_count)\nprint(real_time_data.individual_trade_summary.sell_vol)\nprint(real_time_data.corporate_trade_summary.buy_count)\nprint(real_time_data.corporate_trade_summary.buy_vol)\nprint(real_time_data.corporate_trade_summary.sell_count)\nprint(real_time_data.corporate_trade_summary.sell_vol)\n```\n\n</div>\n\n#### ریز معاملات سهام\n\nاز طریق تابع `get_trade_details` می\u200cتوان ریز معاملات آخرین روز معاملاتی سهام را گرفت:\n\n<div dir="ltr">\n\n```python\nimport pytse_client as tse\n\nticker = tse.Ticker("نوری")\ntrade_details = ticker.get_trade_details()\nprint(trade_details)\n\n# Output\n          date  volume     price\n0     09:00:20   10000  111900.0\n1     09:00:20    4480  111900.0\n2     09:00:20    3171  111900.0\n3     09:00:20    1647  111900.0\n4     09:00:20    1101  111900.0\n       ...     ...       ...\n6478  12:29:57    1163  116000.0\n6479  12:29:57    2159  116000.0\n6480  12:29:57     795  116000.0\n6481  12:29:58     257  116000.0\n6482  12:29:59     601  116000.0\n```\n\n</div>\n\n\n### تمامی اطلاعات موجود برای فیلترنویسی\n\nدر بخش دیده\u200cبان بازار امکان فیلترنویسی به زبان جاوااسکریپت وجود دارد. یکی از اطلاعات مهمی که معامله\u200cگران معمولا با اسفاده از آن فیلترنویسی می\u200cکنند آمارهای کلیدی سهام است که شامل تمامی موارد ذکر شده در \n[آمارهای کلیدی](./pytse_client/ticker_statisticals/README.md)\nاست.\n\nهمچنین تمامی اطلاعات ارائه شده در مورد اطلاعات حقیقی حقوقی های سهام هم که در ادامه آمده است میتوانید دریافت کنید.\n\n```\n"numof_individual_buy", "numof_corporate_buy",\n"vol_individual_buy", "vol_corporate_buy",\n"numof_individual_sell", "numof_corporate_sell",\n"vol_individual_sell", "vol_corporate_sell"\n\n```\nنام کلیدهای ارائه شده در بالا به صورت کامل تر پایین آمده است:\n\n```\n        [\n            \'5054819322815158\', # id\n            \'406\', # num_of_individual_buyers (daily)\n            \'5\', # num_of_corporate_buyers (daily)\n            \'4979247\', # volume_of_individual_buyers (daily)\n            \'528270\', # volume_of_corporate_buyers (daily)\n            \'554\', # num_of_individual_sellers (daily)\n            \'2\', # num_of_corporate_sellers (daily)\n            \'5302517\', # volume_of_individual_sellers (daily)\n            \'205000\' # volume_of_corporate_sellers (daily)\n        ]\n    \n```\n\n\nهمچنین همه اطلاعات ارائه شده توسط دیده بان بازار را هم می توانید برای تمامی سهام دریافت کنید. در ادامه مشاهده میکنید.\n\n```\n"index", "code", "symbol", "name", "last_changed", "open_price",\n"adj_closing_price", "last_price", "number_of_trans",\n"volume_of_trans", "value_of_trans", "min_price", "max_year",\n"yesterday_price", "EPS", "base_volume", "group_number", "max_price_allowed", "min_price_allowed", "number_of_stocks"\n```\n\n\nدر واقع از دیده بان بازار دیتاهای زیر قابل دریافت بود که به عنوان نمونه قرار میدهم ولی برخی از دیتاها برای توسعه دهندگان پکیج قابل فهم نبود(آنهایی که با `?` در زیر مشخص شده اند) که در صورت علاقه مندی میتوانید با اطلاع رسانی کاربرد آن ها به ما در توسعه پکیج کمک کنید.\n\n```\n        [\n            \'71957984642204570\', # id\n            \'IRO7APTP0001\', # code\n            \'شپترو\', # symbol\n            \'پتروشيمي آبادان\', # name\n            \'122931\', # last changed (time 12:29:31)\n            \'2470\', # open price\n            \'2438\', # adj_closing price\n            \'2436\', # last price\n            \'861\', # number of trans (daily)\n            \'29225934\', # volume of trans (daily)\n            \'71250969784\', # value of trans (daily)\n            \'2436\', # min price (daily)\n            \'2500\', # max price (daily)\n            \'2511\', # yesterday price\n            \'-43\', # EPS\n            \'4000000\', # base voulume\n            \'3423\', # ?\n            \'4\', # ?\n            \'44\', # group number\n            \'2586.00\', # max allowed (daily)\n            \'2436.00\', # min allowed (daily)\n            \'10000000000\', # number of stocks\n            \'309\' # ?\n        ]\n```\n\n\nممکن است گاهی برخی از این اطلاعات موجود نباشند که باید در برنامه از وجود آن برای سهام مورد نظر اطمینان پیدا کنید.\nالبته باید دقت داشت اگر برخی از این اطلاعات گاهی برای برخی نمادها موجود نبود در خود دیده\u200cبان بازار هم موجود نبوده است.\n\nدر حال حاضر امکان دریافت کل اطلاعات بروز شده و لحظه\u200cای مربوط به فیلترنویسی با استفاده از تکه کد زیر موجود است.\n\n\n<div dir="ltr">\n\n```python\nfrom pytse_client import get_stats\n\nkey_stats = get_stats(base_path="hello", to_csv=True)\n\n# Output\n\n   ave_numof_buyer_last_12_month  ave_numof_buyer_last_3_month  ave_numof_corporation_buyer_last_12_month  ...  symbol                          name            index\n0                          610.0                         345.0                                        1.0  ...   وسپهر  سرمایه گذاری مالی سپهرصادرات  114312662654155\n1                          816.0                         381.0                                        1.0  ...    شصدف                صنعتی دوده فام  204092872752957\n2                           92.0                          76.0                                        0.0  ...     فسا                  پتروشیمی فسا  318005355896147\n3                          298.0                         246.0                                        2.0  ...   فرآور          فرآوریموادمعدنیایران  408934423224097\n4                          407.0                         332.0                                        1.0  ...   سبزوا              سیمان لار سبزوار  611986653700161\n\n```\n\nهمانطور که در مثال(ناقص به دلیل کمبود جا) بالا می بینید خروجی این دستور یک pandas dataframe است که **آمارهای کلیدی به علاوه اطلاعات حقیقی و حقوقی و همچنین اطلاعات دیده بان بازار** تمامی نمادهایی که در پکیج معتبر هستند و دیده\u200cبان در اختیار کاربران قرار می\u200cدهد را در خود دارد.\n\nبه صورت همزمان اطلاعات در \u200d\u200d`hello/key_stats.csv` ذخیره می\u200cشود.\nدر صورتی که نمی\u200cخواهید خروجی csv ساخته شود کافی است که `to_csv=False` قرار دهید.\nهمینطور در صورت خالی گذاشتن `base_path` به جای آن `stats_data/stats.csv` استفاده می\u200cشود.\n\n\n</div>\n\n### گرفتن تمام اطلاعات تاریخی یا لحظه\u200cای نماد به صورت CSV\n\nبرای استفاده راحت\u200cتر از اطلاعات لحظه\u200cای یا تاریخی و یا درست کردن فایل برای نرم افزارهای دیگه توابعی وجود داره که تمام اطلاعات نماد رو در یک فایل برمیگردونه.\n\nاطلاعات تاریخی برگشته شامل اطلاعات خرید و فروش حقیقی و حقوقی و تاریخچه سهم هست که در هر سطر با ذکر تاریخ وجود دارند\nاطلاعات لحظه\u200cای تنها یک سطر هست و شامل اطلاعات تابلو هست.\n\nتوجه کنید این اطلاعات چیزی بیشتر از توابع موجود در پکیج ندارند و صرفا برای راحتی کار کاربران توسعه داده شده\u200cاند.\n<div dir="ltr">\n\n```python\nticker = Ticker("وبملت")\nhistorical_data = export_ticker_history_as_csv(ticker)\nreal_time_data = ticker_real_time_data_to_csv(ticker)\n\n# برای نوشتن این اطلاعات به شکل فایل csv\n\nhistorical_data.to_csv("history.csv")\nreal_time_data.to_csv("realtime.csv")\n\n```\n\n</div>\n\n\n\n## کامیونیتی\n\nاگر درباره پکیج یا استفاده از اون سوالی دارید میتونید توی سرور دیسکورد بپرسید.\n\nhttps://discord.gg/ampPDKHpVv\n\n<div id="education" />\n\n## منابع آموزشی\nلیست زیر پست و یا دوره\u200cهای آموزشی است که به شما کمک می\u200cکند استفاده از پایتون و پکیج pytse را بیاموزید\n\n- https://virgool.io/@sh.hooshyari/%D8%AF%D8%B1%DB%8C%D8%A7%D9%81%D8%AA-%D8%A7%D8%B7%D9%84%D8%A7%D8%B9%D8%A7%D8%AA-%D8%A8%D9%88%D8%B1%D8%B3-%D8%AA%D9%87%D8%B1%D8%A7%D9%86-%D8%A8%D8%A7-%D9%BE%D8%A7%DB%8C%D8%AA%D9%88%D9%86-mgaev4iytip6\n- https://github.com/sfmqrb/Eco-Finance-Course\n\n<div id="credits" />\n\n## الهام گرفته از:\n\n- [tehran_stocks](https://github.com/ghodsizadeh/tehran-stocks)\n- [yfinance](https://github.com/ranaroussi/yfinance)\n\n</div>\n',
    'author': 'glyphack',
    'author_email': 'sh.hooshyari@gmail.com',
    'maintainer': 'None',
    'maintainer_email': 'None',
    'url': 'None',
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'python_requires': '>=3.7.2,<4.0.0',
}


setup(**setup_kwargs)
