document.addEventListener("DOMContentLoaded",function(){window.addEventListener("load",init);M.AutoInit()});function animateCSS(element,animation,prefix="animate__"){new Promise((resolve,reject)=>{const animationName=`${prefix}${animation}`;const node=document.querySelector(element);node.classList.add(`${prefix}animated`,animationName,"animate__slow");function handleAnimationEnd(event){event.stopPropagation();node.classList.remove(`${prefix}animated`,animationName,"animate__slow");resolve("Animation ended")}node.addEventListener("animationend",handleAnimationEnd,{once:true})})}function animateSlides(){const carouselSlide=document.querySelector(".carousel-item.active");carouselSlide.classList.contains("active")?animateCSS(".carousel-item.active","fadeInRight"):null;carouselSlide.querySelector(".product-image")?animateCSS(".carousel-item.active .product-image","slideInRight"):null;carouselSlide.querySelector(".carousel-text")?animateCSS(".carousel-item.active .carousel-text","tada"):null}const elems=document.querySelectorAll(".carousel.carousel-slider");const instance=M.Carousel.init(elems,{duration:0,numVisible:1,onCycleTo:animateSlides});const carousel=document.querySelector(".carousel.carousel-slider");const carouselInstance=M.Carousel.getInstance(carousel);const carouselAutoplay=parseInt(carousel.dataset.autoplayInterval)*1e3||5e3;let interval;function autoPlayCarousel(){if(carousel.dataset.autoplay==="true"){interval=setInterval(()=>{carouselInstance.next()},carouselAutoplay)}}function init(){autoPlayCarousel()}const setProperty=duration=>{document.documentElement.style.setProperty("--animation-time",duration+"s")};const changeAnimationTime=()=>{const animationDuration=Math.random();setProperty(animationDuration)};setInterval(changeAnimationTime,1e3);