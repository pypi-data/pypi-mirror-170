[tool.poetry]
name = "libx"
authors = ["lmisto <louaimisto@gmail.com>"]

version = "1.2.3"
description = "alleviates anxiety."
homepage = "http://github.com/lmist/libx"
license = "UNLICENSED"
readme = "README.md"

keywords = [
  "pretty",
  "logging",
  "dotenvies",
  "mailer",
  "templates",
  "webscraping",
]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "License :: OSI Approved :: MIT License",
  "Operating System :: POSIX",
  "Operating System :: MacOS :: MacOS X",
  "Environment :: Web Environment",
  "Framework :: Pytest",
  "Intended Audience :: Developers",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: Implementation :: PyPy",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Utilities",
  "Topic :: System :: Shells",
  "Typing :: Typed",
]

# Wants everything from src...
packages = [
  { include = "libx", from = "." },
  # { include = "libx.sty", from = "libx" },
  # { include = "libx.owl", from = "libx" },
  # { include = "libx.env", from = "libx" },
]

include = [
    { path = "tst", format = "sdist" },
    { path = "doc", format = "sdist" },
]

# include = [
#   "pyproject.toml",
#   "LICENSE",
#   "README*.rst",
#   "README*.md",
#   "CHANGELOG.rst",
#   "CHANGELOG.md",
#   "CONTRIBUTING.rst",
#   "CONTRIBUTING.md",
# ]

exclude = [
  ".*",
]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/lmist/libx/issues"
Documentation = "https://libx.git-pull.com"
Repository = "https://github.com/lmist/libx"
Changes = "https://github.com/lmist/libx/blob/master/CHANGES"

[tool.poetry.dev-dependencies]
### Docs ###
mkdocs-material = "*"
### Testing ###
pytest = "*"
pytest-rerunfailures = "*"
pytest-mock = "*"
pytest-watcher = "^0.2.3"
Faker = "^14.2.0"
## Coverage ###
codecov = "*"
coverage = "*"
pytest-cov = "*"
### Format ###
black = "*"
isort = "*"
### Lint ###
flake8 = "*"
flake8-bugbear = "^22.8.23"
flake8-comprehensions = "*"
mypy = "*"

[tool.poetry.extras]
docs = [
  "mkdocs-material"
]
test = ["pytest", "pytest-rerunfailures", "pytest-mock", "pytest-watcher"]
coverage = ["codecov", "coverage", "pytest-cov"]
format = ["black", "isort"]
lint = ["flake8", "flake8-bugbear", "flake8-comprehensions", "mypy"]

[tool.mypy]
strict = true

[tool.poetry.dependencies]
python = "^3.10"
python-dotenv = "^0.21.0"
pydantic = "^1.10.2"
ptpython = "^3.0.20"
fontawesome = "^5.10.1.post1"
typer = "^0.6.1"
requests = "^2.28.1"
pandas = "^1.4.4"
beautifulsoup4 = "^4.11.1"
lxml = "^4.9.1"
randomname = "^0.1.5"
chalky = "^1.0.0"

[tool.pytest.ini_options]
pythonpath = [
  "."
]

[build-system]
requires = ["poetry_core>=1.0.0", "setuptools>50"]
build-backend = "poetry.core.masonry.api"

# [tool.poetry.scripts]
# tools = 'bin.tools:cla'

# Primo config stolen with love from the libtmux team.
[flake8]
exclude = ".*/,.tox,*.egg,libx/_compat.py,libx/__*__.py"
select = "E,W,F,N"
max-line-length = 79
extend-ignore = "E203,W503"

[tool.black]
line-length = 88
target_version = ['py37']
include = '\.pyi?$'
exclude = '''
(
  /(
    \.eggs
    | \.git
    | \.mypy_cache
    | _build
    | build
    | dist
  )/
)
'''

[isort]
profile = "black"
combine_as_imports= true
default_section = "THIRDPARTY"
include_trailing_comma = true
multi_line_output = 3
known_pytest = "pytest,py"
known_first_party = "pfix"
sections = "FUTURE,STDLIB,PYTEST,THIRDPARTY,FIRSTPARTY,LOCALFOLDER"
line_length = 60
