# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'GetVdiResult',
    'AwaitableGetVdiResult',
    'get_vdi',
    'get_vdi_output',
]

@pulumi.output_type
class GetVdiResult:
    """
    A collection of values returned by getVdi.
    """
    def __init__(__self__, id=None, name_label=None, pool_id=None, tags=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if name_label and not isinstance(name_label, str):
            raise TypeError("Expected argument 'name_label' to be a str")
        pulumi.set(__self__, "name_label", name_label)
        if pool_id and not isinstance(pool_id, str):
            raise TypeError("Expected argument 'pool_id' to be a str")
        pulumi.set(__self__, "pool_id", pool_id)
        if tags and not isinstance(tags, list):
            raise TypeError("Expected argument 'tags' to be a list")
        pulumi.set(__self__, "tags", tags)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="nameLabel")
    def name_label(self) -> str:
        return pulumi.get(self, "name_label")

    @property
    @pulumi.getter(name="poolId")
    def pool_id(self) -> Optional[str]:
        return pulumi.get(self, "pool_id")

    @property
    @pulumi.getter
    def tags(self) -> Optional[Sequence[str]]:
        return pulumi.get(self, "tags")


class AwaitableGetVdiResult(GetVdiResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetVdiResult(
            id=self.id,
            name_label=self.name_label,
            pool_id=self.pool_id,
            tags=self.tags)


def get_vdi(name_label: Optional[str] = None,
            pool_id: Optional[str] = None,
            tags: Optional[Sequence[str]] = None,
            opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetVdiResult:
    """
    ## # get_vdi

    Provides information about a VDI (virtual disk image)

    ## Example Usage

    ```python
    import pulumi
    import pulumi_xenorchestra as xenorchestra

    vdi = xenorchestra.get_vdi(name_label="ubuntu-20.04.4-live-server-amd64.iso")
    demo_vm = xenorchestra.Vm("demo-vm", cdrom=vdi.id)
    ```
    """
    __args__ = dict()
    __args__['nameLabel'] = name_label
    __args__['poolId'] = pool_id
    __args__['tags'] = tags
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('xenorchestra:index/getVdi:getVdi', __args__, opts=opts, typ=GetVdiResult).value

    return AwaitableGetVdiResult(
        id=__ret__.id,
        name_label=__ret__.name_label,
        pool_id=__ret__.pool_id,
        tags=__ret__.tags)


@_utilities.lift_output_func(get_vdi)
def get_vdi_output(name_label: Optional[pulumi.Input[str]] = None,
                   pool_id: Optional[pulumi.Input[Optional[str]]] = None,
                   tags: Optional[pulumi.Input[Optional[Sequence[str]]]] = None,
                   opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetVdiResult]:
    """
    ## # get_vdi

    Provides information about a VDI (virtual disk image)

    ## Example Usage

    ```python
    import pulumi
    import pulumi_xenorchestra as xenorchestra

    vdi = xenorchestra.get_vdi(name_label="ubuntu-20.04.4-live-server-amd64.iso")
    demo_vm = xenorchestra.Vm("demo-vm", cdrom=vdi.id)
    ```
    """
    ...
