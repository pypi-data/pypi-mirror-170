# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'GetCloudConfigResult',
    'AwaitableGetCloudConfigResult',
    'get_cloud_config',
    'get_cloud_config_output',
]

@pulumi.output_type
class GetCloudConfigResult:
    """
    A collection of values returned by getCloudConfig.
    """
    def __init__(__self__, id=None, name=None, template=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if template and not isinstance(template, str):
            raise TypeError("Expected argument 'template' to be a str")
        pulumi.set(__self__, "template", template)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def name(self) -> str:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def template(self) -> str:
        return pulumi.get(self, "template")


class AwaitableGetCloudConfigResult(GetCloudConfigResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetCloudConfigResult(
            id=self.id,
            name=self.name,
            template=self.template)


def get_cloud_config(name: Optional[str] = None,
                     opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetCloudConfigResult:
    """
    ## # CloudConfig

    Provides information about cloud config.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_xenorchestra as xenorchestra

    cloud_config = xenorchestra.get_cloud_config(name="Name of cloud config")
    ```
    """
    __args__ = dict()
    __args__['name'] = name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('xenorchestra:index/getCloudConfig:getCloudConfig', __args__, opts=opts, typ=GetCloudConfigResult).value

    return AwaitableGetCloudConfigResult(
        id=__ret__.id,
        name=__ret__.name,
        template=__ret__.template)


@_utilities.lift_output_func(get_cloud_config)
def get_cloud_config_output(name: Optional[pulumi.Input[str]] = None,
                            opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetCloudConfigResult]:
    """
    ## # CloudConfig

    Provides information about cloud config.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_xenorchestra as xenorchestra

    cloud_config = xenorchestra.get_cloud_config(name="Name of cloud config")
    ```
    """
    ...
