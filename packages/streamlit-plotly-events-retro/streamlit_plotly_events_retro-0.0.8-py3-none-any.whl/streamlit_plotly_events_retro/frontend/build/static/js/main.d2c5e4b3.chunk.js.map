{"version":3,"sources":["StreamlitPlotlyEventsComponent.tsx","index.tsx"],"names":["StreamlitPlotlyEventsComponent","render","plot_obj","JSON","parse","props","args","override_height","override_width","click_event","select_event","hover_event","Streamlit","setFrameHeight","data","layout","config","frames","onClick","plotlyEventHandler","onSelected","onHover","style","width","height","className","clickedPoints","points","forEach","arrayItem","push","x","y","curveNumber","pointNumber","pointIndex","setComponentValue","stringify","lassoPoints","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","document","getElementById"],"mappings":"iRAQMA,E,4MACGC,OAAS,WAEd,IAAMC,EAAWC,KAAKC,MAAM,EAAKC,MAAMC,KAAX,UACtBC,EAAkB,EAAKF,MAAMC,KAAX,gBAClBE,EAAiB,EAAKH,MAAMC,KAAX,eAGjBG,EAAc,EAAKJ,MAAMC,KAAX,YACdI,EAAe,EAAKL,MAAMC,KAAX,aACfK,EAAc,EAAKN,MAAMC,KAAX,YAGpB,OADAM,IAAUC,eAAeN,GAEvB,kBAAC,IAAD,CACEO,KAAMZ,EAASY,KACfC,OAAQb,EAASa,OACjBC,OAAQd,EAASc,OACjBC,OAAQf,EAASe,OACjBC,QAAST,EAAc,EAAKU,mBAAqB,aACjDC,WAAYV,EAAe,EAAKS,mBAAqB,aACrDE,QAASV,EAAc,EAAKQ,mBAAqB,aACjDG,MAAO,CAACC,MAAOf,EAAgBgB,OAAQjB,GACvCkB,UAAU,mB,EAMRN,mBAAqB,SAACL,GAE5B,IAAIY,EAA4B,GAChCZ,EAAKa,OAAOC,SAAQ,SAAUC,GAC5BH,EAAcI,KAAK,CACjBC,EAAGF,EAAUE,EACbC,EAAGH,EAAUG,EACbC,YAAaJ,EAAUI,YACvBC,YAAaL,EAAUK,YACvBC,WAAYN,EAAUM,gBAK1BvB,IAAUwB,kBAAkBjC,KAAKkC,UAAU,CACzC,OAASX,EACT,YAAcZ,EAAKwB,gB,yBA7CoBC,KAkD9BC,cAAwBxC,GCtDvCyC,IAASxC,OACP,kBAAC,IAAMyC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.d2c5e4b3.chunk.js","sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport React, { ReactNode } from \"react\"\nimport Plot from 'react-plotly.js';\n\nclass StreamlitPlotlyEventsComponent extends StreamlitComponentBase {\n  public render = (): ReactNode => {\n    // Pull Plotly object from args and parse\n    const plot_obj = JSON.parse(this.props.args[\"plot_obj\"]);\n    const override_height = this.props.args[\"override_height\"];\n    const override_width = this.props.args[\"override_width\"];\n\n    // Event booleans\n    const click_event = this.props.args[\"click_event\"];\n    const select_event = this.props.args[\"select_event\"];\n    const hover_event = this.props.args[\"hover_event\"];\n\n    Streamlit.setFrameHeight(override_height);\n    return (\n      <Plot\n        data={plot_obj.data}\n        layout={plot_obj.layout}\n        config={plot_obj.config}\n        frames={plot_obj.frames}\n        onClick={click_event ? this.plotlyEventHandler : function(){}}\n        onSelected={select_event ? this.plotlyEventHandler : function(){}}\n        onHover={hover_event ? this.plotlyEventHandler : function(){}}\n        style={{width: override_width, height: override_height}}\n        className=\"stPlotlyChart\"\n      />\n    )\n  }\n\n  /** Click handler for plot. */\n  private plotlyEventHandler = (data: any) => {\n    // Build array of points to return\n    var clickedPoints: Array<any> = [];\n    data.points.forEach(function (arrayItem: any) {\n      clickedPoints.push({\n        x: arrayItem.x,\n        y: arrayItem.y,\n        curveNumber: arrayItem.curveNumber,\n        pointNumber: arrayItem.pointNumber,\n        pointIndex: arrayItem.pointIndex\n      })\n    });\n\n    // Return array as JSON to Streamlit\n    Streamlit.setComponentValue(JSON.stringify({\n      \"points\":clickedPoints,\n      \"lassoPoints\":data.lassoPoints\n    }))\n  }\n}\n\nexport default withStreamlitConnection(StreamlitPlotlyEventsComponent)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport StreamlitPlotlyEventsComponent from \"./StreamlitPlotlyEventsComponent\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <StreamlitPlotlyEventsComponent />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}