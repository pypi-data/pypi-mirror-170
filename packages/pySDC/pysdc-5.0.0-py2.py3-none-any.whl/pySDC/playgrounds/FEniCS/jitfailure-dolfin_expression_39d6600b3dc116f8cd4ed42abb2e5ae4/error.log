/var/folders/bl/dnqb3_wx5w3cydb56gd8xh840000gn/T/tmpjuv8l07n/dolfin_expression_39d6600b3dc116f8cd4ed42abb2e5ae4.cpp:63:23: error: no matching function for call to 'sin'
          values[0] = sin(k*pi*x);
                      ^~~
/Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/math.h:329:15: note: candidate function not viable: no known conversion from 'typename internal::enable_if<true, const CwiseBinaryOp<internal::scalar_product_op<typename internal::promote_scalar_arg<Scalar, double, (Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, Scalar, Eigen::internal::scalar_product_op<double, Scalar> > >::value)>::type, typename internal::traits<Ref<const Matrix<double, -1, 1, 0, -1, 1>, 0, InnerStride<1> > >::Scalar>, const typename internal::plain_constant_type<Ref<const Matrix<double, -1, 1, 0, -1, 1>, 0, InnerStride<1> >, typename internal::promote_scalar_arg<Scalar, double, (Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, Scalar, Eigen::internal::scalar_product_op<double, Scalar> > >::value)>::type>::type, const Ref<const Matrix<double, -1, 1, 0, -1, 1>, 0, InnerStride<1> > > >::type' (aka 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1, 0, -1, 1> >, const Eigen::Ref<const Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::InnerStride<1> > >') to 'double' for 1st argument
extern double sin(double);
              ^
/Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:1007:46: note: candidate function not viable: no known conversion from 'typename internal::enable_if<true, const CwiseBinaryOp<internal::scalar_product_op<typename internal::promote_scalar_arg<Scalar, double, (Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, Scalar, Eigen::internal::scalar_product_op<double, Scalar> > >::value)>::type, typename internal::traits<Ref<const Matrix<double, -1, 1, 0, -1, 1>, 0, InnerStride<1> > >::Scalar>, const typename internal::plain_constant_type<Ref<const Matrix<double, -1, 1, 0, -1, 1>, 0, InnerStride<1> >, typename internal::promote_scalar_arg<Scalar, double, (Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, Scalar, Eigen::internal::scalar_product_op<double, Scalar> > >::value)>::type>::type, const Ref<const Matrix<double, -1, 1, 0, -1, 1>, 0, InnerStride<1> > > >::type' (aka 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1, 0, -1, 1> >, const Eigen::Ref<const Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::InnerStride<1> > >') to 'float' for 1st argument
inline _LIBCPP_INLINE_VISIBILITY float       sin(float __lcpp_x) _NOEXCEPT       {return ::sinf(__lcpp_x);}
                                             ^
/Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:1008:46: note: candidate function not viable: no known conversion from 'typename internal::enable_if<true, const CwiseBinaryOp<internal::scalar_product_op<typename internal::promote_scalar_arg<Scalar, double, (Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, Scalar, Eigen::internal::scalar_product_op<double, Scalar> > >::value)>::type, typename internal::traits<Ref<const Matrix<double, -1, 1, 0, -1, 1>, 0, InnerStride<1> > >::Scalar>, const typename internal::plain_constant_type<Ref<const Matrix<double, -1, 1, 0, -1, 1>, 0, InnerStride<1> >, typename internal::promote_scalar_arg<Scalar, double, (Eigen::internal::has_ReturnType<Eigen::ScalarBinaryOpTraits<double, Scalar, Eigen::internal::scalar_product_op<double, Scalar> > >::value)>::type>::type, const Ref<const Matrix<double, -1, 1, 0, -1, 1>, 0, InnerStride<1> > > >::type' (aka 'const Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1, 0, -1, 1> >, const Eigen::Ref<const Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::InnerStride<1> > >') to 'long double' for 1st argument
inline _LIBCPP_INLINE_VISIBILITY long double sin(long double __lcpp_x) _NOEXCEPT {return ::sinl(__lcpp_x);}
                                             ^
/Library/Developer/CommandLineTools/usr/include/c++/v1/complex:1352:1: note: candidate template ignored: could not match 'complex' against 'CwiseBinaryOp'
sin(const complex<_Tp>& __x)
^
/Library/Developer/CommandLineTools/usr/include/c++/v1/math.h:1014:1: note: candidate template ignored: requirement 'std::is_integral<CwiseBinaryOp<scalar_product_op<double, double>, const CwiseNullaryOp<scalar_constant_op<double>, const Matrix<double, -1, 1, 0, -1, 1> >, const Ref<const Matrix<double, -1, 1, 0, -1, 1>, 0, InnerStride<1> > > >::value' was not satisfied [with _A1 = Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<double, double>, const Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<double>, const Eigen::Matrix<double, -1, 1, 0, -1, 1> >, const Eigen::Ref<const Eigen::Matrix<double, -1, 1, 0, -1, 1>, 0, Eigen::InnerStride<1> > >]
sin(_A1 __lcpp_x) _NOEXCEPT {return ::sin((double)__lcpp_x);}
^
/miniconda3/envs/pySDC_mpifft/include/eigen3/Eigen/src/Core/GlobalFunctions.h:60:36: note: candidate template ignored: could not match 'ArrayBase' against 'CwiseBinaryOp'
  EIGEN_ARRAY_DECLARE_GLOBAL_UNARY(sin,scalar_sin_op,sine,\sa ArrayBase::sin)
                                   ^
1 error generated.
