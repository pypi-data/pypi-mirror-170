[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "nerfacc"
version = "0.1.4-1"
authors = [{name = "Ruilong", email = "ruilongli94@gmail.com"}]
license = { text="MIT" }
requires-python = ">=3.8"
dependencies = [
    "ninja>=1.10.2.3",
    "pybind11>=2.10.0",
    "torch>=1.12.1",
    "rich>=12"
]

[tool.setuptools.package-data]
"*" = ["*.cu", "*.cpp", "*.h"]

[project.optional-dependencies]

# for development
dev = [
    "black",
    "isort",
    "pytest",
    "pylint",
    "pytest-xdist==2.5.0",
    "pyyaml",
    "typeguard>=2.13.3",
]

# black
[tool.black]
line-length = 80

[tool.isort]
multi_line_output = 3
line_length = 80
include_trailing_comma = true

# pylint
[tool.pylint.messages_control]
max-line-length = 80
generated-members = ["numpy.*", "torch.*", "cv2.*", "cv.*"]
good-names-rgxs = "^[_a-zA-Z][_a-z0-9]?$"
ignore-paths = ["^tests/.*$", "^nerfacc/cuda/.*$", "^tests/cuda/.*$"]
jobs = 0

disable = [
  "line-too-long",
  "too-many-arguments",
  "too-many-locals",
]

#pytest
[tool.pytest.ini_options]
addopts = "-n=4 --typeguard-packages=nerfacc --disable-warnings --ignore=tests/cuda"
testpaths = [
    "tests",
]

# pyright
[tool.pyright]
include = ["nerfacc"]
exclude = ["**/node_modules",
    "**/__pycache__",
]
ignore = ["nerfacc/cuda"]
defineConstant = { DEBUG = true }

pythonVersion = "3.8"
pythonPlatform = "Linux"