# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from evmospy.evmosproto.evmos.revenue.v1 import tx_pb2 as evmos_dot_revenue_dot_v1_dot_tx__pb2


class MsgStub(object):
    """Msg defines the fees Msg service.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RegisterRevenue = channel.unary_unary(
                '/evmos.revenue.v1.Msg/RegisterRevenue',
                request_serializer=evmos_dot_revenue_dot_v1_dot_tx__pb2.MsgRegisterRevenue.SerializeToString,
                response_deserializer=evmos_dot_revenue_dot_v1_dot_tx__pb2.MsgRegisterRevenueResponse.FromString,
                )
        self.UpdateRevenue = channel.unary_unary(
                '/evmos.revenue.v1.Msg/UpdateRevenue',
                request_serializer=evmos_dot_revenue_dot_v1_dot_tx__pb2.MsgUpdateRevenue.SerializeToString,
                response_deserializer=evmos_dot_revenue_dot_v1_dot_tx__pb2.MsgUpdateRevenueResponse.FromString,
                )
        self.CancelRevenue = channel.unary_unary(
                '/evmos.revenue.v1.Msg/CancelRevenue',
                request_serializer=evmos_dot_revenue_dot_v1_dot_tx__pb2.MsgCancelRevenue.SerializeToString,
                response_deserializer=evmos_dot_revenue_dot_v1_dot_tx__pb2.MsgCancelRevenueResponse.FromString,
                )


class MsgServicer(object):
    """Msg defines the fees Msg service.
    """

    def RegisterRevenue(self, request, context):
        """RegisterRevenue registers a new contract for receiving transaction fees
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateRevenue(self, request, context):
        """UpdateRevenue updates the withdrawer address of a revenue
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelRevenue(self, request, context):
        """CancelRevenue cancels a contract's fee registration and further receival
        of transaction fees
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MsgServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RegisterRevenue': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterRevenue,
                    request_deserializer=evmos_dot_revenue_dot_v1_dot_tx__pb2.MsgRegisterRevenue.FromString,
                    response_serializer=evmos_dot_revenue_dot_v1_dot_tx__pb2.MsgRegisterRevenueResponse.SerializeToString,
            ),
            'UpdateRevenue': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateRevenue,
                    request_deserializer=evmos_dot_revenue_dot_v1_dot_tx__pb2.MsgUpdateRevenue.FromString,
                    response_serializer=evmos_dot_revenue_dot_v1_dot_tx__pb2.MsgUpdateRevenueResponse.SerializeToString,
            ),
            'CancelRevenue': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelRevenue,
                    request_deserializer=evmos_dot_revenue_dot_v1_dot_tx__pb2.MsgCancelRevenue.FromString,
                    response_serializer=evmos_dot_revenue_dot_v1_dot_tx__pb2.MsgCancelRevenueResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'evmos.revenue.v1.Msg', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Msg(object):
    """Msg defines the fees Msg service.
    """

    @staticmethod
    def RegisterRevenue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/evmos.revenue.v1.Msg/RegisterRevenue',
            evmos_dot_revenue_dot_v1_dot_tx__pb2.MsgRegisterRevenue.SerializeToString,
            evmos_dot_revenue_dot_v1_dot_tx__pb2.MsgRegisterRevenueResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateRevenue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/evmos.revenue.v1.Msg/UpdateRevenue',
            evmos_dot_revenue_dot_v1_dot_tx__pb2.MsgUpdateRevenue.SerializeToString,
            evmos_dot_revenue_dot_v1_dot_tx__pb2.MsgUpdateRevenueResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CancelRevenue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/evmos.revenue.v1.Msg/CancelRevenue',
            evmos_dot_revenue_dot_v1_dot_tx__pb2.MsgCancelRevenue.SerializeToString,
            evmos_dot_revenue_dot_v1_dot_tx__pb2.MsgCancelRevenueResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
