# autogenerated
# mypy: ignore-errors
# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from rime_sdk.protos.data_source import data_source_pb2 as data__source_dot_data__source__pb2


class DataSourceServiceStub(object):
    """
    Service of endpoints for Data Sources
    Data Sources can be used by customers in other services
    to read (in future, to write) from their own external data sources
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateDataSource = channel.unary_unary(
                '/rime.DataSourceService/CreateDataSource',
                request_serializer=data__source_dot_data__source__pb2.CreateDataSourceRequest.SerializeToString,
                response_deserializer=data__source_dot_data__source__pb2.CreateDataSourceResponse.FromString,
                )
        self.ListDataSources = channel.unary_unary(
                '/rime.DataSourceService/ListDataSources',
                request_serializer=data__source_dot_data__source__pb2.ListDataSourcesRequest.SerializeToString,
                response_deserializer=data__source_dot_data__source__pb2.ListDataSourcesResponse.FromString,
                )
        self.DeleteDataSource = channel.unary_unary(
                '/rime.DataSourceService/DeleteDataSource',
                request_serializer=data__source_dot_data__source__pb2.DeleteDataSourceRequest.SerializeToString,
                response_deserializer=data__source_dot_data__source__pb2.DeleteDataSourceResponse.FromString,
                )


class DataSourceServiceServicer(object):
    """
    Service of endpoints for Data Sources
    Data Sources can be used by customers in other services
    to read (in future, to write) from their own external data sources
    """

    def CreateDataSource(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListDataSources(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteDataSource(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DataSourceServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateDataSource': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateDataSource,
                    request_deserializer=data__source_dot_data__source__pb2.CreateDataSourceRequest.FromString,
                    response_serializer=data__source_dot_data__source__pb2.CreateDataSourceResponse.SerializeToString,
            ),
            'ListDataSources': grpc.unary_unary_rpc_method_handler(
                    servicer.ListDataSources,
                    request_deserializer=data__source_dot_data__source__pb2.ListDataSourcesRequest.FromString,
                    response_serializer=data__source_dot_data__source__pb2.ListDataSourcesResponse.SerializeToString,
            ),
            'DeleteDataSource': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteDataSource,
                    request_deserializer=data__source_dot_data__source__pb2.DeleteDataSourceRequest.FromString,
                    response_serializer=data__source_dot_data__source__pb2.DeleteDataSourceResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'rime.DataSourceService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DataSourceService(object):
    """
    Service of endpoints for Data Sources
    Data Sources can be used by customers in other services
    to read (in future, to write) from their own external data sources
    """

    @staticmethod
    def CreateDataSource(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rime.DataSourceService/CreateDataSource',
            data__source_dot_data__source__pb2.CreateDataSourceRequest.SerializeToString,
            data__source_dot_data__source__pb2.CreateDataSourceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListDataSources(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rime.DataSourceService/ListDataSources',
            data__source_dot_data__source__pb2.ListDataSourcesRequest.SerializeToString,
            data__source_dot_data__source__pb2.ListDataSourcesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteDataSource(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rime.DataSourceService/DeleteDataSource',
            data__source_dot_data__source__pb2.DeleteDataSourceRequest.SerializeToString,
            data__source_dot_data__source__pb2.DeleteDataSourceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
