VERSION 5.8 ;
DIVIDERCHAR "/" ;
BUSBITCHARS "[]" ;
DESIGN {{ fp.design }} ;
UNITS DISTANCE MICRONS {{ fp.db_units }} ;
DIEAREA {{ fp.diearea | map('scale') | map('render_tuple') | join(' ') }} ;

{% for row in fp.rows %}
ROW {{ row.name }} {{ row.site }} {{ row.x | scale }} {{ row.y | scale }} {{ row.orientation }}
    DO {{ row.numx }} BY {{ row.numy }} STEP {{ row.stepx | scale }} {{ row.stepy | scale }} ;
{% endfor %}

{% for track in fp.tracks %}
TRACKS {{ track.direction | upper }} {{ track.start | scale }} DO {{ track.total }} STEP {{ track.step | scale }}
    LAYER {{ track.layer}} ;
{% endfor %}

VIAS {{ fp.vias | length }} ;
    {% for name, via in fp.vias.items() %}
    - {{ name }}
    {% if via.generated %}
        + VIARULE {{ via.rule }}
        + CUTSIZE {{ via.cutsize | map('scale') | join(' ') }}
        + LAYERS {{ via.layers | join(' ') }}
        + CUTSPACING {{ via.cutspacing | map('scale') | join(' ') }}
        + ENCLOSURE {{ via.enclosure | map('scale') | join(' ') }}
        {% if via.rowcol %}
        + ROWCOL {{ via.rowcol | join(' ') }}
        {% endif %};
    {% else %}
      {% for rect in via.rects %}
      + RECT {{ rect.layer }} {{ rect.ll | map('scale') | render_tuple }} {{ rect.ur | map('scale') | render_tuple }}
      {% endfor %} ;
    {% endif %}
    {% endfor %}
END VIAS

COMPONENTS {{ fp.macros | length }} ;
{% for macro in fp.macros %}
   - {{ macro.name }} {{ macro.cell }}
      {% if macro.status %}
      + {{ macro.status | upper }} ( {{macro.x | scale }} {{ macro.y | scale }} ) {{ macro.orientation }}
      {% endif %}
      {% if macro.halo %}
      + HALO {{ macro.halo | map('scale') | join(' ') }}
      {% endif %} ;
{% endfor %}
END COMPONENTS

PINS {{ fp.pins | length }} ;
{% for name, pin in fp.pins.items() %}
    - {{ name }} + NET {{ pin.net }} + DIRECTION {{ pin.direction|upper }} + USE {{ pin.use|upper }}
       {% for port in pin.ports %}
       + PORT
       {% for shape in port.shapes %}
         + LAYER {{ shape.layer }} {{ shape.box | map('scale') | map('render_tuple') | join(' ') }}
       {% endfor %}
         {% if port.status %}
         + {{ port.status|upper }} {{ port.point | map('scale') | render_tuple }} {{ port.orientation }} ;
         {% endif %}
       {% endfor %}
{% endfor %}
END PINS

BLOCKAGES {{ fp.blockages | length }} ;
    {% for blockage in fp.blockages %}
    - {% if blockage.layer %}LAYER {{ blockage.layer }}{% else %}PLACEMENT{% endif %}

        RECT {{ blockage.ll | map('scale') | render_tuple }} {{ blockage.ur | map('scale') | render_tuple }} ;
    {% endfor %}
END BLOCKAGES

SPECIALNETS {{ fp.nets | length }} ;
{% for name, net in fp.nets.items() %}
    - {{ name }} {% for pin in net.pins %} ( * {{ pin }} ) {% endfor %} + USE {{ net.use }}
    {% for wire in net.wires %}
        {% if loop.first %}
        + ROUTED
        {% else %}
        NEW
        {% endif %}
        {{ wire.layer }} {{ wire.width | scale }} {% if wire.shape %} + SHAPE {{ wire.shape | upper }} {% endif %} {{ wire.start | scale | render_tuple }} {{ wire.end | scale | render_tuple }}
    {% endfor %}
    {% for via in net.vias %}
        {% if loop.first and net.wires | length == 0 %}
        + ROUTED
        {% else %}
        NEW
        {% endif %}
        {{ via.layer }} 0 + SHAPE STRIPE {{ via.point | scale | render_tuple }} {{ via.name }}
    {% endfor %} ;
{% endfor %}
END SPECIALNETS

END DESIGN
