{"version":3,"file":"extensionManagerView.js","names":["ExtensionItem","Djblets","Config","ListItem","extend","defaults","_","extension","prototype","initialize","apply","arguments","_updateActions","_updateItemState","listenTo","get","actions","push","id","label","configURL","dbURL","url","primary","danger","setActions","itemState","set","ExtensionItemView","TableItemView","className","actionHandlers","template","getRenderContext","model","attributes","_onDisableClicked","disable","catch","error","alert","message","_onEnableClicked","enable","_onReloadClicked","Promise","trigger","ExtensionManagerView","Backbone","View","events","listItemsCollectionType","ListItems","listItemType","listItemViewType","listViewType","TableView","list","List","collection","render","listView","el","$","ItemView","$el","removeAttr","addClass","_$listContainer","parent","reset","_onLoaded","load","items","installedExtensions","each","item","add","_reloadFull","submit"],"sources":["../../../../../../static/djblets/js/extensions/views/extensionManagerView.es6.js"],"sourcesContent":["(function() {\n\n\n/**\n * An item in the list of registered extensions.\n *\n * This will contain information on the extension and actions for toggling\n * the enabled state, reloading the extension, or configuring the extension.\n */\nconst ExtensionItem = Djblets.Config.ListItem.extend({\n    defaults: _.defaults({\n        extension: null,\n    }, Djblets.Config.ListItem.prototype.defaults),\n\n    /**\n     * Initialize the item.\n     *\n     * This will set up the initial state and then listen for any changes\n     * to the extension's state (caused by enabling/disabling/reloading the\n     * extension).\n     */\n    initialize() {\n        Djblets.Config.ListItem.prototype.initialize.apply(this, arguments);\n\n        this._updateActions();\n        this._updateItemState();\n\n        this.listenTo(\n            this.get('extension'),\n            'change:loadable change:loadError change:enabled',\n            () => {\n                this._updateItemState();\n                this._updateActions();\n            });\n    },\n\n    /**\n     * Update the actions for the extension.\n     *\n     * If the extension is disabled, this will add an Enabled action.\n     *\n     * If it's enabled, but has a load error, it will add a Reload action.\n     *\n     * If it's enabled, it will provide actions for Configure and Database,\n     * if enabled by the extension, along with a Disable action.\n     */\n    _updateActions() {\n        const extension = this.get('extension');\n        const actions = [];\n\n        if (!extension.get('loadable')) {\n            /* Add an action for reloading the extension. */\n            actions.push({\n                id: 'reload',\n                label: _`Reload`,\n            });\n        } else if (extension.get('enabled')) {\n            /*\n             * Show all the actions for enabled extensions.\n             *\n             * Note that the order used is here to ensure visual alignment\n             * for most-frequently-used options.\n             */\n            const configURL = extension.get('configURL');\n            const dbURL = extension.get('dbURL');\n\n            if (dbURL) {\n                actions.push({\n                    id: 'database',\n                    label: _`Database`,\n                    url: dbURL,\n                });\n            }\n\n            if (configURL) {\n                actions.push({\n                    id: 'configure',\n                    label: _`Configure`,\n                    primary: true,\n                    url: configURL,\n                });\n            }\n\n            actions.push({\n                id: 'disable',\n                label: _`Disable`,\n                danger: true,\n            });\n        } else {\n            /* Add an action for enabling a disabled extension. */\n            actions.push({\n                id: 'enable',\n                label: _`Enable`,\n                primary: true,\n            });\n        }\n\n        this.setActions(actions);\n    },\n\n    /**\n     * Update the state of this item.\n     *\n     * This will set the \"error\", \"enabled\", or \"disabled\" state of the\n     * item, depending on the corresponding state in the extension.\n     */\n    _updateItemState() {\n        const extension = this.get('extension');\n        let itemState;\n\n        if (!extension.get('loadable')) {\n            itemState = 'error';\n        } else if (extension.get('enabled')) {\n            itemState = 'enabled';\n        } else {\n            itemState = 'disabled';\n        }\n\n        this.set('itemState', itemState);\n    },\n});\n\n\n/**\n * Displays an extension in the Manage Extensions list.\n *\n * This will show information about the extension, and provide links for\n * enabling/disabling the extension, and (depending on the extension's\n * capabilities) configuring it or viewing its database.\n */\nconst ExtensionItemView = Djblets.Config.TableItemView.extend({\n    className: 'djblets-c-extension-item djblets-c-config-forms-list__item',\n\n    actionHandlers: {\n        'disable': '_onDisableClicked',\n        'enable': '_onEnableClicked',\n        'reload': '_onReloadClicked',\n    },\n\n    template: _.template(dedent`\n        <td class=\"djblets-c-config-forms-list__item-main\">\n         <div class=\"djblets-c-extension-item__header\">\n          <h3 class=\"djblets-c-extension-item__name\"><%- name %></h3>\n          <span class=\"djblets-c-extension-item__version\"><%- version %></span>\n          <div class=\"djblets-c-extension-item__author\">\n           <% if (authorURL) { %>\n            <a href=\"<%- authorURL %>\"><%- author %></a>\n           <% } else { %>\n            <%- author %>\n           <% } %>\n          </div>\n         </div>\n         <p class=\"djblets-c-extension-item__description\">\n          <%- summary %>\n         </p>\n         <% if (!loadable) { %>\n          <pre class=\"djblets-c-extension-item__load-error\"><%- loadError %></pre>\n         <% } %>\n        </td>\n        <td class=\"djblets-c-config-forms-list__item-state\"></td>\n        <td></td>\n    `),\n\n    /**\n     * Return context data for rendering the item's template.\n     *\n     * Returns:\n     *     object:\n     *     Context data for the render.\n     */\n    getRenderContext() {\n        return this.model.get('extension').attributes;\n    },\n\n    /**\n     * Handle a click on the Disable action.\n     *\n     * This will make an asynchronous request to disable the extension.\n     *\n     * Returns:\n     *     Promise:\n     *     A promise for the disable request. This will resolve once the\n     *     API has handled the request.\n     */\n    _onDisableClicked() {\n        return this.model.get('extension').disable()\n            .catch(error => {\n                alert(_`Failed to disable the extension: ${error.message}.`);\n            });\n    },\n\n    /**\n     * Handle a click on the Enable action.\n     *\n     * This will make an asynchronous request to enable the extension.\n     *\n     * Returns:\n     *     Promise:\n     *     A promise for the enable request. This will resolve once the\n     *     API has handled the request.\n     */\n    _onEnableClicked() {\n        return this.model.get('extension').enable()\n            .catch(error => {\n                alert(_`Failed to enable the extension: ${error.message}.`);\n            });\n    },\n\n    /**\n     * Handle a click on the Reload action.\n     *\n     * This will trigger an event on the item that tells the extension\n     * manager to perform a full reload of all extensions, this one included.\n     *\n     * Returns:\n     *     Promise:\n     *     A promise for the enable request. This will never resolve, in\n     *     practice, but is returned to enable the action's spinner until\n     *     the page reloads.\n     */\n    _onReloadClicked() {\n        return new Promise(() => this.model.trigger('needsReload'));\n    },\n});\n\n\n/**\n * Displays the interface showing all installed extensions.\n *\n * This loads the list of installed extensions and displays each in a list.\n */\nDjblets.ExtensionManagerView = Backbone.View.extend({\n    events: {\n        'click .djblets-c-extensions__reload': '_reloadFull',\n    },\n\n    listItemsCollectionType: Djblets.Config.ListItems,\n    listItemType: ExtensionItem,\n    listItemViewType: ExtensionItemView,\n    listViewType: Djblets.Config.TableView,\n\n    /**\n     * Initialize the view.\n     */\n    initialize() {\n        this.list = new Djblets.Config.List(\n            {},\n            {\n                collection: new this.listItemsCollectionType(\n                    [],\n                    {\n                        model: this.listItemType,\n                    })\n            });\n    },\n\n    /**\n     * Render the view.\n     *\n     * Returns:\n     *     Djblets.ExtensionManagerView:\n     *     This object, for chaining.\n     */\n    render() {\n        const model = this.model;\n        const list = this.list;\n\n        this.listView = new this.listViewType({\n            el: this.$('.djblets-c-config-forms-list'),\n            model: list,\n            ItemView: this.listItemViewType,\n        });\n        this.listView.render().$el\n            .removeAttr('aria-busy')\n            .addClass('-all-items-are-multiline');\n\n        this._$listContainer = this.listView.$el.parent();\n\n        this.listenTo(model, 'loading', () => list.collection.reset());\n        this.listenTo(model, 'loaded', this._onLoaded);\n        model.load();\n\n        return this;\n    },\n\n    /**\n     * Handler for when the list of extensions is loaded.\n     *\n     * Renders each extension in the list. If the list is empty, this will\n     * display that there are no extensions installed.\n     */\n    _onLoaded() {\n        const items = this.list.collection;\n\n        this.model.installedExtensions.each(extension => {\n            const item = items.add({\n                extension: extension,\n            });\n\n            this.listenTo(item, 'needsReload', this._reloadFull);\n        });\n    },\n\n    /**\n     * Perform a full reload of the list of extensions on the server.\n     *\n     * This submits our form, which is set in the template to tell the\n     * ExtensionManager to do a full reload.\n     */\n    _reloadFull() {\n        this.el.submit();\n    },\n});\n\n\n})();\n"],"mappings":"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"}