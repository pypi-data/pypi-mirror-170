{"version":3,"file":"conditionOperatorModelTests.js","names":["suite","describe","it","op","Djblets","Forms","ConditionOperator","id","name","useValue","valueField","model","className","data","myModelKey","view","myViewKey","parse","expect","toBe","get","toEqual","modelClass","ConditionValueField","modelData","viewClass","ConditionValueFormFieldView","viewData","createValueField","toThrowError"],"sources":["../../../../../../../static/djblets/js/forms/models/tests/conditionOperatorModelTests.es6.js"],"sourcesContent":["suite('djblets/forms/models/ConditionOperator', function() {\n    describe('Initialization', function() {\n        it('With parse and data', function() {\n            const op = new Djblets.Forms.ConditionOperator({\n                id: 'my-op',\n                name: 'My Operator',\n                useValue: true,\n                valueField: {\n                    model: {\n                        className: 'Djblets.Forms.ConditionValueField',\n                        data: {\n                            myModelKey: 'my-value'\n                        }\n                    },\n                    view: {\n                        className: 'Djblets.Forms.ConditionValueFormFieldView',\n                        data: {\n                            myViewKey: 'my-value'\n                        }\n                    }\n                }\n            }, {\n                parse: true\n            });\n\n            expect(op.id).toBe('my-op');\n            expect(op.get('name')).toBe('My Operator');\n            expect(op.get('useValue')).toBe(true);\n            expect(op.get('valueField')).toEqual({\n                modelClass: Djblets.Forms.ConditionValueField,\n                modelData: {\n                    myModelKey: 'my-value'\n                },\n                viewClass: Djblets.Forms.ConditionValueFormFieldView,\n                viewData: {\n                    myViewKey: 'my-value'\n                }\n            });\n        });\n\n        it('With parse and data, but no valueField', function() {\n            const op = new Djblets.Forms.ConditionOperator({\n                id: 'my-op',\n                name: 'My Operator',\n                useValue: true\n            }, {\n                parse: true\n            });\n\n            expect(op.id).toBe('my-op');\n            expect(op.get('name')).toBe('My Operator');\n            expect(op.get('valueField')).toBe(null);\n            expect(op.get('useValue')).toBe(true);\n        });\n    });\n\n    describe('createValueField', function() {\n        it('With custom valueField', function() {\n            const op = new Djblets.Forms.ConditionOperator({\n                id: 'my-op',\n                name: 'My Operator',\n                valueField: {\n                    modelClass: Djblets.Forms.ConditionValueField,\n                    modelData: {\n                        myModelKey: 'my-value'\n                    },\n                    viewClass: Djblets.Forms.ConditionValueFormFieldView,\n                    viewData: {\n                        myViewKey: 'my-value'\n                    }\n                }\n            });\n\n            const valueField = op.createValueField('my-field');\n            expect(valueField.model.get('fieldName')).toBe('my-field');\n        });\n\n        it('Without custom valueField', function() {\n            const op = new Djblets.Forms.ConditionOperator({\n                id: 'my-op',\n                name: 'My Operator'\n            });\n\n            expect(() => op.createValueField('my-field')).toThrowError(\n                'This operator does not have a custom valueField.');\n        });\n    });\n});\n"],"mappings":"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"}